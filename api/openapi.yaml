openapi: 3.0.0
info:
  contact:
    x-twitter: Shutterstock
  description: "The Shutterstock API provides access to Shutterstock's library of\
    \ media, as well as information about customers' accounts and the contributors\
    \ that provide the media."
  title: Shutterstock API Explorer
  version: 1.1.32
  x-apisguru-categories:
  - media
  x-logo:
    url: https://twitter.com/Shutterstock/profile_image?size=original
  x-origin:
  - version: "3.0"
    format: openapi
    url: https://api-explorer.shutterstock.com/openapi.json
  x-providerName: shutterstock.com
servers:
- description: Live server
  url: https://api.shutterstock.com
- description: Sandbox server
  url: https://api-sandbox.shutterstock.com
tags:
- name: images
- name: videos
- name: audio
- name: editorial_images
- name: catalog
- name: sound_effects
- name: contributors
- name: computer_vision
- name: editorial_video
- name: custom_music
- name: users
- name: oauth
- name: test
paths:
  /v2/ai/audio/descriptors:
    get:
      description: This endpoint lists the descriptors that you can use in the audio
        regions in an audio render.
      operationId: Custommusic_listAudioDescriptors
      parameters:
      - description: Show descriptors with an average render speed that is greater
          than or equal to the specified value
        example: 5
        explode: true
        in: query
        name: render_speed_over
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 5
      - description: Show descriptors that contain the specified band (case-sentsitive)
        example: Corporate Folk Bonfire Band 1
        explode: true
        in: query
        name: band_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Corporate Folk Bonfire Band 1
      - description: Show descriptors with the specified band name (case-sensitive)
        example: Documentary Underscore Heartfelt Band 1
        explode: true
        in: query
        name: band_name
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Documentary Underscore Heartfelt Band 1
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-3-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 1
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 100
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-4-schema
        style: form
        x-konfig-original-example: 1
      - description: Show descriptors with the specified IDs (case-sensitive)
        example: documentary_underscore_heartfelt
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          maxItems: 20
          type: array
        style: form
        x-konfig-original-example: documentary_underscore_heartfelt
      - description: Show descriptors with the specified instrument name (case-sensitive)
        example: Precision Bass - Full
        explode: true
        in: query
        name: instrument_name
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Precision Bass - Full
      - description: Show descriptors with the specified instrument ID (case-sensitive)
        example: direct_fluorescent_synth_lead
        explode: true
        in: query
        name: instrument_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: direct_fluorescent_synth_lead
      - description: Show descriptors whose tempo range includes the specified tempo
          in beats per minute
        example: 90
        explode: true
        in: query
        name: tempo
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 90
      - description: Show descriptors with a tempo that is less than or equal to the
          specified number
        example: 120
        explode: true
        in: query
        name: tempo_to
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 120
      - description: Show descriptors that have a tempo range that includes the specified
          tempo in beats per minute
        example: 60
        explode: true
        in: query
        name: tempo_from
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 60
      - description: Show descriptors with the specified name (case-sensitive)
        example: Corporate Pop Inspirational High Energy
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Corporate Pop Inspirational High Energy
      - description: "Show descriptors with the specified tag, such as Cinematic or\
          \ Roomy (case-sensitive)"
        example: Cinematic
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Cinematic
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/DescriptorsListResult/example'
              schema:
                $ref: '#/components/schemas/DescriptorsListResult'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: List computer audio descriptors
      tags:
      - custom_music
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/ai/audio/descriptors" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const customMusicApi = new sstk.CustomMusicApi();

          const queryParams = {
            "tag": "Cinematic"
          };

          customMusicApi.listCustomDescriptors(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "tag": "Cinematic",
          };

          sstk.customMusic.listCustomDescriptors(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { CustomMusicApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: CustomMusicApiMethodsParams["listCustomDescriptors"] = {
            "tag": "Cinematic",
          };

          sstk.customMusic.listCustomDescriptors(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/ai/audio/descriptors",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock ai-audio list-custom-descriptors \
            --tag Cinematic
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-descriptors
      x-accepts: application/json
  /v2/ai/audio/instruments:
    get:
      description: "This endpoint lists the instruments that you can include in computer\
        \ audio. If you specify more than one search parameter, the API uses an AND\
        \ condition."
      operationId: Custommusic_listComputerAudioInstruments
      parameters:
      - description: Show instruments with the specified ID
        example: wood_blocks
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example: wood_blocks
      - description: Number of results per page
        example: 1
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 100
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-1-schema
        style: form
        x-konfig-original-example: 1
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-2-schema
        style: form
        x-konfig-original-example: 1
      - description: Show instruments with the specified name (case-sensitive)
        example: Precision Bass - Full
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Precision Bass - Full
      - description: "Show instruments with the specified tag, such as Percussion\
          \ or Strings (case-sensitive)"
        example: Percussion
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Percussion
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/InstrumentsListResult/example'
              schema:
                $ref: '#/components/schemas/InstrumentsListResult'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List computer audio instruments
      tags:
      - custom_music
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/ai/audio/instruments" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const customMusicApi = new sstk.CustomMusicApi();

          const queryParams = {
            "tag": "Percussion"
          };

          customMusicApi.listCustomInstruments(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "tag": "Percussion",
          };

          sstk.customMusic.listCustomInstruments(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { CustomMusicApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: CustomMusicApiMethodsParams["listCustomInstruments"] = {
            "tag": "Percussion",
          };

          sstk.customMusic.listCustomInstruments(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/ai/audio/instruments",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock ai-audio list-custom-instruments \
            --tag Percussion
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-instruments
      x-accepts: application/json
  /v2/ai/audio/renders:
    get:
      description: "This endpoint shows the status of one or more audio renders, including\
        \ download links for completed audio."
      operationId: Custommusic_getAudioRendersDetails
      parameters:
      - description: One or more render IDs
        example:
        - L2w7h9VNFlkzpllSUunSYayenKjN
        - BeHx3UNXzMBB4dGsC9aa6VxnpcWl
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - L2w7h9VNFlkzpllSUunSYayenKjN
        - BeHx3UNXzMBB4dGsC9aa6VxnpcWl
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/AudioRendersListResults/example'
              schema:
                $ref: '#/components/schemas/AudioRendersListResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get details about audio renders
      tags:
      - custom_music
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/ai/audio/renders" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "id=L2w7h9VNFlkzpllSUunSYayenKjN" \
            --data-urlencode "id=BeHx3UNXzMBB4dGsC9aa6VxnpcWl"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const customMusicApi = new sstk.CustomMusicApi();

          const renders = [
            "L2w7h9VNFlkzpllSUunSYayenKjN",
            "BeHx3UNXzMBB4dGsC9aa6VxnpcWl"
          ];

          customMusicApi.fetchRenders(renders)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "id": [
              "L2w7h9VNFlkzpllSUunSYayenKjN",
              "BeHx3UNXzMBB4dGsC9aa6VxnpcWl",
            ],
          };

          sstk.customMusic.fetchRenders(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { CustomMusicApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: CustomMusicApiMethodsParams["fetchRenders"] = {
            "id": [
              "L2w7h9VNFlkzpllSUunSYayenKjN",
              "BeHx3UNXzMBB4dGsC9aa6VxnpcWl",
            ],
          };

          sstk.customMusic.fetchRenders(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/ai/audio/renders?id=L2w7h9VNFlkzpllSUunSYayenKjN&id=BeHx3UNXzMBB4dGsC9aa6VxnpcWl",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock ai-audio fetch-renders \
            --id L2w7h9VNFlkzpllSUunSYayenKjN \
            --id BeHx3UNXzMBB4dGsC9aa6VxnpcWl
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-renders
      x-accepts: application/json
    post:
      description: This endpoint creates rendered audio from timeline data. It returns
        a render ID that you can use to download the finished audio when it is ready.
        The render ID is valid for up to 48 hours.
      operationId: Custommusic_createRenderedAudio
      requestBody:
        content:
          application/json:
            example:
              $ref: '#/components/schemas/CreateAudioRendersRequest/example'
            schema:
              $ref: '#/components/schemas/CreateAudioRendersRequest'
            x-konfig-original-example:
              $ref: '#/components/schemas/CreateAudioRendersRequest/example'
        description: "Parameters for the audio, including the timeline and information\
          \ about the output file"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audio_renders:
                    - created_date: 2021-01-26T17:10:22.000Z
                      files: []
                      id: njlpYoWWmb1AYs2nZyw7EcNWbAkZ
                      preset: MASTER_MP3
                      progress_percent: 0
                      status: WAITING_COMPOSE
                      timeline: {}
                      updated_date: 2021-01-26T18:10:22.000Z
              schema:
                $ref: '#/components/schemas/AudioRendersListResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Create rendered audio
      tags:
      - custom_music
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "audio_renders": [
              {
                "preset": "MASTER_MP3",
                "filename": "My_audio_ai.mp3",
                "timeline": {
                  "spans": [
                    {
                      "id": 111,
                      "span_type": "metered",
                      "time": 0,
                      "tempo": 80,
                      "regions": [
                        {
                          "id": 222,
                          "descriptor": "documentary_underscore_heartfelt",
                          "beat": 0,
                          "end_type": {
                            "beat": 17,
                            "event": "ending",
                            "type": "ringout"
                          },
                          "region": "music"
                        }
                      ],
                      "instrument_groups": [
                        {
                          "instrument_group": "full_aw_nylon_acoustic_lead_guitar",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_viola_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_devonshire_upright_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_first_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_second_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_kawai_grand_acoustic_piano_dreamy",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "sweet_kawai_grand_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_cello_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "span_type": "unmetered",
                      "time": 15
                    }
                  ]
                }
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/ai/audio/renders" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const customMusicApi = new sstk.CustomMusicApi();

          const body = {
            "audio_renders": [
              {
                "preset": "MASTER_MP3",
                "filename": "My_audio_ai.mp3",
                "timeline": {
                  "spans": [
                    {
                      "id": 111,
                      "span_type": "metered",
                      "time": 0,
                      "tempo": 80,
                      "regions": [
                        {
                          "id": 222,
                          "descriptor": "documentary_underscore_heartfelt",
                          "beat": 0,
                          "end_type": {
                            "beat": 17,
                            "event": "ending",
                            "type": "ringout"
                          },
                          "region": "music"
                        }
                      ],
                      "instrument_groups": [
                        {
                          "instrument_group": "full_aw_nylon_acoustic_lead_guitar",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_viola_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_devonshire_upright_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_first_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_second_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_kawai_grand_acoustic_piano_dreamy",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "sweet_kawai_grand_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_cello_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "span_type": "unmetered",
                      "time": 15
                    }
                  ]
                }
              }
            ]
          };

          customMusicApi.createAudioRenders(body)
            .then(async (data) => {
              const { id } = data.audio_renders[0];
              console.log(id);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const audioRendersBody = {
            "body": {
              "audio_renders": [
                {
                  "preset": "MASTER_MP3",
                  "filename": "My_audio_ai.mp3",
                  "timeline": {
                    "spans": [
                      {
                        "id": 111,
                        "span_type": "metered",
                        "time": 0,
                        "tempo": 80,
                        "regions": [
                          {
                            "id": 222,
                            "descriptor": "documentary_underscore_heartfelt",
                            "beat": 0,
                            "end_type": {
                              "beat": 17,
                              "event": "ending",
                              "type": "ringout",
                            },
                            "region": "music",
                          },
                        ],
                        "instrument_groups": [
                          {
                            "instrument_group": "full_aw_nylon_acoustic_lead_guitar",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_viola_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "warm_devonshire_upright_acoustic_piano",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_first_violin_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_second_violin_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "warm_kawai_grand_acoustic_piano_dreamy",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "sweet_kawai_grand_acoustic_piano",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_cello_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": "active",
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "span_type": "unmetered",
                        "time": 15,
                      },
                    ],
                  },
                },
              ],
            },
          };

          sstk.customMusic.createAudioRenders(audioRendersBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, {
            AudioRenderTimelineSpanRegionEndTypeEventEnum,
            AudioRenderTimelineSpanRegionEndTypeTypeEnum,
            AudioRenderTimelineSpanRegionRegionEnum,
            AudioRenderTimelineSpanSpanTypeEnum,
            CreateAudioRenderPresetEnum,
            AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum,
          } from "shutterstock-api";
          import type { CustomMusicApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const audioRendersBody: CustomMusicApiMethodsParams["createAudioRenders"] = {
            "body": {
              "audio_renders": [
                {
                  "preset": CreateAudioRenderPresetEnum.MASTERMP3,
                  "filename": "My_audio_ai.mp3",
                  "timeline": {
                    "spans": [
                      {
                        "id": 111,
                        "span_type": AudioRenderTimelineSpanSpanTypeEnum.Metered,
                        "time": 0,
                        "tempo": 80,
                        "regions": [
                          {
                            "id": 222,
                            "descriptor": "documentary_underscore_heartfelt",
                            "beat": 0,
                            "end_type": {
                              "beat": 17,
                              "event": AudioRenderTimelineSpanRegionEndTypeEventEnum.Ending,
                              "type": AudioRenderTimelineSpanRegionEndTypeTypeEnum.Ringout,
                            },
                            "region": AudioRenderTimelineSpanRegionRegionEnum.Music,
                          },
                        ],
                        "instrument_groups": [
                          {
                            "instrument_group": "full_aw_nylon_acoustic_lead_guitar",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_viola_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "warm_devonshire_upright_acoustic_piano",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_first_violin_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_second_violin_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "warm_kawai_grand_acoustic_piano_dreamy",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "sweet_kawai_grand_acoustic_piano",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                          {
                            "instrument_group": "nice_scoring_cello_ensemble",
                            "statuses": [
                              {
                                "beat": 0,
                                "status": AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum.Active,
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "span_type": AudioRenderTimelineSpanSpanTypeEnum.Unmetered,
                        "time": 15,
                      },
                    ],
                  },
                },
              ],
            },
          };

          sstk.customMusic.createAudioRenders(audioRendersBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "audio_renders" => [
              [
                "preset" => "MASTER_MP3",
                "filename" => "My_audio_ai.mp3",
                "timeline" => [
                  "spans" => [
                    [
                      "id" => 111,
                      "span_type" => "metered",
                      "time" => 0,
                      "tempo" => 80,
                      "regions" => [
                        [
                          "id" => 222,
                          "descriptor" => "documentary_underscore_heartfelt",
                          "beat" => 0,
                          "end_type" => [
                            "beat" => 17,
                            "event" => "ending",
                            "type" => "ringout"
                          ],
                          "region" => "music"
                        ]
                      ],
                      "instrument_groups" => [
                        [
                          "instrument_group" => "full_aw_nylon_acoustic_lead_guitar",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "nice_scoring_viola_ensemble",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "warm_devonshire_upright_acoustic_piano",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "nice_scoring_first_violin_ensemble",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "nice_scoring_second_violin_ensemble",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "warm_kawai_grand_acoustic_piano_dreamy",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "sweet_kawai_grand_acoustic_piano",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ],
                        [
                          "instrument_group" => "nice_scoring_cello_ensemble",
                          "statuses" => [
                            [
                              "beat" => 0,
                              "status" => "active"
                            ]
                          ]
                        ]
                      ]
                    ],
                    [
                      "span_type" => "unmetered",
                      "time" => 15
                    ]
                  ]
                ]
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/ai/audio/renders",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "audio_renders": [
              {
                "preset": "MASTER_MP3",
                "filename": "My_audio_ai.mp3",
                "timeline": {
                  "spans": [
                    {
                      "id": 111,
                      "span_type": "metered",
                      "time": 0,
                      "tempo": 80,
                      "regions": [
                        {
                          "id": 222,
                          "descriptor": "documentary_underscore_heartfelt",
                          "beat": 0,
                          "end_type": {
                            "beat": 17,
                            "event": "ending",
                            "type": "ringout"
                          },
                          "region": "music"
                        }
                      ],
                      "instrument_groups": [
                        {
                          "instrument_group": "full_aw_nylon_acoustic_lead_guitar",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_viola_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_devonshire_upright_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_first_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_second_violin_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "warm_kawai_grand_acoustic_piano_dreamy",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "sweet_kawai_grand_acoustic_piano",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        },
                        {
                          "instrument_group": "nice_scoring_cello_ensemble",
                          "statuses": [
                            {
                              "beat": 0,
                              "status": "active"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "span_type": "unmetered",
                      "time": 15
                    }
                  ]
                }
              }
            ]
          }' > data.json

          shutterstock ai-audio create-audio-renders data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-ai-audio-renders
      x-content-type: application/json
      x-accepts: application/json
  /v2/audio:
    get:
      description: "This endpoint lists information about one or more audio tracks,\
        \ including the description and publication date."
      operationId: Audio_listTracks
      parameters:
      - description: One or more audio IDs
        example:
        - "442583"
        - "434750"
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            pattern: "^[1-9]\\d*$"
            type: string
            x-pattern-description: A number that does not start with 0
          maxItems: 500
          minItems: 1
          type: array
        style: form
        x-konfig-original-example:
        - "442583"
        - "434750"
      - description: Amount of detail to render in the response
        example: full
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-get-parameters-1-schema
        style: form
        x-konfig-original-example: full
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/AudioDataList/example'
              schema:
                $ref: '#/components/schemas/AudioDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List audio tracks
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio
      x-accepts: application/json
  /v2/audio/collections:
    get:
      description: This endpoint lists your collections of audio tracks and their
        basic attributes.
      operationId: Audio_listCollections
      parameters:
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-get-parameters-0-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 100
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-get-parameters-1-schema
        style: form
        x-konfig-original-example: 100
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        example: share_code
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
        x-konfig-original-example: share_code
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.view
      summary: List audio collections
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-collections
      x-accepts: application/json
    post:
      description: "This endpoint creates one or more collections (soundboxes). To\
        \ add tracks, use `POST /v2/audio/collections/{id}/items`."
      operationId: Audio_createCollections
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Create a soundbox
                value:
                  name: Best rock music
            schema:
              $ref: '#/components/schemas/CollectionCreateRequest'
        description: Collection metadata
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionCreateResponse/example'
              schema:
                $ref: '#/components/schemas/CollectionCreateResponse'
          description: Successfully created audio collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.edit
      summary: Create audio collections
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "Best rock music"
          }'

          curl -X POST "https://api.shutterstock.com/v2/audio/collections" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const body = {
            "name": "Best rock music",
          };

          audioApi.createTrackCollection(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const newCollectionBody = {
            "body": {
              "name": "Best rock music",
            },
          };

          sstk.audio.createTrackCollection(newCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const newCollectionBody: AudioApiMethodsParams["createTrackCollection"] = {
            "body": {
              "name": "Best rock music",
            },
          };

          sstk.audio.createTrackCollection(newCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "name" => "Best rock music"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/collections",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "Best rock music"
          }' > data.json

          shutterstock images create-image-collection data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-audio-collections
      x-content-type: application/json
      x-accepts: application/json
  /v2/audio/collections/{id}:
    delete:
      description: This endpoint deletes a collection.
      operationId: Audio_deleteCollection
      parameters:
      - description: Collection ID
        example: "48433111"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "48433111"
      responses:
        "204":
          description: Successfully deleted collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Delete audio collections
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/audio/collections/48433111" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const collectionId = "48433107";

          audioApi.deleteTrackCollection(collectionId)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const deleteCollectionParams = {
            "id": collectionId,
          };

          sstk.audio.deleteTrackCollection(deleteCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const deleteCollectionParams: AudioApiMethodsParams["deleteTrackCollection"] = {
            "id": collectionId,
          };

          sstk.audio.deleteTrackCollection(deleteCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/collections/48433111",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_CUSTOMREQUEST => "DELETE",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock audio delete-track-collection 48433111
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-audio-collections-id
      x-accepts: application/json
    get:
      description: "This endpoint gets more detailed information about a collection,\
        \ including the number of items in it and when it was last updated. To get\
        \ the tracks in collections, use `GET /v2/audio/collections/{id}/items`."
      operationId: Audio_getCollectionDetails
      parameters:
      - description: Collection ID
        example: "48433107"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "48433107"
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
      - description: Code to retrieve a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Collection/example'
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the details of audio collections
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-collections-id
      x-accepts: application/json
    post:
      description: This endpoint sets a new name for a collection.
      operationId: Audio_setCollectionName
      parameters:
      - description: Collection ID
        example: "48433107"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "48433107"
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Renaming a soundbox
                value:
                  name: Best rock music
            schema:
              $ref: '#/components/schemas/CollectionUpdateRequest'
        description: Collection changes
        required: true
      responses:
        "204":
          description: Successfully updated collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Rename audio collections
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "Best rock music"
          }'

          curl -X POST "https://api.shutterstock.com/v2/audio/collections/48433107" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const collectionId = "48433107";

          const body = {
            "name": "Best rock music"
          };

          audioApi.renameTrackCollection(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const renameAudioBody = {
            "id": collectionId,
            "body": {
              "name": "Best rock music",
            },
          };

          sstk.audio.renameTrackCollection(renameAudioBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const renameAudioBody: AudioApiMethodsParams["renameTrackCollection"] = {
            "id": collectionId,
            "body": {
              "name": "Best rock music",
            },
          };

          sstk.audio.renameTrackCollection(renameAudioBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "name" => "Best rock music"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/collections/48433107",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "Best rock music"
          }' > data.json

          shutterstock audio rename-collection 48433107 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-audio-collections-id
      x-content-type: application/json
      x-accepts: application/json
  /v2/audio/collections/{id}/items:
    delete:
      description: This endpoint removes one or more tracks from a collection.
      operationId: Audio_removeTracksFromCollection
      parameters:
      - description: Collection ID
        example: "48433119"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "48433119"
      - description: One or more item IDs to remove from the collection
        example:
        - "76688182"
        - "40005859"
        explode: true
        in: query
        name: item_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "76688182"
        - "40005859"
      responses:
        "204":
          description: Successfully removed collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Remove audio tracks from collections
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/audio/collections/48433119/items?item_id=36345523" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const collectionId = "48433119";

          // Array of tracks to remove
          const tracksToRemove = {
            "item_id": [
              "76688182",
              "40005859"
            ]
          };

          audioApi.deleteTrackCollectionItems(collectionId, tracksToRemove)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const deleteTrackParams = {
            "id": collectionId,
            "item_id": [
              "76688182",
              "40005859",
            ],
          };

          sstk.audio.deleteTrackCollectionItems(deleteTrackParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433107";

          const deleteTrackParams: AudioApiMethodsParams["deleteTrackCollectionItems"] = {
            "id": collectionId,
            "item_id": [
              "76688182",
              "40005859",
            ],
          };

          sstk.audio.deleteTrackCollectionItems(deleteTrackParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/collections/48433119/items?item_id=495863218",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_CUSTOMREQUEST => "DELETE",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock audio delete-track-collection-items 48433119 \
            --item-id 36345523
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-audio-collections-id-items
      x-accepts: application/json
    get:
      description: This endpoint lists the IDs of tracks in a collection and the date
        that each was added.
      operationId: Audio_listCollectionItems
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-2-schema
        style: form
      - description: Code to retrieve the contents of a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - added_time: 2016-08-18T22:52:59.000Z
                      id: "76688182"
                      media_type: audio
                    - added_time: 2016-08-18T22:52:59.000Z
                      id: "40005859"
                      media_type: audio
                    page: 1
                    per_page: 2
              schema:
                $ref: '#/components/schemas/CollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the contents of audio collections
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-collections-id-items
      x-accepts: application/json
    post:
      description: This endpoint adds one or more tracks to a collection by track
        IDs.
      operationId: Audio_addTracksToCollection
      parameters:
      - description: Collection ID
        example: "48433115"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "48433115"
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Adds tracks to a soundbox
                value:
                  items:
                  - id: "442583"
                  - id: "7491192"
            schema:
              $ref: '#/components/schemas/CollectionItemRequest'
        description: List of items to add to collection
        required: true
      responses:
        "204":
          description: Successfully added collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Add audio tracks to collections
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "items": [
              {
                "id": "442583"
              },
              {
                "id": "7491192"
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/audio/collections/48433115/items" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const collectionId = "48433115";

          const body = {
            "items": [
              {
                "id": "442583"
              },
              {
                "id": "7491192"
              }
            ]
          };

          audioApi.addTrackCollectionItems(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433115";

          const addTrackBody = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "442583",
                },
                {
                  "id": "7491192",
                },
              ],
            },
          };

          sstk.audio.addTrackCollectionItems(addTrackBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "48433115";

          const addTrackBody: AudioApiMethodsParams["addTrackCollectionItems"] = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "442583",
                },
                {
                  "id": "7491192",
                },
              ],
            },
          };

          sstk.audio.addTrackCollectionItems(addTrackBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "items" => [
              [
                "id" => "442583"
              ],
              [
                "id" => "7491192"
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/collections/48433115/items",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "items": [
              {
                "id": "442583"
              },
              {
                "id": "7491192"
              }
            ]
          }' > data.json

          shutterstock audio add-collection-items 48433115 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-audio-collections-id-items
      x-content-type: application/json
      x-accepts: application/json
  /v2/audio/genres:
    get:
      description: This endpoint returns a list of all audio genres.
      operationId: Audio_listGenres
      parameters:
      - description: Which language the genres will be returned
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/GenreList/example'
              schema:
                $ref: '#/components/schemas/GenreList'
          description: OK
      security:
      - basic: []
      - customer_accessCode: []
      summary: List audio genres
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-genres
      x-accepts: application/json
  /v2/audio/instruments:
    get:
      description: This endpoint returns a list of all audio instruments.
      operationId: Audio_listInstruments
      parameters:
      - description: Which language the instruments will be returned in
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/InstrumentList/example'
              schema:
                $ref: '#/components/schemas/InstrumentList'
          description: OK
      security:
      - basic: []
      - customer_accessCode: []
      summary: List audio instruments
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-instruments
      x-accepts: application/json
  /v2/audio/licenses:
    get:
      description: This endpoint lists existing licenses. You can filter the results
        according to the track ID to see if you have an existing license for a specific
        track.
      operationId: Audio_listAudioLicenses
      parameters:
      - description: Show licenses for the specified track ID
        example: "1"
        explode: true
        in: query
        name: audio_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "1"
      - description: Restrict results by license. Prepending a `-` sign will exclude
          results by license
        example: "48433107"
        explode: true
        in: query
        name: license
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "48433107"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: end_date
          relationship: <=
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: start_date
          relationship: '>'
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-8-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-9-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - audio:
                        format:
                          size: clean_audio
                        id: "420298"
                      download_time: 2020-11-11T16:15:20.000Z
                      id: a10b7a7a5a02113a928f13e5ba196151d6
                      is_downloadable: true
                      license: premier_music_extended
                      metadata:
                        purchase_order: "123"
                      user:
                        username: jsmith
                    page: 1
                    per_page: 20
                    total_count: 1
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List audio licenses
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/audio/licenses" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            -G \
            --data-urlencode "start_date=2016-10-03T01:25:13.521Z" \
            --data-urlencode "end_date=2016-10-04T13:25:13.521Z" \
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const queryParams = {
            "start_date": "2016-10-03T01:25:13.521Z",
            "end_date": "2016-10-04T13:25:13.521Z"
          };

          audioApi.getTrackLicenseList(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.audio.getTrackLicenseList(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: AudioApiMethodsParams["getTrackLicenseList"] = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.audio.getTrackLicenseList(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "start_date" => "2016-10-03T01:25:13.521Z",
            "end_date" => "2016-10-04T13:25:13.521Z"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/licenses" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock audio get-track-license-list \
            --start-date "2016-10-03T01:25:13.521Z" \
            --end-date "2016-10-04T13:25:13.521Z"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-licenses
      x-accepts: application/json
    post:
      description: This endpoint gets licenses for one or more tracks. The download
        links in the response are valid for 8 hours.
      operationId: Audio_licenseTracks
      parameters:
      - description: License type
        example: audio_platform
        explode: true
        in: query
        name: license
        required: false
        schema:
          enum:
          - audio_platform
          - premier_music_basic
          - premier_music_extended
          - premier_music_pro
          - premier_music_comp
          - asset_all_music
          type: string
        style: form
        x-konfig-original-example: audio_platform
      - description: The ID of the search that led to licensing this track
        example: p5S6QwRikdFJTHXwsoiqTg
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: p5S6QwRikdFJTHXwsoiqTg
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Overwrite content of soundbox with new items
                value:
                  $ref: '#/components/schemas/LicenseAudioRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseAudioRequest'
        description: Tracks to license
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/LicenseAudioResultDataList/example'
              schema:
                $ref: '#/components/schemas/LicenseAudioResultDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.create
      summary: License audio tracks
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "audio": [
              {
                "audio_id": "591623",
                "license": "audio_platform",
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/audio/licenses" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const body = {
            "audio": [
              {
                "audio_id": "446348",
                "license": "audio_platform",
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          };

          audioApi.licenseTrack(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "audio": [
                {
                  "audio_id": "446348",
                  "license": "audio_platform",
                },
              ],
            },
          };

          sstk.audio.licenseTrack(licenseParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, { LicenseAudioLicenseEnum } from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: AudioApiMethodsParams["licenseTrack"] = {
            "body": {
              "audio": [
                {
                  "audio_id": "446348",
                  "license": LicenseAudioLicenseEnum.AudioPlatform,
                },
              ],
            },
          };

          sstk.audio.licenseTrack(licenseParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "audio" => [
              [
                "audio_id" => "591623",
                "license" => "audio_platform",
                "metadata" => [
                "customer_id" => "12345"
                ]
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "audio": [
              {
                "audio_id": "591623",
                "license": "audio_platform",
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          }' > data.json

          shutterstock audio license-track data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-audio-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/audio/licenses/{id}/downloads:
    post:
      description: This endpoint redownloads tracks that you have already received
        a license for. The download links in the response are valid for 8 hours.
      operationId: Audio_redownloadTracks
      parameters:
      - description: License ID
        example: e123
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: e123
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    shorts_loops_stems: http://download2.dev.shutterstock.com/gatekeeper/abc/original.zip
                    url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
              schema:
                $ref: '#/components/schemas/AudioUrl'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: Download audio tracks
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |
          curl -X POST "https://api.shutterstock.com/v2/audio/licenses/e123/downloads" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const licenseId = "e123"; // license ID, not track ID

          audioApi.downloadTracks(licenseId)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not track ID

          const queryParams = {
            "id": licenseId,
          };

          sstk.audio.downloadTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not track ID

          const queryParams: AudioApiMethodsParams["downloadTracks"] = {
            "id": licenseId,
          };

          sstk.audio.downloadTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/licenses/e123/downloads",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock audio download-tracks e123
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-audio-licenses-id-downloads
      x-accepts: application/json
  /v2/audio/moods:
    get:
      description: This endpoint returns a list of all audio moods.
      operationId: Audio_listMoods
      parameters:
      - description: Which language the moods will be returned in
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/MoodList/example'
              schema:
                $ref: '#/components/schemas/MoodList'
          description: OK
      security:
      - basic: []
      - customer_accessCode: []
      summary: List audio moods
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-moods
      x-accepts: application/json
  /v2/audio/search:
    get:
      description: "This endpoint searches for tracks. If you specify more than one\
        \ search parameter, the API uses an AND condition. Array parameters can be\
        \ specified multiple times; in this case, the API uses an AND or an OR condition\
        \ with those values, depending on the parameter."
      operationId: Audio_searchTracks
      parameters:
      - description: Show tracks with one of the specified artist names or IDs
        explode: true
        in: query
        name: artists
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
        style: form
      - deprecated: true
        description: (Deprecated; use bpm_from and bpm_to instead) Show tracks with
          the specified beats per minute
        explode: true
        in: query
        name: bpm
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
      - description: Show tracks with the specified beats per minute or faster
        example: 80
        explode: true
        in: query
        name: bpm_from
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 80
      - description: Show tracks with the specified beats per minute or slower
        example: 120
        explode: true
        in: query
        name: bpm_to
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 120
      - description: Show tracks with the specified duration in seconds
        example: 180
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 180
      - description: Show tracks with the specified duration or longer in seconds
        example: 30
        explode: true
        in: query
        name: duration_from
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 30
      - description: Show tracks with the specified duration or shorter in seconds
        example: 180
        explode: true
        in: query
        name: duration_to
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 180
      - description: "Show tracks with each of the specified genres; to get the list\
          \ of genres, use `GET /v2/audio/genres`"
        example:
        - Classical
        - Holiday
        explode: true
        in: query
        name: genre
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
        style: form
        x-konfig-original-example:
        - Classical
        - Holiday
      - description: Show instrumental music only
        example: true
        explode: true
        in: query
        name: is_instrumental
        required: false
        schema:
          type: boolean
          uniqueItems: true
        style: form
        x-konfig-original-example: true
      - description: "Show tracks with each of the specified instruments; to get the\
          \ list of instruments, use `GET /v2/audio/instruments`"
        example:
        - Trumpet
        - Percussion
        explode: true
        in: query
        name: instruments
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
        style: form
        x-konfig-original-example:
        - Trumpet
        - Percussion
      - description: "Show tracks with each of the specified moods; to get the list\
          \ of moods, use `GET /v2/audio/moods`"
        example:
        - Confident
        - Playful
        explode: true
        in: query
        name: moods
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
        style: form
        x-konfig-original-example:
        - Confident
        - Playful
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-11-schema
        style: form
      - description: Number of results per page
        example: 1
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          uniqueItems: true
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-12-schema
        style: form
        x-konfig-original-example: 1
      - description: One or more search terms separated by spaces
        example: drum
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
        x-konfig-original-example: drum
      - description: Sort by
        example: score
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - score
          - ranking_all
          - artist
          - title
          - bpm
          - freshness
          - duration
          type: string
          uniqueItems: true
        style: form
        x-konfig-original-example: score
      - description: Sort order
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          example: desc
          type: string
          uniqueItems: true
          x-konfig-original-example: desc
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-15-schema
        style: form
      - description: "Show tracks with the specified vocal description (male, female)"
        example: female
        explode: true
        in: query
        name: vocal_description
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
        x-konfig-original-example: female
      - description: Amount of detail to render in the response
        example: full
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          uniqueItems: true
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-17-schema
        style: form
        x-konfig-original-example: full
      - description: Fields to display in the response; see the documentation for
          the fields parameter in the overview section
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
      - description: Which library to search
        explode: true
        in: query
        name: library
        required: false
        schema:
          default: premier
          enum:
          - shutterstock
          - premier
          example: premier
          type: string
          uniqueItems: true
          x-konfig-original-example: premier
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-19-schema
        style: form
      - description: Which language to search in
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/AudioSearchResults/example'
              schema:
                $ref: '#/components/schemas/AudioSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search for tracks
      tags:
      - audio
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/audio/search" \
            --header "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "query=bluegrass" \
            --data-urlencode "duration_from=60" \
            --data-urlencode "moods=uplifting"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const audioApi = new sstk.AudioApi();

          const queryParams = {
            "query": "bluegrass",
            "duration_from": 60,
            "moods": ["uplifting"]
          };

          audioApi.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "air",
            "duration_from": 60,
          };

          sstk.audio.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { AudioApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: AudioApiMethodsParams["searchTracks"] = {
            "query": "bluegrass",
            "duration_from": 60,
            "moods": ["uplifting"],
          };

          sstk.audio.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "bluegrass",
            "duration_from" => 60,
            "moods" => "uplifting"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/audio/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock audio search-tracks \
            --query bluegrass \
            --duration-from 60 \
            --moods uplifting
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-search
      x-accepts: application/json
  /v2/audio/{id}:
    get:
      description: "This endpoint shows information about a track, including its genres,\
        \ instruments, and other attributes."
      operationId: Audio_getTrackDetails
      parameters:
      - description: Audio track ID
        example: 442583
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 442583
      - description: Amount of detail to render in the response
        example: full
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-id-get-parameters-1-schema
        style: form
        x-konfig-original-example: full
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Audio/example'
              schema:
                $ref: '#/components/schemas/Audio'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get details about audio tracks
      tags:
      - audio
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-audio-id
      x-accepts: application/json
  /v2/bulk_search/images:
    post:
      description: This endpoint runs up to 5 image searches in a single request and
        returns up to 20 results per search. You can provide global search parameters
        in the query parameters and override them for each search in the body parameter.
        The query and body parameters are the same as in the `GET /v2/images/search`
        endpoint.
      operationId: Images_runMultipleSearches
      parameters:
      - description: Show images added on the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show images added on or after the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: "Show images with the specified aspect ratio or higher, using\
          \ a positive decimal of the width divided by the height, such as 1.7778\
          \ for a 16:9 image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio_min
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: "Show images with the specified aspect ratio or lower, using\
          \ a positive decimal of the width divided by the height, such as 1.7778\
          \ for a 16:9 image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio_max
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: "Show images with the specified aspect ratio, using a positive\
          \ decimal of the width divided by the height, such as 1.7778 for a 16:9\
          \ image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: Show images added before the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show images with the specified Shutterstock-defined category;
          specify a category name or ID
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Specify either a hexadecimal color in the format '4F21EA' or
          'grayscale'; the API returns images that use similar colors
        example: 4F21EA
        explode: true
        in: query
        name: color
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 4F21EA
      - description: "Show images with the specified contributor names or IDs, allows\
          \ multiple"
        example:
        - "123456"
        explode: true
        in: query
        name: contributor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "123456"
      - description: "Show images from contributors in one or more specified countries,\
          \ or start with NOT to exclude a country from the search"
        example: US
        explode: true
        in: query
        name: contributor_country
        required: false
        schema: {}
        style: form
        x-konfig-original-example: US
      - description: Fields to display in the response; see the documentation for
          the fields parameter in the overview section
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
      - deprecated: true
        description: (Deprecated; use height_from and height_to instead) Show images
          with the specified height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: integer
        style: form
      - description: "Show images with the specified height or larger, in pixels"
        example: 1080
        explode: true
        in: query
        name: height_from
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1080
      - description: "Show images with the specified height or smaller, in pixels"
        example: 1080
        explode: true
        in: query
        name: height_to
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1080
      - description: Show images of the specified type
        example: photo
        explode: true
        in: query
        name: image_type
        required: false
        schema:
          items:
            enum:
            - photo
            - illustration
            - vector
            type: string
          type: array
        style: form
        x-konfig-original-example: photo
      - description: Hide results with potentially unsafe keywords
        explode: true
        in: query
        name: keyword_safe_search
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-15-schema
        style: form
      - description: Set query and result language (uses Accept-Language header if
          not set)
        example: fr
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: fr
      - description: Show only images with the specified license
        explode: true
        in: query
        name: license
        required: false
        schema:
          items:
            default: commercial
            enum:
            - commercial
            - editorial
            - enhanced
            example: commercial
            type: string
            x-konfig-original-example: commercial
            x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-17-schema-items
          type: array
        style: form
      - description: Show image results with the specified model IDs
        example:
        - "12345"
        - "67890"
        explode: true
        in: query
        name: model
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "12345"
        - "67890"
      - description: Show image results with horizontal or vertical orientation
        example: vertical
        explode: true
        in: query
        name: orientation
        required: false
        schema:
          enum:
          - horizontal
          - vertical
          type: string
        style: form
        x-konfig-original-example: vertical
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-20-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 10
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 20
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-21-schema
        style: form
        x-konfig-original-example: 10
      - description: Show images of people with a signed model release
        example: true
        explode: true
        in: query
        name: people_model_released
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: Show images that feature people of the specified age category
        example: 20s
        explode: true
        in: query
        name: people_age
        required: false
        schema:
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        style: form
        x-konfig-original-example: 20s
      - description: "Show images with people of the specified ethnicities, or start\
          \ with NOT to show images without those ethnicities"
        example: hispanic
        explode: true
        in: query
        name: people_ethnicity
        required: false
        schema:
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            - NOT african
            - NOT african_american
            - NOT black
            - NOT brazilian
            - NOT chinese
            - NOT caucasian
            - NOT east_asian
            - NOT hispanic
            - NOT japanese
            - NOT middle_eastern
            - NOT native_american
            - NOT pacific_islander
            - NOT south_asian
            - NOT southeast_asian
            - NOT other
            type: string
          type: array
        style: form
        x-konfig-original-example: hispanic
      - description: Show images with people of the specified gender
        example: both
        explode: true
        in: query
        name: people_gender
        required: false
        schema:
          enum:
          - male
          - female
          - both
          type: string
        style: form
        x-konfig-original-example: both
      - description: Show images with the specified number of people
        example: 2
        explode: true
        in: query
        name: people_number
        required: false
        schema:
          maximum: 4
          minimum: 0
          type: integer
        style: form
        x-konfig-original-example: 2
      - description: Raise or lower search result rankings based on the result's relevance
          to a specified region; you can provide a country code or an IP address from
          which the API infers a country
        example: US
        explode: true
        in: query
        name: region
        required: false
        schema:
          format: country-code-2
          type: string
        style: form
        x-konfig-original-example: US
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-28-schema
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: popular
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-29-schema
        style: form
      - description: Spellcheck the search query and return results on suggested spellings
        explode: true
        in: query
        name: spellcheck_query
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-30-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-31-schema
        style: form
      - deprecated: true
        description: (Deprecated; use width_from and width_to instead) Show images
          with the specified width
        explode: true
        in: query
        name: width
        required: false
        schema:
          type: integer
        style: form
      - description: "Show images with the specified width or larger, in pixels"
        example: 1920
        explode: true
        in: query
        name: width_from
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1920
      - description: "Show images with the specified width or smaller, in pixels"
        example: 1920
        explode: true
        in: query
        name: width_to
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1920
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/BulkImageSearchRequest/example'
            schema:
              $ref: '#/components/schemas/BulkImageSearchRequest'
        description: List of queries to request results for and filters to apply per
          query; these values override the defaults in the query parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/BulkImageSearchResults/example'
              schema:
                $ref: '#/components/schemas/BulkImageSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Run multiple image searches
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          DATA='[
            {
              "query": "cat",
              "license": ["editorial"],
              "sort": "popular"
            },
            {
              "query": "dog",
              "orientation": "horizontal"
            }
          ]'

          curl -X POST "https://api.shutterstock.com/v2/bulk_search/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H 'Content-Type: application/json' \
            -d "$DATA"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const bulkSearchApi = new sstk.BulkSearchApi();

          const body = [
            {
              "query": "cat",
              "license": ["editorial"],
              "sort": "popular"
            },
            {
              "query": "dog",
              "orientation": "horizontal"
            }
          ];

          bulkSearchApi.bulkSearchImages(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const searchBody = {
            "body": [
              {
                "query": "cat",
                "license": ["editorial"],
                "sort": "popular"
              },
              {
                "query": "dog",
                "orientation": "horizontal"
              }
            ]
          };

          sstk.bulkSearch.bulkSearchImages(searchBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { BulkSearchApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const searchBody: BulkSearchApiMethodsParams["bulkSearchImages"] = {
            "body": [
              {
                "query": "cat",
                "license": ["editorial"],
                "sort": "popular"
              },
              {
                "query": "dog",
                "orientation": "horizontal"
              }
            ]
          };

          sstk.bulkSearch.bulkSearchImages(searchBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            [
              "query" => "cat",
              "license" => ["editorial"],
              "sort" => "popular"
            ],
            [
              "query" => "dog",
              "orientation" => "horizontal"
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/bulk_search/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '[
            {
              "query": "cat",
              "license": ["editorial"],
              "sort": "popular"
            },
            {
              "query": "dog",
              "orientation": "horizontal"
            }
          ]' > data.json

          shutterstock bulk-search bulk-search-images data.json
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /v2/catalog/collections:
    get:
      description: This endpoint returns a list of catalog collections.
      operationId: Catalog_listCollections
      parameters:
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-0-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 20
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 2
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-1-schema
        style: form
        x-konfig-original-example: 20
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-2-schema
        style: form
      - description: Set to true to omit collections that you own and return only
          collections  that are shared with you
        explode: true
        in: query
        name: shared
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollectionDataList/example'
              schema:
                $ref: '#/components/schemas/CatalogCollectionDataList'
          description: OK
        "400":
          description: Invalid status value
      security:
      - customer_accessCode:
        - collections.view
      summary: List catalog collections
      tags:
      - catalog
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-catalog-collections
      x-accepts: application/json
    post:
      description: "This endpoint creates a catalog collection and optionally adds\
        \ assets. To add assets to the collection later, use `PATCH /v2/catalog/collections/{collection_id}/items`."
      operationId: Catalog_createCollection
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Create Collection Request
                value:
                  $ref: '#/components/schemas/CreateCatalogCollection/example'
            schema:
              $ref: '#/components/schemas/CreateCatalogCollection'
        description: "Create a catalog collection and, optionally, add items."
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollection/example'
              schema:
                $ref: '#/components/schemas/CatalogCollection'
          description: OK
      security:
      - customer_accessCode:
        - collections.view
        - collections.edit
      summary: Create catalog collections
      tags:
      - catalog
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-catalog-collections
      x-content-type: application/json
      x-accepts: application/json
  /v2/catalog/collections/{collection_id}:
    delete:
      description: This endpoint deletes a catalog collection. It does not remove
        the assets from the user's account's catalog.
      operationId: Catalog_deleteCollection
      parameters:
      - description: The ID of the collection to delete
        example: "126351028"
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351028"
      responses:
        "204":
          description: OK
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Delete catalog collections
      tags:
      - catalog
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-catalog-collections-collection_id
      x-accepts: application/json
    patch:
      description: This endpoint updates the metadata of a catalog collection.
      operationId: Catalog_updateCollectionMetadata
      parameters:
      - description: ID of collection that needs to be modified
        example: "126351028"
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351028"
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Collection Metadata
                value:
                  $ref: '#/components/schemas/UpdateCatalogCollection/example'
            schema:
              $ref: '#/components/schemas/UpdateCatalogCollection'
        description: Collections Metadata to update
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollection/example'
              schema:
                $ref: '#/components/schemas/CatalogCollection'
          description: OK
      security:
      - customer_accessCode:
        - collections.view
        - collections.edit
      summary: Update collection metadata
      tags:
      - catalog
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock, { UpdateCatalogCollectionVisibilityEnum } from "shutterstock-api";
          import type { CatalogApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const body: CatalogApiMethodsParams["updateCollection"] = {
            "collection_id": "126351028",
            "body": {
              "name": "My Collection",
              "visibility": UpdateCatalogCollectionVisibilityEnum.Private,
              "cover_asset": {
                "id": "123"
              }
            }
          };

          sstk.catalog.updateCollection(body)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--v2-catalog-collections-collection_id
      x-content-type: application/json
      x-accepts: application/json
  /v2/catalog/collections/{collection_id}/items:
    delete:
      description: This endpoint removes assets from a catalog collection. It does
        not remove the assets from the user's account's catalog.
      operationId: Catalog_removeItemsFromCollection
      parameters:
      - description: The ID of the collection to remove assets from
        example: "126351028"
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351028"
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Remove collection items
                value:
                  $ref: '#/components/schemas/RemoveCatalogCollectionItems/example'
            schema:
              $ref: '#/components/schemas/RemoveCatalogCollectionItems'
        description: Items to remove from the collection
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollection/example'
              schema:
                $ref: '#/components/schemas/CatalogCollection'
          description: OK
      security:
      - customer_accessCode:
        - collections.view
        - collections.edit
      summary: Remove items from catalog collection
      tags:
      - catalog
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-catalog-collections-collection_id-items
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: This endpoint adds assets to a catalog collection. It also automatically
        adds the assets to the user's account's catalog.
      operationId: Catalog_addToCollectionItems
      parameters:
      - description: The ID of the collection to add assets to
        example: "126351028"
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351028"
      requestBody:
        content:
          application/json:
            examples:
              default:
                description: Add collection items
                value:
                  $ref: '#/components/schemas/CreateCatalogCollectionItems/example'
            schema:
              $ref: '#/components/schemas/CreateCatalogCollectionItems'
        description: Collection item attributes to add to collection
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollection/example'
              schema:
                $ref: '#/components/schemas/CatalogCollection'
          description: OK
      security:
      - customer_accessCode:
        - collections.view
        - collections.edit
      summary: Add items to catalog collections
      tags:
      - catalog
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-catalog-collections-collection_id-items
      x-content-type: application/json
      x-accepts: application/json
  /v2/catalog/search:
    get:
      description: "This endpoint searches for assets in the account's catalog. If\
        \ you specify more than one search parameter, the API uses an AND condition.\
        \ Array parameters can be specified multiple times; in this case, the API\
        \ uses an AND or an OR condition with those values, depending on the parameter.\
        \ You can also filter search terms out in the `query` parameter by prefixing\
        \ the term with NOT."
      operationId: Catalog_searchAssets
      parameters:
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-0-schema
        style: form
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-1-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 50
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-2-schema
        style: form
        x-konfig-original-example: 50
      - description: One or more search terms separated by spaces
        example: dogs on the beach
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: dogs on the beach
      - description: Filter by collection id
        explode: true
        in: query
        name: collection_id
        required: false
        schema:
          example:
          - "123456"
          - "456789"
          - "13579"
          items:
            type: string
          maxItems: 50
          type: array
          x-konfig-original-example:
          - "123456"
          - "456789"
          - "13579"
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-4-schema
        style: form
      - description: Filter by asset type
        explode: true
        in: query
        name: asset_type
        required: false
        schema:
          example:
          - image
          - editorial-image
          items:
            enum:
            - image
            - video
            - audio
            - elements
            - editorial-image
            - editorial-video
            type: string
          type: array
          x-konfig-original-example:
          - image
          - editorial-image
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-5-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CatalogCollectionItemDataList/example'
              schema:
                $ref: '#/components/schemas/CatalogCollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.view
      summary: Search catalogs for assets
      tags:
      - catalog
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/catalog/search" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "page=1" \
            --data-urlencode "per_page=50" \
            --data-urlencode "collection_id=126351028" \
            --data-urlencode "collection_id=126371055" \
            --data-urlencode "query=dogs on the beach"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const catalogApi = new sstk.CatalogApi();

          const queryParams = {
            "page": 1,
            "per_page": 50,
            "collection_id": ["126351028", "126371055"],
            "query": "dogs on the beach",
          };

          catalogApi.searchCatalog(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "page": 1,
            "per_page": 50,
            "collection_id": ["126351028", "126371055"],
            "query": "dogs on the beach",
          };

          sstk.catalog.searchCatalog(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { CatalogApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: CatalogApiMethodsParams["searchCatalog"] = {
            "page": 1,
            "per_page": 50,
            "collection_id": ["126351028", "126371055"],
            "query": "dogs on the beach",
          };

          sstk.catalog.searchCatalog(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "page" => 1,
            "per_page" => 50,
            "collection_id" => ["126351028", "126371055"],
            "query" => "dogs on the beach"
          ];

          $encodedQueryFields = preg_replace(
            "/\%5B\d+\%5D/",
            "",
            http_build_query($queryFields),
          );

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/catalog/search?$encodedQueryFields",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock catalog search-catalog \
            --page 1 \
            --per_page 50 \
            --collection_id 126351028 \
            --collection_id 126371055 \
            --query "dogs on the beach"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-catalog-search
      x-accepts: application/json
  /v2/contributors:
    get:
      description: "This endpoint lists information about one or more contributors,\
        \ including contributor type, equipment they use and other attributes."
      operationId: Contributors_getDetailsMultiple
      parameters:
      - description: One or more contributor IDs
        example:
        - 800506
        - 1653538
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - 800506
        - 1653538
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ContributorProfileDataList/example'
              schema:
                $ref: '#/components/schemas/ContributorProfileDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode: []
      - basic: []
      summary: Get details about multiple contributors
      tags:
      - contributors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-contributors
      x-accepts: application/json
  /v2/contributors/{contributor_id}:
    get:
      description: "This endpoint shows information about a single contributor, including\
        \ contributor type, equipment they use, and other attributes."
      operationId: Contributors_getDetails
      parameters:
      - description: Contributor ID
        example: 1653538
        explode: false
        in: path
        name: contributor_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 1653538
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ContributorProfile/example'
              schema:
                $ref: '#/components/schemas/ContributorProfile'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode: []
      - basic: []
      summary: Get details about a single contributor
      tags:
      - contributors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id
      x-accepts: application/json
  /v2/contributors/{contributor_id}/collections:
    get:
      description: This endpoint lists collections based on contributor ID.
      operationId: Contributors_listCollections
      parameters:
      - description: Contributor ID
        example: 800506
        explode: false
        in: path
        name: contributor_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 800506
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - newest
          - last_updated
          - item_count
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Contributor not found
      security:
      - customer_accessCode: []
      - basic: []
      summary: List contributors' collections
      tags:
      - contributors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections
      x-accepts: application/json
  /v2/contributors/{contributor_id}/collections/{id}:
    get:
      description: "This endpoint gets more detailed information about a contributor's\
        \ collection, including its cover image, timestamps for its creation, and\
        \ most recent update. To get the items in collections, use GET /v2/contributors/{contributor_id}/collections/{id}/items."
      operationId: Contributors_getCollectionDetails
      parameters:
      - description: Contributor ID
        example: 800506
        explode: false
        in: path
        name: contributor_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 800506
      - description: Collection ID that belongs to the contributor
        example: 1991678
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 1991678
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Collection/example'
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Set not found
      security:
      - customer_accessCode: []
      - basic: []
      summary: Get details about contributors' collections
      tags:
      - contributors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections-id
      x-accepts: application/json
  /v2/contributors/{contributor_id}/collections/{id}/items:
    get:
      description: This endpoint lists the IDs of items in a contributor's collection
        and the date that each was added.
      operationId: Contributors_getCollectionItems
      parameters:
      - description: Contributor ID
        example: 800506
        explode: false
        in: path
        name: contributor_id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 800506
      - description: Collection ID that belongs to the contributor
        example: 1991678
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 1991678
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - newest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - added_time: 2014-05-01T09:49:46.000Z
                      id: "168592952"
                      media_type: image
                    - added_time: 2014-05-01T09:49:59.000Z
                      id: "88269310"
                      media_type: image
                    - added_time: 2014-05-01T09:50:21.000Z
                      id: "94373977"
                      media_type: image
              schema:
                $ref: '#/components/schemas/CollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Set not found
      security:
      - customer_accessCode: []
      - basic: []
      summary: Get the items in contributors' collections
      tags:
      - contributors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections-id-items
      x-accepts: application/json
  /v2/cv/images:
    post:
      description: "This endpoint uploads an image for reverse image or video search.\
        \ Images must be in JPEG or PNG format. To get the search results, pass the\
        \ upload ID that this endpoint returns to the GET /v2/cv/similar/images or\
        \ GET /v2/cv/similar/videos endpoints. Contact us for access to this endpoint."
      operationId: Computervision_uploadImage
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/ImageCreateRequest/example'
            schema:
              $ref: '#/components/schemas/ImageCreateRequest'
        description: "A Base 64 encoded jpeg or png; images can be no larger than\
          \ 10mb and can be no larger than 10,000 pixels in width or height"
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ComputerVisionImageCreateResponse/example'
              schema:
                $ref: '#/components/schemas/ComputerVisionImageCreateResponse'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "413":
          description: Payload Too Large
        "415":
          description: Unsupported Media Type
      security:
      - basic: []
      - customer_accessCode: []
      summary: Upload images
      tags:
      - computer_vision
      x-code-samples:
      - lang: shell
        source: |
          curl -X POST "https://api.shutterstock.com/v2/cv/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"base64_image\":\"`base64 myImage.jpg | tr -d '\n'`\"}"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");
          const fs = require("fs");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const computerVisionApi = new sstk.ComputerVisionApi();

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const body = new sstk.ImageCreateRequest(base64File);

          computerVisionApi.uploadImage(body)
            .then((data) => {
              console.log(data.upload_id);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");
          const fs = require("fs");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ComputerVisionApiMethodsParams } from "shutterstock-api";

          import * as fs from "fs";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody: ComputerVisionApiMethodsParams["uploadImage"] = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $imageData = file_get_contents("myImage.jpg");
          $encodedImageData = base64_encode($imageData);

          $uploadBody = [
            "base64_image" => $encodedImageData
          ];
          $uploadEncodedBody = json_encode($uploadBody);

          $uploadOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $uploadEncodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $uploadOptions);
          $uploadResponse = curl_exec($handle);
          curl_close($handle);

          $uploadDecodedResponse = json_decode($uploadResponse);
          print_r($uploadDecodedResponse->upload_id);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo "{\"base64_image\":\"`base64 myImage.jpg  | tr -d '\n'`\"}" > data.json

          shutterstock cv upload-image data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-cv-images
      x-content-type: application/json
      x-accepts: application/json
  /v2/cv/keywords:
    get:
      description: This endpoint returns a list of suggested keywords for a media
        item that you specify or upload.
      operationId: Computervision_listSuggestedKeywords
      parameters:
      - description: The asset ID or upload ID to suggest keywords for
        example: U6ba16262e3bc2db470b8e3cfa8aaab25
        explode: true
        in: query
        name: asset_id
        required: true
        schema: {}
        style: form
        x-konfig-original-example: U6ba16262e3bc2db470b8e3cfa8aaab25
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/KeywordDataList/example'
              schema:
                $ref: '#/components/schemas/KeywordDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "415":
          description: Unsupported Media Type
      security:
      - basic: []
      - customer_accessCode: []
      summary: List suggested keywords
      tags:
      - computer_vision
      x-code-samples:
      - lang: shell
        source: |-
          RESPONSE=$(curl -X POST "https://api.shutterstock.com/v2/cv/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"base64_image\":\"`base64 myImage.jpg | tr -d '\n'`\"}")

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id <<< $RESPONSE)

          curl -X GET "https://api.shutterstock.com/v2/cv/keywords" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "asset_id=$UPLOAD_ID"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");
          const fs = require("fs");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const computerVisionApi = new sstk.ComputerVisionApi();

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const body = new sstk.ImageCreateRequest(base64File);

          computerVisionApi.uploadImage(body)
            .then((data) => {
              console.log(data.upload_id);
              return computerVisionApi.getKeywords(data.upload_id);
            })
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");
          const fs = require("fs");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);
              const queryParams = {
                "asset_id": data.upload_id,
              };
              return sstk.computerVision.getKeywords(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ComputerVisionApiMethodsParams } from "shutterstock-api";

          import * as fs from "fs";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody: ComputerVisionApiMethodsParams["uploadImage"] = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);
              const queryParams: ComputerVisionApiMethodsParams["getKeywords"] = {
                "asset_id": data.upload_id,
              };
              return sstk.computerVision.getKeywords(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $imageData = file_get_contents("myImage.jpg");
          $encodedImageData = base64_encode($imageData);

          $uploadBody = [
            "base64_image" => $encodedImageData
          ];
          $uploadEncodedBody = json_encode($uploadBody);

          $uploadOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $uploadEncodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $uploadOptions);
          $uploadResponse = curl_exec($handle);
          curl_close($handle);

          $uploadDecodedResponse = json_decode($uploadResponse);
          print_r($uploadDecodedResponse->upload_id);

          $keywordsQuery = [
            "asset_id" => $uploadDecodedResponse->upload_id,
          ];

          $keywordsOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/keywords?" . http_build_query($keywordsQuery),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $keywordsOptions);
          $keywordsResponse = curl_exec($handle);
          curl_close($handle);

          print_r($keywordsResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo "{\"base64_image\":\"`base64 myImage.jpg  | tr -d '\n'`\"}" > data.json

          shutterstock cv upload-image data.json > response.json

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id response.json)

          shutterstock cv get-keywords \
            --asset-id $UPLOAD_ID
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-cv-keywords
      x-accepts: application/json
  /v2/cv/similar/images:
    get:
      description: This endpoint returns images that are visually similar to an image
        that you specify or upload.
      operationId: Computervision_listSimilarImages
      parameters:
      - description: The asset ID or upload ID to find similar images for
        example: U6ba16262e3bc2db470b8e3cfa8aaab25
        explode: true
        in: query
        name: asset_id
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: U6ba16262e3bc2db470b8e3cfa8aaab25
      - description: Show only images with the specified license
        explode: true
        in: query
        name: license
        required: false
        schema:
          default:
          - commercial
          example:
          - commercial
          items:
            enum:
            - commercial
            - editorial
            type: string
          type: array
          x-konfig-original-example:
          - commercial
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-1-schema
        style: form
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-2-schema
        style: form
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-4-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-5-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-6-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ImageSearchResults/example'
              schema:
                $ref: '#/components/schemas/ImageSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List similar images
      tags:
      - computer_vision
      x-code-samples:
      - lang: shell
        source: |
          RESPONSE=$(curl -X POST "https://api.shutterstock.com/v2/cv/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"base64_image\":\"`base64 myImage.jpg | tr -d '\n'`\"}")

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id <<< $RESPONSE)

          curl -X GET "https://api.shutterstock.com/v2/cv/similar/images" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "asset_id=$UPLOAD_ID"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");
          const fs = require("fs");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const computerVisionApi = new sstk.ComputerVisionApi();

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const body = new sstk.ImageCreateRequest(base64File);

          computerVisionApi.uploadImage(body)
            .then((data) => {
              console.log(data.upload_id);
              return computerVisionApi.getSimilarImages(data.upload_id);
            })
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");
          const fs = require("fs");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarImages(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ComputerVisionApiMethodsParams } from "shutterstock-api";

          import * as fs from "fs";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody: ComputerVisionApiMethodsParams["uploadImage"] = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams: ComputerVisionApiMethodsParams["getSimilarImages"] = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarImages(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $imageData = file_get_contents("myImage.jpg");
          $encodedImageData = base64_encode($imageData);

          $uploadBody = [
            "base64_image" => $encodedImageData
          ];
          $uploadEncodedBody = json_encode($uploadBody);

          $uploadOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $uploadEncodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $uploadOptions);
          $uploadResponse = curl_exec($handle);
          curl_close($handle);

          $uploadDecodedResponse = json_decode($uploadResponse);
          print_r($uploadDecodedResponse->upload_id);

          $similarQuery = [
            "asset_type" => "images",
            "asset_id" => $uploadDecodedResponse->upload_id,
          ];

          $similarOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/similar/images?" . http_build_query($similarQuery),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $similarOptions);
          $similarResponse = curl_exec($handle);
          curl_close($handle);

          print_r($similarResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo "{\"base64_image\":\"`base64 myImage.jpg  | tr -d '\n'`\"}" > data.json

          shutterstock cv upload-image data.json > response.json

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id response.json)

          shutterstock cv get-similar-images \
            --asset-id $UPLOAD_ID
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-cv-similar-images
      x-accepts: application/json
  /v2/cv/similar/videos:
    get:
      description: This endpoint returns videos that are visually similar to an image
        that you specify or upload.
      operationId: Computervision_listSimilarVideos
      parameters:
      - description: The asset ID or upload ID to find similar videos for
        example: U6ba16262e3bc2db470b8e3cfa8aaab25
        explode: true
        in: query
        name: asset_id
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: U6ba16262e3bc2db470b8e3cfa8aaab25
      - description: Show only videos with the specified license
        explode: true
        in: query
        name: license
        required: false
        schema:
          default:
          - commercial
          example:
          - commercial
          items:
            enum:
            - commercial
            - editorial
            type: string
          type: array
          x-konfig-original-example:
          - commercial
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-1-schema
        style: form
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-2-schema
        style: form
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-4-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-5-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-6-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/VideoSearchResults/example'
              schema:
                $ref: '#/components/schemas/VideoSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List similar videos
      tags:
      - computer_vision
      x-code-samples:
      - lang: shell
        source: |
          RESPONSE=$(curl -X POST "https://api.shutterstock.com/v2/cv/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"base64_image\":\"`base64 myImage.jpg | tr -d '\n'`\"}")

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id <<< $RESPONSE)

          curl -X GET "https://api.shutterstock.com/v2/cv/similar/videos" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "asset_id=$UPLOAD_ID"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");
          const fs = require("fs");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const computerVisionApi = new sstk.ComputerVisionApi();

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const body = new sstk.ImageCreateRequest(base64File);

          computerVisionApi.uploadImage(body)
            .then((data) => {
              console.log(data.upload_id);
              return computerVisionApi.getSimilarVideos(data.upload_id);
            })
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");
          const fs = require("fs");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarVideos(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ComputerVisionApiMethodsParams } from "shutterstock-api";

          import * as fs from "fs";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody: ComputerVisionApiMethodsParams["uploadImage"] = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams: ComputerVisionApiMethodsParams["getSimilarVideos"] = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarVideos(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $imageData = file_get_contents("myImage.jpg");
          $encodedImageData = base64_encode($imageData);

          $uploadBody = [
            "base64_image" => $encodedImageData
          ];
          $uploadEncodedBody = json_encode($uploadBody);

          $uploadOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $uploadEncodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $uploadOptions);
          $uploadResponse = curl_exec($handle);
          curl_close($handle);

          $uploadDecodedResponse = json_decode($uploadResponse);
          print_r($uploadDecodedResponse->upload_id);

          $similarQuery = [
            "asset_type" => "images",
            "asset_id" => $uploadDecodedResponse->upload_id,
          ];

          $similarOptions = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/cv/similar/videos?" . http_build_query($similarQuery),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $similarOptions);
          $similarResponse = curl_exec($handle);
          curl_close($handle);

          print_r($similarResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo "{\"base64_image\":\"`base64 myImage.jpg  | tr -d '\n'`\"}" > data.json

          shutterstock cv upload-image data.json > response.json

          echo "The next step requires the jq program."

          UPLOAD_ID=$(jq -r .upload_id response.json)

          shutterstock cv get-similar-videos \
            --asset-id $UPLOAD_ID
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-cv-similar-videos
      x-accepts: application/json
  /v2/editorial/categories:
    get:
      deprecated: true
      description: "Deprecated; use `GET /v2/editorial/images/categories` instead.\
        \ This endpoint lists the categories that editorial images can belong to,\
        \ which are separate from the categories that other types of assets can belong\
        \ to."
      operationId: Editorialimages_listCategories
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialCategoryResults/example'
              schema:
                $ref: '#/components/schemas/EditorialCategoryResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) List editorial categories
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-categories
      x-accepts: application/json
  /v2/editorial/images/categories:
    get:
      description: "This endpoint lists the categories that editorial images can belong\
        \ to, which are separate from the categories that other types of assets can\
        \ belong to."
      operationId: Editorialimages_listCategories
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialImageCategoryResults/example'
              schema:
                $ref: '#/components/schemas/EditorialImageCategoryResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List editorial categories
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-categories
      x-accepts: application/json
  /v2/editorial/images/licenses:
    get:
      description: This endpoint lists existing editorial image licenses.
      operationId: Editorialimages_listLicenses
      parameters:
      - description: Show licenses for the specified editorial image ID
        example: "12345678"
        explode: true
        in: query
        name: image_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "12345678"
      - description: Show editorial images that are available with the specified license
          name
        example: premier_editorial_all_digital
        explode: true
        in: query
        name: license
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: premier_editorial_all_digital
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-8-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-9-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/DownloadHistoryDataList/example'
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List editorial image licenses
      tags:
      - editorial_images
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: EditorialImagesApiMethodsParams["getEditorialImageLicenseList"] = {
            "image_id": "12345678",
            "license": "premier_editorial_all_digital",
            "username": "aUniqueUsername",
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.editorialImages.getEditorialImageLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-licenses
      x-accepts: application/json
    post:
      description: This endpoint gets licenses for one or more editorial images. You
        must specify the country and one or more editorial images to license. The
        download links in the response are valid for 8 hours.
      operationId: Editorialimages_licenseContent
      requestBody:
        content:
          application/json:
            example:
              $ref: '#/components/schemas/LicenseEditorialContentRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseEditorialContentRequest'
            x-konfig-original-example:
              $ref: '#/components/schemas/LicenseEditorialContentRequest/example'
        description: License editorial content
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/LicenseEditorialContentResults/example'
              schema:
                $ref: '#/components/schemas/LicenseEditorialContentResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - customer_accessCode:
        - licenses.create
        - purchases.view
      summary: License editorial content
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          }'

          curl -X POST "https://api.shutterstock.com/v2/editorial/images/licenses" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const body = {
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          };

          editorialApi.licenseEditorialImage(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": "premier_editorial_comp",
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialImages.licenseEditorialImage(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: EditorialImagesApiMethodsParams["licenseEditorialImages"] = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": "premier_editorial_comp",
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialImages.licenseEditorialImage(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "editorial" => [
              [
                "editorial_id" => "8594090h",
                "license" => "premier_editorial_comp"
              ]
            ],
            "country" => "USA"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/images/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          }' > data.json

          shutterstock editorial license-editorial-images data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-editorial-images-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/editorial/images/livefeeds:
    get:
      operationId: Editorialimages_listLivefeedImages
      parameters:
      - description: Returns only livefeeds that are available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialImageLivefeedList/example'
              schema:
                $ref: '#/components/schemas/EditorialImageLivefeedList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get editorial livefeed list
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds
      x-accepts: application/json
  /v2/editorial/images/livefeeds/{id}:
    get:
      operationId: Editorialimages_getLivefeedImages
      parameters:
      - description: Editorial livefeed ID; must be an URI encoded string
        example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
      - description: Returns only if the livefeed is available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialImageLivefeed/example'
              schema:
                $ref: '#/components/schemas/EditorialImageLivefeed'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get editorial livefeed
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds-id
      x-accepts: application/json
  /v2/editorial/images/livefeeds/{id}/items:
    get:
      operationId: Editorialimages_getLivefeedItems
      parameters:
      - description: Editorial livefeed ID; must be an URI encoded string
        example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
      - description: Returns only if the livefeed items are available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialImageContentDataList/example'
              schema:
                $ref: '#/components/schemas/EditorialImageContentDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get editorial livefeed items
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds-id-items
      x-accepts: application/json
  /v2/editorial/images/search:
    get:
      description: "This endpoint searches for editorial images. If you specify more\
        \ than one search parameter, the API uses an AND condition. For example, if\
        \ you set the `category` parameter to \"Alone,Performing\" and also specify\
        \ a `query` parameter, the results include only images that match the query\
        \ and are in both the Alone and Performing categories. You can also filter\
        \ search terms out in the `query` parameter by prefixing the term with NOT."
      operationId: Editorialimages_search
      parameters:
      - description: One or more search terms separated by spaces
        example: The Academy Awards
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: The Academy Awards
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-1-schema
        style: form
      - description: Show editorial content with each of the specified editorial categories;
          specify category names in a comma-separated list
        example: "Alone,Performing"
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "Alone,Performing"
      - description: Show only editorial content that is available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Show only editorial content from certain suppliers
        explode: true
        in: query
        name: supplier_code
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Show only editorial content generated on or after a specific
          date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show only editorial content generated on or before a specific
          date
        example: 2021-05-29T00:00:00.000Z
        explode: true
        in: query
        name: date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-05-29T00:00:00.000Z
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-7-schema
        style: form
      - description: The cursor of the page with which to start fetching results;
          this cursor is returned from previous requests
        example: eyJ2IjoxLCJzIjoxfQ==
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: eyJ2IjoxLCJzIjoxfQ==
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialSearchResults/example'
              schema:
                $ref: '#/components/schemas/EditorialSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search editorial images
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/editorial/images/search" \
            -H "Accept: application/json" \
            -G \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            --data-urlencode "query=musician" \
            --data-urlencode "country=USA" \
            --data-urlencode "category=Alone,Performing" \
            --data-urlencode "sort=newest" \
            --data-urlencode "date_start=2018-10-23"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const queryParams = {
            "query": "musician",
            "country": "USA",
            "category": "Alone,Performing",
            "sort": "newest",
            "date_start": "2018-10-23"
          };

          const country = "USA";

          editorialApi.editorialImagesSearch(country, queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialImages.searchEditorial(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: EditorialImagesApiMethodsParams["searchEditorial"] = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialImages.searchEditorial(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "musician",
            "country" => "USA",
            "category" => "Alone,Performing",
            "date_start" => "2018-10-23",
            "sort" => "newest"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/images/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock editorial search-editorial-images \
            --country USA \
            --category Alone,Performing \
            --sort newest \
            --query musician \
            --date-start 2018-10-23
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-search
      x-accepts: application/json
  /v2/editorial/images/updated:
    get:
      description: "This endpoint lists editorial images that have been updated in\
        \ the specified time period to update content management systems (CMS) or\
        \ digital asset management (DAM) systems. In most cases, use the date_updated_start\
        \ and date_updated_end parameters to specify a range updates based on when\
        \ the updates happened. You can also use the date_taken_start and date_taken_end\
        \ parameters to specify a range of updates based on when the image was taken."
      operationId: Editorialimages_listUpdatedContent
      parameters:
      - description: Specify `addition` to return only images that were added or `edit`
          to return only images that were edited or deleted
        example: edit
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - edit
          - addition
          type: string
        style: form
        x-konfig-original-example: edit
      - description: "Show images images added, edited, or deleted after the specified\
          \ date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00."
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: date_updated_start
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: "Show images images added, edited, or deleted before the specified\
          \ date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00."
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: date_updated_end
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show images that were taken on or after the specified date; use
          this parameter if you want recently created images from the collection instead
          of updated older assets
        example: 2020-02-04T00:00:00.000Z
        explode: true
        in: query
        name: date_taken_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-02-04T00:00:00.000Z
      - description: Show images that were taken before the specified date
        example: 2020-02-05T00:00:00.000Z
        explode: true
        in: query
        name: date_taken_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-02-05T00:00:00.000Z
      - description: The cursor of the page with which to start fetching results;
          this cursor is returned from previous requests
        example: eyJ2IjoxLCJzIjoyfQ==
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: eyJ2IjoxLCJzIjoyfQ==
      - description: Sort by
        example: newest
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-6-schema
        style: form
        x-konfig-original-example: newest
      - description: Show only editorial content from certain suppliers
        example: ABC
        explode: true
        in: query
        name: supplier_code
        required: false
        schema:
          items:
            maxLength: 5
            type: string
          type: array
        style: form
        x-konfig-original-example: ABC
      - description: Show only editorial content that is available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Number of results per page
        example: 200
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 500
          example: 500
          maximum: 500
          minimum: 100
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-9-schema
        style: form
        x-konfig-original-example: 200
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialUpdatedResults/example'
              schema:
                $ref: '#/components/schemas/EditorialUpdatedResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: List updated content
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/editorial/images/updated" \
            -H "Accept: application/json" \
            -G \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            --data-urlencode "type=edit" \
            --data-urlencode "country=USA" \
            --data-urlencode "date_updated_start=2020-02-02T13:00:00Z" \
            --data-urlencode "date_updated_end=2020-02-02T15:00:00Z"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const type = "edit";
          const dateUpdatedStart = "2020-02-02T13:00:00Z";
          const dateUpdatedEnd = "2020-02-02T15:00:00Z";
          const country = "USA";

          editorialApi.getUpdatedImages(type, dateUpdatedStart, dateUpdatedEnd, country)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams = {
            "country": "USA",
            "date_updated_start": lastWeek,
            "date_updated_end": today,
            "type": "edit",
          };

          sstk.editorialImages.getUpdatedEditorialImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: EditorialImagesApiMethodsParams["getUpdatedEditorialImages"] = {
            "country": "USA",
            "date_updated_start": lastWeek,
            "date_updated_end": today,
            "type": "edit",
          };

          sstk.editorialImages.getUpdatedEditorialImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "type" => "edit",
            "country" => "USA",
            "date_updated_start" => "2020-02-02T13:00:00Z",
            "date_updated_end" => "2020-02-02T15:00:00Z",
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/images/updated?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock editorial get-updated-editorial-images \
            --type edit \
            --country USA \
            --date-updated-start "2020-02-02T13:00:00Z" \
            --date-updated-end "2020-02-02T15:00:00Z"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-updated
      x-accepts: application/json
  /v2/editorial/images/{id}:
    get:
      description: "This endpoint shows information about an editorial image, including\
        \ a URL to a preview image and the sizes that it is available in."
      operationId: Editorialimages_getImageDetails
      parameters:
      - description: Editorial ID
        example: 9926131a
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 9926131a
      - description: Returns only if the content is available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialContent/example'
              schema:
                $ref: '#/components/schemas/EditorialContent'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get editorial content details
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-id
      x-accepts: application/json
  /v2/editorial/licenses:
    post:
      deprecated: true
      description: Deprecated; use `POST /v2/editorial/images/licenses` instead to
        get licenses for one or more editorial images. You must specify the country
        and one or more editorial images to license. The download links in the response
        are valid for 8 hours.
      operationId: Editorialimages_licenseContent
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/LicenseEditorialContentRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseEditorialContentRequest'
        description: License editorial content
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - download:
                        url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
                      editorial_id: "69656358"
              schema:
                $ref: '#/components/schemas/LicenseEditorialContentResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - customer_accessCode:
        - licenses.create
      summary: (Deprecated) License editorial content
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          }'

          curl -X POST "https://api.shutterstock.com/v2/editorial/licenses" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const body = {
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          };

          editorialApi.licenseEditorialImage(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": "premier_editorial_comp",
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialImages.licenseEditorialImage(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: EditorialImagesApiMethodsParams["licenseEditorialImage"] = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": "premier_editorial_comp",
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialImages.licenseEditorialImage(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "editorial" => [
              [
                "editorial_id" => "8594090h",
                "license" => "premier_editorial_comp"
              ]
            ],
            "country" => "USA"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_comp"
              }
            ],
            "country": "USA"
          }' > data.json

          shutterstock editorial license-editorial-image data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-editorial-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/editorial/livefeeds:
    get:
      deprecated: true
      description: Deprecated; use `GET /v2/editorial/images/livefeeds` instead to
        get a list of editorial livefeeds.
      operationId: Editorialimages_getLivefeedList
      parameters:
      - description: Returns only livefeeds that are available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialLivefeedList/example'
              schema:
                $ref: '#/components/schemas/EditorialLivefeedList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) Get editorial livefeed list
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds
      x-accepts: application/json
  /v2/editorial/livefeeds/{id}:
    get:
      deprecated: true
      description: "Deprecated: use `GET /v2/editorial/images/livefeeds/{id}` instead\
        \ to get an editorial livefeed."
      operationId: Editorialimages_getLivefeedItems
      parameters:
      - description: Editorial livefeed ID; must be an URI encoded string
        example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
      - description: Returns only if the livefeed is available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialLivefeed/example'
              schema:
                $ref: '#/components/schemas/EditorialLivefeed'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) Get editorial livefeed
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds-id
      x-accepts: application/json
  /v2/editorial/livefeeds/{id}/items:
    get:
      deprecated: true
      description: "Deprecated; use `GET /v2/editorial/images/livefeeds/{id}/items`\
        \ instead to get editorial livefeed items."
      operationId: Editorialimages_getLivefeedItems
      parameters:
      - description: Editorial livefeed ID; must be an URI encoded string
        example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London
      - description: Returns only if the livefeed items are available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialContentDataList/example'
              schema:
                $ref: '#/components/schemas/EditorialContentDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) Get editorial livefeed items
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds-id-items
      x-accepts: application/json
  /v2/editorial/search:
    get:
      deprecated: true
      description: Deprecated; use `GET /v2/editorial/images/search` instead to search
        for editorial images.
      operationId: Editorialimages_searchContent
      parameters:
      - description: One or more search terms separated by spaces
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-search-get-parameters-1-schema
        style: form
      - description: Show editorial content within a certain editorial category; specify
          by category name
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Show only editorial content that is available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Show only editorial content from certain suppliers
        explode: true
        in: query
        name: supplier_code
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Show only editorial content generated on or after a specific
          date
        explode: true
        in: query
        name: date_start
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Show only editorial content generated on or before a specific
          date
        explode: true
        in: query
        name: date_end
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-search-get-parameters-7-schema
        style: form
      - description: The cursor of the page with which to start fetching results;
          this cursor is returned from previous requests
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialSearchResults/example'
              schema:
                $ref: '#/components/schemas/EditorialSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) Search editorial content
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/editorial/search" \
            -H "Accept: application/json" \
            -G \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            --data-urlencode "query=football" \
            --data-urlencode "country=USA" \
            --data-urlencode "sort=newest" \
            --data-urlencode "date_start=2018-10-23"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const queryParams = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23"
          };

          const country = "USA";

          editorialApi.searchEditorial(country, queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialImages.searchEditorial(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: EditorialImagesApiMethodsParams["searchEditorial"] = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialImages.searchEditorial(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "football",
            "country" => "USA",
            "date_start" => "2018-10-23",
            "sort" => "newest"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock editorial search-editorial \
            --country USA \
            --sort newest \
            --query football \
            --date-start 2018-10-23
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-search
      x-accepts: application/json
  /v2/editorial/updated:
    get:
      deprecated: true
      description: Deprecated; use `GET /v2/editorial/images/updated` instead to get
        recently updated items.
      operationId: Editorialimages_listUpdatedContent
      parameters:
      - description: Specify `addition` to return only images that were added or `edit`
          to return only images that were edited or deleted
        example: edit
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - edit
          - addition
          type: string
        style: form
        x-konfig-original-example: edit
      - description: "Show images images added, edited, or deleted after the specified\
          \ date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00."
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: date_updated_start
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: "Show images images added, edited, or deleted before the specified\
          \ date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00."
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: date_updated_end
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show images that were taken on or after the specified date; use
          this parameter if you want recently created images from the collection instead
          of updated older assets
        example: 2020-02-04T00:00:00.000Z
        explode: true
        in: query
        name: date_taken_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-02-04T00:00:00.000Z
      - description: Show images that were taken before the specified date
        example: 2020-02-05T00:00:00.000Z
        explode: true
        in: query
        name: date_taken_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-02-05T00:00:00.000Z
      - description: The cursor of the page with which to start fetching results;
          this cursor is returned from previous requests
        example: eyJ2IjoxLCJzIjoyfQ==
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: eyJ2IjoxLCJzIjoyfQ==
      - description: Sort by
        example: newest
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-updated-get-parameters-6-schema
        style: form
        x-konfig-original-example: newest
      - description: Show only editorial content from certain suppliers
        example: ABC
        explode: true
        in: query
        name: supplier_code
        required: false
        schema:
          items:
            maxLength: 5
            type: string
          type: array
        style: form
        x-konfig-original-example: ABC
      - description: Show only editorial content that is available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Number of results per page
        example: 200
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 500
          example: 500
          maximum: 500
          minimum: 100
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-updated-get-parameters-9-schema
        style: form
        x-konfig-original-example: 200
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialUpdatedResults/example'
              schema:
                $ref: '#/components/schemas/EditorialUpdatedResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) List updated content
      tags:
      - editorial_images
      x-code-samples:
      - lang: shell
        source: |-
          curl -X GET "https://api.shutterstock.com/v2/editorial/updated" \
            -H "Accept: application/json" \
            -G \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            --data-urlencode "type=edit" \
            --data-urlencode "country=USA" \
            --data-urlencode "date_updated_start=2020-02-02T13:00:00Z" \
            --data-urlencode "date_updated_end=2020-02-02T15:00:00Z"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const type = "edit";
          const dateUpdatedStart = "2020-02-02T13:00:00Z";
          const dateUpdatedEnd = "2020-02-02T15:00:00Z";
          const country = "USA";

          editorialApi.getUpdatedImages(type, dateUpdatedStart, dateUpdatedEnd, country)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams = {
            "country": "USA",
            "date_updated_start": lastWeek,
            "date_updated_end": today,
            "type": "edit",
          };

          sstk.editorialImages.getUpdatedImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: EditorialImagesApiMethodsParams["getUpdatedImages"] = {
            "country": "USA",
            "date_updated_start": lastWeek,
            "date_updated_end": today,
            "type": "edit",
          };

          sstk.editorialImages.getUpdatedImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "type" => "edit",
            "country" => "USA",
            "date_updated_start" => "2020-02-02T13:00:00Z",
            "date_updated_end" => "2020-02-02T15:00:00Z",
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/updated?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock editorial get-updated-images \
            --type edit \
            --country USA \
            --date-updated-start "2020-02-02T13:00:00Z" \
            --date-updated-end "2020-02-02T15:00:00Z"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-updated
      x-accepts: application/json
  /v2/editorial/videos/categories:
    get:
      description: "This endpoint lists the categories that editorial videos can belong\
        \ to, which are separate from the categories that other types of assets can\
        \ belong to."
      operationId: Editorialvideo_listVideoCategories
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialVideoCategoryResults/example'
              schema:
                $ref: '#/components/schemas/EditorialVideoCategoryResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List editorial video categories
      tags:
      - editorial_video
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-categories
      x-accepts: application/json
  /v2/editorial/videos/licenses:
    get:
      description: This endpoint lists existing editorial video licenses.
      operationId: Editorialvideo_listVideoLicenses
      parameters:
      - description: Show licenses for the specified editorial video ID
        example: "12345678"
        explode: true
        in: query
        name: video_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "12345678"
      - description: Show editorial videos that are available with the specified license
          name
        example: premier_editorial_all_media
        explode: true
        in: query
        name: license
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: premier_editorial_all_media
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-8-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-9-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - download_time: 2020-12-18T02:22:56.000Z
                      id: e1dbb15d5384725d292cf64f793ac45062
                      is_downloadable: false
                      license: premier_editorial_all_digital
                      metadata:
                        client: Company A
                        job: Important project
                        other: Important media
                        purchase_order: "457234"
                      subscription_id: s12345678
                      user:
                        username: username1
                      video:
                        format:
                          size: original
                        id: 11231389im
                    - download_time: 2020-12-11T01:24:22.000Z
                      id: e1dbb15d5384725d292cf64f793ac45114
                      is_downloadable: false
                      license: premier_editorial_all_digital
                      metadata:
                        client: Company B
                        job: Important project
                        other: Important image
                        purchase_order: "5583831"
                      subscription_id: s12345678
                      user:
                        username: username2
                      video:
                        format:
                          size: original
                        id: 11231442aa
                    page: 1
                    per_page: 2
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List editorial video licenses
      tags:
      - editorial_video
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { EditorialVideoApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: EditorialVideoApiMethodsParams["getEditorialVideoLicenseList"] = {
            "video_id": "12345678",
            "license": "premier_editorial_all_media",
            "username": "aUniqueUsername",
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.editorialVideo.getEditorialVideoLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-licenses
      x-accepts: application/json
    post:
      description: This endpoint gets licenses for one or more editorial videos. You
        must specify the country and one or more editorial videos to license. The
        download links in the response are valid for 8 hours.
      operationId: Editorialvideo_licenseVideos
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/LicenseEditorialVideoContentRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseEditorialVideoContentRequest'
        description: License editorial video content
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - download:
                        url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].mov?Expires=1524717323"
                      editorial_id: "69656358"
              schema:
                $ref: '#/components/schemas/LicenseEditorialContentResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.create
        - purchases.view
      summary: License editorial video content
      tags:
      - editorial_video
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_video_comp"
              }
            ],
            "country": "USA"
          }'

          curl -X POST "https://api.shutterstock.com/v2/editorial/videos/licenses" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialApi();

          const body = {
            "editorial": [
              {
                "editorial_id": "10687492a",
                "license": "premier_editorial_video_comp"
              }
            ],
            "country": "USA"
          };

          editorialApi.licenseEditorialVideo(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": "premier_editorial.video_comp",
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialVideo.licenseEditorialVideo(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, { LicenseEditorialVideoContentLicenseEnum } from "shutterstock-api";
          import type { EditorialVideoApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: EditorialVideoApiMethodsParams["licenseEditorialVideo"] = {
            "body": {
              "editorial": [
                {
                  "editorial_id": "8594090h",
                  "license": LicenseEditorialVideoContentLicenseEnum.AllMedia,
                },
              ],
              "country": "USA",
            },
          };

          sstk.editorialVideo.licenseEditorialVideo(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "editorial" => [
              [
                "editorial_id" => "10687492a",
                "license" => "premier_editorial_video_comp"
              ]
            ],
            "country" => "USA"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/videos/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "editorial": [
              {
                "editorial_id": "8594090h",
                "license": "premier_editorial_video_comp"
              }
            ],
            "country": "USA"
          }' > data.json

          shutterstock editorial license-editorial-video data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-editorial-videos-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/editorial/videos/search:
    get:
      description: "This endpoint searches for editorial videos. If you specify more\
        \ than one search parameter, the API uses an AND condition. For example, if\
        \ you set the `category` parameter to \"Alone,Performing\" and also specify\
        \ a `query` parameter, the results include only videos that match the query\
        \ and are in both the Alone and Performing categories.  You can also filter\
        \ search terms out in the `query` parameter by prefixing the term with NOT."
      operationId: Editorialvideo_searchVideoContent
      parameters:
      - description: One or more search terms separated by spaces
        example: The Academy Awards
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: The Academy Awards
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-1-schema
        style: form
      - description: Show editorial content with each of the specified editorial categories;
          specify category names in a comma-separated list
        example: "Alone,Performing"
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "Alone,Performing"
      - description: Show only editorial video content that is available for distribution
          in a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: Show only editorial video content from certain suppliers
        explode: true
        in: query
        name: supplier_code
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Show only editorial video content generated on or after a specific
          date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show only editorial video content generated on or before a specific
          date
        example: 2021-05-29T00:00:00.000Z
        explode: true
        in: query
        name: date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-05-29T00:00:00.000Z
      - description: Show only editorial video content with specific resolution
        example: 4k
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          enum:
          - 4k
          - high_definition
          - standard_definition
          type: string
        style: form
        x-konfig-original-example: 4k
      - description: Show only editorial video content generated with specific frames
          per second
        example: 24
        explode: true
        in: query
        name: fps
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 24
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-9-schema
        style: form
      - description: The cursor of the page with which to start fetching results;
          this cursor is returned from previous requests
        example: eyJ2IjoxLCJzIjoxfQ==
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: eyJ2IjoxLCJzIjoxfQ==
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialVideoSearchResults/example'
              schema:
                $ref: '#/components/schemas/EditorialVideoSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search editorial video content
      tags:
      - editorial_video
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/editorial/videos/search" \
            -H "Accept: application/json" \
            -G \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            --data-urlencode "query=musician" \
            --data-urlencode "country=USA" \
            --data-urlencode "category=Alone,Performing" \
            --data-urlencode "sort=newest" \
            --data-urlencode "date_start=2018-10-23"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const editorialApi = new sstk.EditorialVideoApi();

          const queryParams = {
            "query": "musician",
            "country": "USA",
            "category": "Alone,Performing",
            "sort": "newest",
            "date_start": "2018-10-23"
          };

          const country = "USA";

          editorialApi.searchEditorialVideos(country, queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialVideo.searchEditorialVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { EditorialVideoApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: EditorialVideoApiMethodsParams["searchEditorialVideos"] = {
            "query": "football",
            "country": "USA",
            "sort": "newest",
            "date_start": "2018-10-23",
          };

          sstk.editorialVideo.searchEditorialVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "musician",
            "country" => "USA",
            "category" => "Alone,Performing",
            "date_start" => "2018-10-23",
            "sort" => "newest"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/editorial/videos/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock editorial search-editorial-videos \
            --country USA \
            --sort newest \
            --query musician \
            --category Alone,Performing \
            --date-start 2018-10-23
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-search
      x-accepts: application/json
  /v2/editorial/videos/{id}:
    get:
      description: "This endpoint shows information about an editorial image, including\
        \ a URL to a preview image and the sizes that it is available in."
      operationId: Editorialvideo_getContentDetails
      parameters:
      - description: Editorial ID
        example: 9926131a
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 9926131a
      - description: Returns only if the content is available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialVideoContent/example'
              schema:
                $ref: '#/components/schemas/EditorialVideoContent'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "406":
          description: Not Acceptable
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get editorial video content details
      tags:
      - editorial_video
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-id
      x-accepts: application/json
  /v2/editorial/{id}:
    get:
      deprecated: true
      description: "Deprecated; use `GET /v2/editorial/images/{id}` instead to show\
        \ information about an editorial image, including a URL to a preview image\
        \ and the sizes that it is available in."
      operationId: Editorialimages_getDetails
      parameters:
      - description: Editorial ID
        example: 9926131a
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: 9926131a
      - description: Returns only if the content is available for distribution in
          a certain country
        example: USA
        explode: true
        in: query
        name: country
        required: true
        schema:
          format: country-code-3
          type: string
        style: form
        x-konfig-original-example: USA
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/EditorialContent/example'
              schema:
                $ref: '#/components/schemas/EditorialContent'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - basic: []
      - customer_accessCode: []
      summary: (Deprecated) Get editorial content details
      tags:
      - editorial_images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-editorial-id
      x-accepts: application/json
  /v2/images:
    get:
      description: "This endpoint lists information about one or more images, including\
        \ the available sizes."
      operationId: Images_listInfo
      parameters:
      - description: One or more image IDs
        example:
        - "1110335168"
        - "465011609"
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: asset-id
            type: string
          maxItems: 500
          type: array
        style: form
        x-konfig-original-example:
        - "1110335168"
        - "465011609"
      - description: Amount of detail to render in the response
        example: minimal
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-get-parameters-1-schema
        style: form
        x-konfig-original-example: minimal
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ImageDataList/example'
              schema:
                $ref: '#/components/schemas/ImageDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List images
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images
      x-accepts: application/json
    post:
      deprecated: true
      description: "Deprecated; use `POST /v2/cv/images` instead. This endpoint uploads\
        \ an image for reverse image search. The image must be in JPEG or PNG format.\
        \ To get the search results, pass the ID that this endpoint returns to the\
        \ `GET /v2/images/{id}/similar` endpoint."
      operationId: Computervision_uploadImageEphemeral
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/ImageCreateRequest/example'
            schema:
              $ref: '#/components/schemas/ImageCreateRequest'
        description: The image data in JPEG or PNG format
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ImageCreateResponse/example'
              schema:
                $ref: '#/components/schemas/ImageCreateResponse'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "413":
          description: Payload Too Large
      security:
      - basic: []
      - customer_accessCode: []
      summary: Upload ephemeral images
      tags:
      - computer_vision
      x-code-samples:
      - lang: shell
        source: |
          curl -X POST "https://api.shutterstock.com/v2/images" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"base64_image\":\"`base64 myImage.jpg | tr -d '\n'`\"}"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");
          const fs = require("fs");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const body = new sstk.ImageCreateRequest(base64File);

          const queryParams = {
            "page": 1,
            "per_page": 20,
            "view": "minimal"
          };

          imagesApi.uploadEphemeralImage(body)
            .then((data) => {
              console.log(data.id);
              return imagesApi.getSimilarImages(data.id, queryParams);
            })
            .then((similarImageData) => {
              console.log(similarImageData);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");
          const fs = require("fs");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarImages(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ComputerVisionApiMethodsParams } from "shutterstock-api";

          import * as fs from "fs";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const imageFile = fs.readFileSync("./myImage.jpg");
          const base64File = Buffer.from(imageFile).toString("base64");

          const uploadImageBody: ComputerVisionApiMethodsParams["uploadImage"] = {
            "body": {
              "base64_image": base64File,
            },
          };

          sstk.computerVision.uploadImage(uploadImageBody)
            .then(({ data }) => {
              console.log(data.upload_id);

              const queryParams: ComputerVisionApiMethodsParams["getSimilarImages"] = {
                "asset_id": data.upload_id,
                "page": 1,
                "per_page": 20,
                "view": "minimal",
              };

              return sstk.computerVision.getSimilarImages(queryParams);
            })
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $imageData = file_get_contents("myImage.jpg");
          $encodedImageData = base64_encode($imageData);

          $body = [
            "base64_image" => $encodedImageData
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo "{\"base64_image\":\"`base64 myImage.jpg  | tr -d '\n'`\"}" > data.json

          shutterstock images upload-ephemeral-image data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/categories:
    get:
      description: This endpoint lists the categories (Shutterstock-assigned genres)
        that images can belong to.
      operationId: Images_listCategories
      parameters:
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CategoryDataList/example'
              schema:
                $ref: '#/components/schemas/CategoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List image categories
      tags:
      - images
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock, { Language } from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: ImagesApiMethodsParams["listImageCategories"] = {
            "language": Language.Es,
          };

          sstk.images.listImageCategories(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-categories
      x-accepts: application/json
  /v2/images/collections:
    get:
      description: This endpoint lists your collections of images and their basic
        attributes.
      operationId: Images_listCollections
      parameters:
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        example: share_code
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
        x-konfig-original-example: share_code
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-get-parameters-1-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-get-parameters-2-schema
        style: form
        x-konfig-original-example: 2
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.view
      summary: List image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections
      x-accepts: application/json
    post:
      description: "This endpoint creates one or more image collections (lightboxes).\
        \ To add images to the collections, use `POST /v2/images/collections/{id}/items`."
      operationId: Images_createCollection
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/CollectionCreateRequest/example'
            schema:
              $ref: '#/components/schemas/CollectionCreateRequest'
        description: The names of the new collections
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionCreateResponse/example'
              schema:
                $ref: '#/components/schemas/CollectionCreateResponse'
          description: Successfully created image collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.edit
      summary: Create image collections
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "My collection"
          }'

          curl -X POST "https://api.shutterstock.com/v2/images/collections" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const body = {
            "name": "My collection"
          };

          imagesApi.createImageCollection(body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |-
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const createCollectionBody = {
            "body": {
              "name": "My collection",
            },
          };

          sstk.images.createImageCollection(createCollectionBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const createCollectionBody: ImagesApiMethodsParams["createImageCollection"] = {
            "body": {
              "name": "My collection",
            },
          };

          sstk.images.createImageCollection(createCollectionBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source:
          $ref: '#/paths/~1v2~1images~1collections/post/x-code-samples/2/source'
      - lang: typescript_v2--nodejs
        source:
          $ref: '#/paths/~1v2~1images~1collections/post/x-code-samples/3/source'
      - lang: php
        source: |-
          $body = [
            "name" => "My collection"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/collections",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "My collection"
          }' > data.json

          shutterstock images create-image-collection data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-collections
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/collections/featured:
    get:
      description: This endpoint lists featured collections of specific types and
        a name and cover image for each collection.
      operationId: Images_listFeaturedCollections
      parameters:
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        example: share_url
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - share_url
          type: string
        style: form
        x-konfig-original-example: share_url
      - description: The types of collections to return
        example:
        - photo
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - photo
            - editorial
            - vector
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - photo
      - description: Cover image size
        example: 1x
        explode: true
        in: query
        name: asset_hint
        required: false
        schema:
          default: 1x
          enum:
          - 1x
          - 2x
          example: 1x
          type: string
          x-konfig-original-example: 1x
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-get-parameters-2-schema
        style: form
        x-konfig-original-example: 1x
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/FeaturedCollectionDataList/example'
              schema:
                $ref: '#/components/schemas/FeaturedCollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List featured image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured
      x-accepts: application/json
  /v2/images/collections/featured/{id}:
    get:
      description: "This endpoint gets more detailed information about a featured\
        \ collection, including its cover image and timestamps for its creation and\
        \ most recent update. To get the images, use `GET /v2/images/collections/featured/{id}/items`."
      operationId: Images_featuredCollectionDetails
      parameters:
      - description: Collection ID
        example: "136351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "136351027"
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - share_url
          type: string
        style: form
      - description: Cover image size
        explode: true
        in: query
        name: asset_hint
        required: false
        schema:
          default: 1x
          enum:
          - 1x
          - 2x
          example: 1x
          type: string
          x-konfig-original-example: 1x
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/FeaturedCollection/example'
              schema:
                $ref: '#/components/schemas/FeaturedCollection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Featured collection not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get the details of featured image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured-id
      x-accepts: application/json
  /v2/images/collections/featured/{id}/items:
    get:
      description: This endpoint lists the IDs of images in a featured collection
        and the date that each was added.
      operationId: Images_getCollectionItems
      parameters:
      - description: Collection ID
        example: "136351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "136351027"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionItemDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Featured collection not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get the contents of featured image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured-id-items
      x-accepts: application/json
  /v2/images/collections/{id}:
    delete:
      description: This endpoint deletes an image collection.
      operationId: Images_deleteCollection
      parameters:
      - description: Collection ID
        example: "136351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "136351027"
      responses:
        "204":
          description: Successfully deleted collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Delete image collections
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/images/collections/136351027" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const collectionId = "136351027"; // Collection ID

          imagesApi.deleteImageCollection(collectionId)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "136351027";

          const deleteCollectionParams = {
            "id": collectionId,
          };

          sstk.images.deleteImageCollection(deleteCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "136351027";

          const deleteCollectionParams: ImagesApiMethodsParams["deleteImageCollection"] = {
            "id": collectionId,
          };

          sstk.images.deleteImageCollection(deleteCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/collections/136351027",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_CUSTOMREQUEST => "DELETE",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock images delete-image-collection 136351027
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-images-collections-id
      x-accepts: application/json
    get:
      description: "This endpoint gets more detailed information about a collection,\
        \ including its cover image and timestamps for its creation and most recent\
        \ update. To get the images in collections, use `GET /v2/images/collections/{id}/items`."
      operationId: Images_getCollectionDetails
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
      - description: Code to retrieve a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Collection/example'
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the details of image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections-id
      x-accepts: application/json
    post:
      description: This endpoint sets a new name for an image collection.
      operationId: Images_renameCollection
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/CollectionUpdateRequest/example'
            schema:
              $ref: '#/components/schemas/CollectionUpdateRequest'
        description: The new name for the collection
        required: true
      responses:
        "204":
          description: Successfully updated collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Rename image collections
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "My new collection name"
          }'

          curl -X POST "https://api.shutterstock.com/v2/images/collections/126351027" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const collectionId = "126351027"; // Collection ID

          const body = {
            "name": "My new collection name"
          };

          imagesApi.renameImageCollection(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "126351027";

          const renameCollectionBody = {
            "id": collectionId,
            "body": {
              "name": "My new collection name",
            },
          };

          sstk.images.renameImageCollection(renameCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "126351027";

          const renameCollectionBody: ImagesApiMethodsParams["renameImageCollection"] = {
            "id": collectionId,
            "body": {
              "name": "My new collection name",
            },
          };

          sstk.images.renameImageCollection(renameCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "name" => "My new collection name"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/collections/126351027",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "My new collection name"
          }' > data.json

          shutterstock images rename-image-collection 48433107 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-collections-id
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/collections/{id}/items:
    delete:
      description: This endpoint removes one or more images from a collection.
      operationId: Images_removeFromCollection
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      - description: One or more image IDs to remove from the collection
        explode: true
        in: query
        name: item_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Successfully removed collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Remove images from collections
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/images/collections/186726599/items?item_id=495863218" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const collectionId = "126351027"; // Collection ID

          // Array of images to remove
          const imagesToRemove = {
            "item_id": [
              "495863218"
            ]
          };

          imagesApi.deleteImageCollectionItems(collectionId, imagesToRemove)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "136351027";
          const itemToDelete = "495863218";

          const deleteImageParams = {
            "id": collectionId,
            "item_id": [
              itemToDelete,
            ],
          };

          sstk.images.deleteImageCollectionItems(deleteImageParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "136351027";
          const itemToDelete = "495863218";

          const deleteImageParams: ImagesApiMethodsParams["deleteImageCollectionItems"] = {
            "id": collectionId,
            "item_id": [
              itemToDelete,
            ],
          };

          sstk.images.deleteImageCollectionItems(deleteImageParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/collections/126351027/items?item_id=495863218",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_CUSTOMREQUEST => "DELETE",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock images delete-image-collection-items 186726599 \
            --item-id 495863218
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-images-collections-id-items
      x-accepts: application/json
    get:
      description: This endpoint lists the IDs of images in a collection and the date
        that each was added.
      operationId: Images_getCollectionItems
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-2-schema
        style: form
      - description: Code to retrieve the contents of a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionItemDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the contents of image collections
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-collections-id-items
      x-accepts: application/json
    post:
      description: This endpoint adds one or more images to a collection by image
        IDs.
      operationId: Images_addToCollectionItems
      parameters:
      - description: Collection ID
        example: "126351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "126351027"
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  items:
                  - id: "49572945"
            schema:
              $ref: '#/components/schemas/CollectionItemRequest'
        description: Array of image IDs to add to the collection
        required: true
      responses:
        "204":
          description: Successfully added collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Add images to collections
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "items": [
              {
                "id": "49572945",
                "media_type": "image"
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/images/collections/126351027/items" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const collectionId = "126351027"; // Collection ID

          const body = {
            "items": [
              {
                "id": "495863218",
                "media_type": "image"
              }
            ]
          };

          imagesApi.addImageCollectionItems(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "126351027"; // Collection ID

          const addImageBody = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "495863218",
                  "media_type": "image",
                },
              ],
            },
          };

          sstk.images.addImageCollectionItems(addImageBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "126351027"; // Collection ID

          const addImageBody: ImagesApiMethodsParams["addImageCollectionItems"] = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "495863218",
                  "media_type": "image",
                },
              ],
            },
          };

          sstk.images.addImageCollectionItems(addImageBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "items" => [
              [
                "id" => "49572945",
                "media_type" => "image"
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/collections/126351027/items",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "items": [
              {
                "id": "49572945",
                "media_type": "image"
              }
            ]
          }' > data.json

          shutterstock images add-image-collection-items 126351027 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-collections-id-items
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/licenses:
    get:
      description: This endpoint lists existing licenses.
      operationId: Images_listLicenses
      parameters:
      - description: Show licenses for the specified image ID
        example: "12345678"
        explode: true
        in: query
        name: image_id
        required: false
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        style: form
        x-konfig-original-example: "12345678"
      - description: "Show images that are available with the specified license, such\
          \ as `standard` or `enhanced`; prepending a `-` sign excludes results from\
          \ that license"
        example: standard
        explode: true
        in: query
        name: license
        required: false
        schema:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        style: form
        x-konfig-original-example: standard
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: end_date
          relationship: <=
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: start_date
          relationship: '>'
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-8-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-9-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/DownloadHistoryDataList/example'
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List image licenses
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/images/licenses" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            -G \
            --data-urlencode "start_date=2016-10-03T01:25:13.521Z" \
            --data-urlencode "end_date=2016-10-04T13:25:13.521Z" \
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const queryParams = {
            "start_date": "2016-10-03T01:25:13.521Z",
            "end_date": "2016-10-04T13:25:13.521Z"
          };

          imagesApi.getImageLicenseList(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.images.getImageLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: ImagesApiMethodsParams["getImageLicenseList"] = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.images.getImageLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "start_date" => "2016-10-03T01:25:13.521Z",
            "end_date" => "2016-10-04T13:25:13.521Z"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/licenses" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock images get-image-license-list \
           --start-date "2021-01-03T01:25:13.521Z" \
           --end-date "2021-05-04T13:25:13.521Z"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-licenses
      x-accepts: application/json
    post:
      description: "This endpoint gets licenses for one or more images. You must specify\
        \ the image IDs in the body parameter and other details like the format, size,\
        \ and subscription ID either in the query parameter or with each image ID\
        \ in the body parameter. Values in the body parameter override values in the\
        \ query parameters. The download links in the response are valid for 8 hours."
      operationId: Images_licenseImagesForMultiple
      parameters:
      - description: Subscription ID to use to license the image
        explode: true
        in: query
        name: subscription_id
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: (Deprecated) Image format
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - eps
          - jpg
          type: string
        style: form
      - description: Image size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: huge
          enum:
          - small
          - medium
          - huge
          - vector
          - custom
          example: huge
          type: string
          x-konfig-original-example: huge
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-post-parameters-2-schema
        style: form
      - description: Search ID that was provided in the results of an image search
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/LicenseImageRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseImageRequest'
        description: List of images to request licenses for and information about
          each license transaction; these values override the defaults in the query
          parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/LicenseImageResultDataList/example'
              schema:
                $ref: '#/components/schemas/LicenseImageResultDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.create
        - purchases.view
      summary: License images
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "images": [
              {
                "image_id": "59656357",
                "subscription_id": "s12345678",
                "price": 12.50,
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/images/licenses" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -H 'Content-Type: application/json' \
            -d "$DATA"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const body = {
            "images": [
              {
                "image_id": "419235589",
                "subscription_id": "s12345678",
                "price": 12.50,
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          };

          imagesApi.licenseImages(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |-
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "images": [
                {
                  "image_id": "419235589",
                  "format": "jpg",
                  "subscription_id": "s12345678",
                  "price": 12.50,
                  "metadata": {
                    "customer_id": "12345",
                  },
                },
              ],
            },
          };

          sstk.images.licenseImages(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock, { LicenseImageFormatEnum } from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: ImagesApiMethodsParams["licenseImages"] = {
            "body": {
              "images": [
                {
                  "image_id": "419235589",
                  "format": LicenseImageFormatEnum.Jpg,
                  "subscription_id": "s12345678",
                  "price": 12.50,
                  "metadata": {
                    "customer_id": "12345",
                  },
                },
              ],
            },
          };

          sstk.images.licenseImages(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "images" => [
              [
                "image_id" => "539753938",
                "subscription_id" => "s12345678",
                "price" => 12.50,
                "metadata" => [
                  "customer_id" => "12345"
                ]
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "images": [
              {
                "image_id": "59656357",
                "subscription_id": "s12345678",
                "price": 12.50,
                "metadata": {
                  "customer_id": "12345"
                }
              }
            ]
          }' > data.json

          shutterstock images license-images \
            data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/licenses/{id}/downloads:
    post:
      description: This endpoint redownloads images that you have already received
        a license for. The download links in the response are valid for 8 hours.
      operationId: Images_redownloadLicense
      parameters:
      - description: License ID
        example: e123
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: e123
      requestBody:
        content:
          application/json:
            example:
              $ref: '#/components/schemas/RedownloadImage/example'
            schema:
              $ref: '#/components/schemas/RedownloadImage'
            x-konfig-original-example:
              $ref: '#/components/schemas/RedownloadImage/example'
        description: Information about the images to redownload
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Url/example'
              schema:
                $ref: '#/components/schemas/Url'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: Download images
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "size": "huge"
          }'

          curl -X POST "https://api.shutterstock.com/v2/images/licenses/e123/downloads" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const licenseId = "e123"; // license ID, not image ID

          const body = {
            "size": "huge"
          };

          imagesApi.downloadImage(licenseId, body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not image ID

          const downloadImageBody = {
            "id": licenseId,
            "body": {
              "size": RedownloadImageSizeEnum.Huge,
            },
          };

          sstk.images.downloadImage(downloadImageBody)
            .then(({ data }) => {
              console.log(data.url);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, { RedownloadImageSizeEnum } from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not image ID

          const downloadImageBody: ImagesApiMethodsParams["downloadImage"] = {
            "id": licenseId,
            "body": {
              "size": RedownloadImageSizeEnum.Huge,
            },
          };

          sstk.images.downloadImage(downloadImageBody)
            .then(({ data }) => {
              console.log(data.url);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "size" => "huge"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/licenses/e123/downloads",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "size": "huge"
          }' > data.json

          shutterstock images download-image e123 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-licenses-id-downloads
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/recommendations:
    get:
      description: This endpoint returns images that customers put in the same collection
        as the specified image IDs.
      operationId: Images_listRecommendedImages
      parameters:
      - description: Image IDs
        example:
        - 465011609
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - 465011609
      - description: Maximum number of results returned in the response
        explode: true
        in: query
        name: max_items
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-recommendations-get-parameters-1-schema
        style: form
      - description: Restrict results to safe images
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-recommendations-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/RecommendationDataList/example'
              schema:
                $ref: '#/components/schemas/RecommendationDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List recommended images
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-recommendations
      x-accepts: application/json
  /v2/images/search:
    get:
      description: "This endpoint searches for images. If you specify more than one\
        \ search parameter, the API uses an AND condition. Array parameters can be\
        \ specified multiple times; in this case, the API uses an AND or an OR condition\
        \ with those values, depending on the parameter. You can also filter search\
        \ terms out in the `query` parameter by prefixing the term with NOT. Free\
        \ API accounts show results only from a limited library of media, not the\
        \ full Shutterstock media library. Also, the number of search fields they\
        \ can use in a request is limited."
      operationId: Images_searchImages
      parameters:
      - description: Show images added on the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show images added on or after the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: "Show images with the specified aspect ratio or higher, using\
          \ a positive decimal of the width divided by the height, such as 1.7778\
          \ for a 16:9 image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio_min
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: "Show images with the specified aspect ratio or lower, using\
          \ a positive decimal of the width divided by the height, such as 1.7778\
          \ for a 16:9 image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio_max
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: "Show images with the specified aspect ratio, using a positive\
          \ decimal of the width divided by the height, such as 1.7778 for a 16:9\
          \ image"
        example: 1.7778
        explode: true
        in: query
        name: aspect_ratio
        required: false
        schema:
          exclusiveMinimum: true
          minimum: 0
          type: number
        style: form
        x-konfig-original-example: 1.7778
      - description: 'Set to true and specify the `ai_objective` and `ai_industry`
          parameters to use AI-powered search; the API returns information about how
          well images meet the objective for the industry '
        explode: true
        in: query
        name: ai_search
        required: false
        schema:
          type: boolean
        style: form
        x-relationships:
        - in: query
          name: ai_industry
          relationship: required
        - in: query
          name: ai_objective
          relationship: required
      - description: "For AI-powered search, specify the maximum number of labels\
          \ to return"
        explode: true
        in: query
        name: ai_labels_limit
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-6-schema
        style: form
      - description: "For AI-powered search, specify the industry to target; requires\
          \ that the `ai_search` parameter is set to true"
        explode: true
        in: query
        name: ai_industry
        required: false
        schema:
          enum:
          - automotive
          - cpg
          - finance
          - healthcare
          - retail
          - technology
          type: string
        style: form
      - description: "For AI-powered search, specify the goal of the media; requires\
          \ that the `ai_search` parameter is set to true"
        explode: true
        in: query
        name: ai_objective
        required: false
        schema:
          enum:
          - awareness
          - traffic
          - conversions
          type: string
        style: form
      - description: Show images added before the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show images with the specified Shutterstock-defined category;
          specify a category name or ID
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Specify either a hexadecimal color in the format '4F21EA' or
          'grayscale'; the API returns images that use similar colors
        example: 4F21EA
        explode: true
        in: query
        name: color
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 4F21EA
      - description: "Show images with the specified contributor names or IDs, allows\
          \ multiple"
        example:
        - "123456"
        explode: true
        in: query
        name: contributor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "123456"
      - description: "Show images from contributors in one or more specified countries,\
          \ or start with NOT to exclude a country from the search"
        example: US
        explode: true
        in: query
        name: contributor_country
        required: false
        schema: {}
        style: form
        x-konfig-original-example: US
      - description: Fields to display in the response; see the documentation for
          the fields parameter in the overview section
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
      - deprecated: true
        description: (Deprecated; use height_from and height_to instead) Show images
          with the specified height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: integer
        style: form
      - description: "Show images with the specified height or larger, in pixels"
        example: 1080
        explode: true
        in: query
        name: height_from
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1080
      - description: "Show images with the specified height or smaller, in pixels"
        example: 1080
        explode: true
        in: query
        name: height_to
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1080
      - description: Show images of the specified type
        example: photo
        explode: true
        in: query
        name: image_type
        required: false
        schema:
          items:
            enum:
            - photo
            - illustration
            - vector
            type: string
          type: array
        style: form
        x-konfig-original-example: photo
      - description: Hide results with potentially unsafe keywords
        explode: true
        in: query
        name: keyword_safe_search
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-19-schema
        style: form
      - description: Set query and result language (uses Accept-Language header if
          not set)
        example: fr
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: fr
      - description: Show only images with the specified license
        explode: true
        in: query
        name: license
        required: false
        schema:
          items:
            default: commercial
            enum:
            - commercial
            - editorial
            - enhanced
            example: commercial
            type: string
            x-konfig-original-example: commercial
            x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-21-schema-items
          type: array
        style: form
      - description: Show image results with the specified model IDs
        example:
        - "12345"
        - "67890"
        explode: true
        in: query
        name: model
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "12345"
        - "67890"
      - description: Show image results with horizontal or vertical orientation
        example: vertical
        explode: true
        in: query
        name: orientation
        required: false
        schema:
          enum:
          - horizontal
          - vertical
          type: string
        style: form
        x-konfig-original-example: vertical
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-24-schema
        style: form
        x-konfig-original-example: 1
      - description: Number of results per page
        example: 50
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-25-schema
        style: form
        x-konfig-original-example: 50
      - description: Show images of people with a signed model release
        example: true
        explode: true
        in: query
        name: people_model_released
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: Show images that feature people of the specified age category
        example: 20s
        explode: true
        in: query
        name: people_age
        required: false
        schema:
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        style: form
        x-konfig-original-example: 20s
      - description: "Show images with people of the specified ethnicities, or start\
          \ with NOT to show images without those ethnicities"
        example: hispanic
        explode: true
        in: query
        name: people_ethnicity
        required: false
        schema:
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            - NOT african
            - NOT african_american
            - NOT black
            - NOT brazilian
            - NOT chinese
            - NOT caucasian
            - NOT east_asian
            - NOT hispanic
            - NOT japanese
            - NOT middle_eastern
            - NOT native_american
            - NOT pacific_islander
            - NOT south_asian
            - NOT southeast_asian
            - NOT other
            type: string
          type: array
        style: form
        x-konfig-original-example: hispanic
      - description: Show images with people of the specified gender
        example: both
        explode: true
        in: query
        name: people_gender
        required: false
        schema:
          enum:
          - male
          - female
          - both
          type: string
        style: form
        x-konfig-original-example: both
      - description: Show images with the specified number of people
        example: 2
        explode: true
        in: query
        name: people_number
        required: false
        schema:
          maximum: 4
          minimum: 0
          type: integer
        style: form
        x-konfig-original-example: 2
      - description: One or more search terms separated by spaces; you can use NOT
          to filter out images that match a term
        example: dogs on the beach
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: dogs on the beach
      - description: Raise or lower search result rankings based on the result's relevance
          to a specified region; you can provide a country code or an IP address from
          which the API infers a country
        example: US
        explode: true
        in: query
        name: region
        required: false
        schema:
          format: country-code-2
          type: string
        style: form
        x-konfig-original-example: US
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-33-schema
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: popular
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-34-schema
        style: form
      - description: Spellcheck the search query and return results on suggested spellings
        explode: true
        in: query
        name: spellcheck_query
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-35-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-36-schema
        style: form
      - deprecated: true
        description: (Deprecated; use width_from and width_to instead) Show images
          with the specified width
        explode: true
        in: query
        name: width
        required: false
        schema:
          type: integer
        style: form
      - description: "Show images with the specified width or larger, in pixels"
        example: 1920
        explode: true
        in: query
        name: width_from
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1920
      - description: "Show images with the specified width or smaller, in pixels"
        example: 1920
        explode: true
        in: query
        name: width_to
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1920
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ImageSearchResults/example'
              schema:
                $ref: '#/components/schemas/ImageSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search for images
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/images/search" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "query=Vienna" \
            --data-urlencode "orientation=horizontal" \
            --data-urlencode "sort=popular"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const queryParams = {
            "query": "New York",
            "sort": "popular",
            "orientation": "horizontal"
          };

          imagesApi.searchImages(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "New York",
            "sort": "popular",
            "orientation": "horizontal",
          };

          sstk.images.searchImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: ImagesApiMethodsParams["searchImages"] = {
            "query": "New York",
            "sort": "popular",
            "orientation": "horizontal",
          };

          sstk.images.searchImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "New York",
            "sort" => "popular",
            "orientation" => "horizontal"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock images search-images \
            --query Vienna \
            --orientation horizontal \
            --sort popular
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-search
      x-accepts: application/json
  /v2/images/search/suggestions:
    get:
      description: This endpoint provides autocomplete suggestions for partial search
        terms.
      operationId: Images_getSearchSuggestions
      parameters:
      - description: Search term for which you want keyword suggestions
        example: cats
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: cats
      - description: Limit the number of suggestions
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          example: 10
          maximum: 25
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-suggestions-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Suggestions/example'
              schema:
                $ref: '#/components/schemas/Suggestions'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get suggestions for a search term
      tags:
      - images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-search-suggestions
      x-accepts: application/json
    post:
      description: This endpoint returns up to 10 important keywords from a block
        of plain text.
      operationId: Images_extractKeywordsFromText
      requestBody:
        content:
          application/json:
            example:
              $ref: '#/components/schemas/SearchEntitiesRequest/example'
            schema:
              $ref: '#/components/schemas/SearchEntitiesRequest'
            x-konfig-original-example:
              $ref: '#/components/schemas/SearchEntitiesRequest/example'
        description: Plain text to extract keywords from
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - beach
                    - place
                    - sand
                    - ocean
              schema:
                $ref: '#/components/schemas/SearchEntitiesResponse'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get keywords from text
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          DATA='{"text": "The beach is a wonderful place to visit. It has beautiful sand and ocean waves."}'

          curl -X POST "https://api.shutterstock.com/v2/images/search/suggestions" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const body = {
            "text": "The beach is a wonderful place to visit. It has beautiful sand and ocean waves."
          };

          imagesApi.getImageKeywordSuggestions(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const keywordSuggestionBody = {
            "body": {
              "text": "The beach is a wonderful place to visit. It has beautiful sand and ocean waves.",
            },
          };

          sstk.images.getImageKeywordSuggestions(keywordSuggestionBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const keywordSuggestionBody: ImagesApiMethodsParams["getImageKeywordSuggestions"] = {
            "body": {
              "text": "The beach is a wonderful place to visit. It has beautiful sand and ocean waves.",
            },
          };

          sstk.images.getImageKeywordSuggestions(keywordSuggestionBody)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "text" => "The beach is a wonderful place to visit. It has beautiful sand and ocean waves."
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/search/suggestions",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{"text": "The beach is a wonderful place to visit. It has beautiful sand and ocean waves."}' > data.json

          shutterstock images get-image-keyword-suggestions data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-images-search-suggestions
      x-content-type: application/json
      x-accepts: application/json
  /v2/images/updated:
    get:
      description: "This endpoint lists images that have been updated in the specified\
        \ time period to update content management systems (CMS) or digital asset\
        \ management (DAM) systems. In most cases, use the `interval` parameter to\
        \ show images that were updated recently, but you can also use the `start_date`\
        \ and `end_date` parameters to specify a range of no more than three days.\
        \ Do not use the `interval` parameter with either `start_date` or `end_date`."
      operationId: Images_listUpdatedContent
      parameters:
      - description: "Show images that were added, deleted, or edited; by default,\
          \ the endpoint returns images that were updated in any of these ways"
        example: addition
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - addition
            - deletion
            - edit
            type: string
          type: array
        style: form
        x-konfig-original-example: addition
      - description: Show images updated on or after the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show images updated before the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: "Show images updated in the specified time period, where the\
          \ time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR,\
          \ or 30 MINUTE; the default is 1 HOUR, which shows images that were updated\
          \ in the hour preceding the request"
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1 HOUR
          example: 1 HOUR
          type: string
          x-konfig-original-example: 1 HOUR
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-3-schema
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-4-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 2000
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-5-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-6-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/UpdatedMediaDataList/example'
              schema:
                $ref: '#/components/schemas/UpdatedMediaDataList'
          description: OK
      security:
      - basic: []
      - customer_accessCode: []
      summary: List updated images
      tags:
      - images
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/images/updated" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "interval=30 MINUTE"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const imagesApi = new sstk.ImagesApi();

          const queryParams = {
            "interval": "30 MINUTE"
          };

          imagesApi.getUpdatedImages(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "interval": "30 MINUTE",
          };

          sstk.images.getUpdatedImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: ImagesApiMethodsParams["getUpdatedImages"] = {
            "interval": "30 MINUTE",
          };

          sstk.images.getUpdatedImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "interval" => "30 MINUTE"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/images/updated?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock images get-updated-images \
            --interval "30 MINUTE"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-updated
      x-accepts: application/json
  /v2/images/{id}:
    get:
      description: "This endpoint shows information about an image, including a URL\
        \ to a preview image and the sizes that it is available in."
      operationId: Images_getDetails
      parameters:
      - description: Image ID
        example: "465011609"
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: asset-id
          type: string
        style: simple
        x-konfig-original-example: "465011609"
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-get-parameters-2-schema
        style: form
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Image/example'
              schema:
                $ref: '#/components/schemas/Image'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get details about images
      tags:
      - images
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: ImagesApiMethodsParams["getImage"] = {
            "id": "465011609",
          };

          sstk.images.getImage(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-id
      x-accepts: application/json
  /v2/images/{id}/similar:
    get:
      description: This endpoint returns images that are visually similar to an image
        that you specify.
      operationId: Images_listSimilarImages
      parameters:
      - description: Image ID
        example: "465011609"
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^([1-9]\\d*)|(U[a-zA-Z0-9]+)$"
          type: string
        style: simple
        x-konfig-original-example: "465011609"
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-3-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/ImageSearchResults/example'
              schema:
                $ref: '#/components/schemas/ImageSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List similar images
      tags:
      - images
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { ImagesApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: ImagesApiMethodsParams["getSimilarImages"] = {
            "id": "465011609",
          };

          sstk.images.getSimilarImages(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-images-id-similar
      x-accepts: application/json
  /v2/oauth/access_token:
    post:
      description: This endpoint returns an access token for the specified user and
        with the specified scopes. The token does not expire until the user changes
        their password. The body parameters must be encoded as form data.
      operationId: Oauth_getUserAccessToken
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  client_id: 141024g14g28104gff1h
            schema:
              $ref: '#/components/schemas/OauthGetUserAccessTokenRequest'
          application/x-www-form-urlencoded:
            examples:
              default:
                value:
                  client_id: 141024g14g28104gff1h
            schema:
              $ref: '#/components/schemas/OauthGetUserAccessTokenRequest1'
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/OauthAccessTokenResponse/example'
              schema:
                $ref: '#/components/schemas/OauthAccessTokenResponse'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get access tokens
      tags:
      - oauth
      x-code-samples:
      - lang: shell
        source: |
          curl "https://api.shutterstock.com/v2/oauth/access_token" \
            -X POST \
            --data-urlencode "client_id=$CLIENT_ID" \
            --data-urlencode "client_secret=$CLIENT_SECRET" \
            --data-urlencode "grant_type=authorization_code" \
            --data-urlencode "code=$CODE"
      - lang: javascript_v1--nodejs
        source: |
          const axios = require("axios");

          const body = {
            "client_id": clientId,
            "client_secret": clientSecret,
            "grant_type": "authorization_code",
            "code": code,
          };

          axios.post("https://api.shutterstock.com/v2/oauth/access_token", body)
            .then((res) => {
              console.log(res);
            });
      - lang: javascript_v2--nodejs
        source: |
          const axios = require("axios");

          const requestTokenBody = {
            "client_id": clientId,
            "client_secret": clientSecret,
            "grant_type": "authorization_code",
            "code": code,
          };

          axios.post("https://api.shutterstock.com/v2/oauth/access_token", requestTokenBody)
            .then((res) => {
              console.log(res);
            });
      - lang: typescript_v2--nodejs
        source: |
          const axios = require("axios");

          const requestTokenBody = {
            "client_id": clientId,
            "client_secret": clientSecret,
            "grant_type": "authorization_code",
            "code": code,
          };

          axios.post("https://api.shutterstock.com/v2/oauth/access_token", requestTokenBody)
            .then((res) => {
              console.log(res);
            });
      - lang: php
        source: |
          $body = [
            "client_id" => $clientId,
            "client_secret" => $clientSecret,
            "grant_type" => "authorization_code",
            "code" => $code
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/oauth/access_token",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Content-Type: application/json",
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          curl "https://api.shutterstock.com/v2/oauth/access_token" \
            -X POST \
            --data-urlencode "client_id=$CLIENT_ID" \
            --data-urlencode "client_secret=$CLIENT_SECRET" \
            --data-urlencode "grant_type=authorization_code" \
            --data-urlencode "code=$CODE"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-oauth-access_token
      x-content-type: application/json
      x-accepts: application/json
  /v2/oauth/authorize:
    get:
      description: "This endpoint returns a redirect URI (in the 'Location' header)\
        \ that the customer uses to authorize your application and, together with\
        \ POST /v2/oauth/access_token, generate an access token that represents that\
        \ authorization."
      operationId: Oauth_authorizeApplications
      parameters:
      - description: Client ID (Consumer Key) of your application
        example: 6d097450b209c6dcd859
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: 6d097450b209c6dcd859
      - description: User type to be authorized (usually 'customer')
        example: customer
        explode: true
        in: query
        name: realm
        required: false
        schema:
          default: customer
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-original-example: customer
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-1-schema
        style: form
        x-konfig-original-example: customer
      - description: The callback URI to send the request to after authorization;
          must use a host name that is registered with your application
        example: localhost
        explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: localhost
      - description: Type of temporary authorization code that will be used to generate
          an access code; the only valid value is 'code'
        example: code
        explode: true
        in: query
        name: response_type
        required: true
        schema:
          enum:
          - code
          type: string
        style: form
        x-konfig-original-example: code
      - description: Space-separated list of scopes to be authorized
        example: user.view
        explode: true
        in: query
        name: scope
        required: false
        schema:
          default: user.view
          example: user.view
          type: string
          x-konfig-original-example: user.view
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-4-schema
        style: form
        x-konfig-original-example: user.view
      - description: Unique value used by the calling app to verify the request
        example: "1540290465000"
        explode: true
        in: query
        name: state
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: "1540290465000"
      responses:
        "200":
          description: OK
        "302":
          content:
            text/html:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/AuthorizeResponse/example'
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
          description: Redirect user to authenticate with Shutterstock
          x-do-not-generate: true
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Authorize applications
      tags:
      - oauth
      x-code-samples:
      - lang: shell
        source: |
          curl "https://api.shutterstock.com/v2/oauth/authorize" \
            -X GET \
            -G \
            --data-urlencode "scope=licenses.create licenses.view purchases.view" \
            --data-urlencode "state=demo_`date +%s`" \
            --data-urlencode "response_type=code" \
            --data-urlencode "redirect_uri=http://localhost:3000/callback" \
            --data-urlencode "client_id=$CLIENT_ID"
      - lang: javascript_v1--nodejs
        source: |
          const axios = require("axios");

          axios.get("https://api.shutterstock.com/v2/oauth/authorize", {
            "params": {
              "scope": "licenses.create licenses.view purchases.view",
              "state": "demo_" + Math.round(new Date() / 1000),
              "response_type": "code",
              "redirect_uri": "http://localhost:3000/callback",
              "client_id": clientId
            },
            // Don't follow the redirect because this program is not running in a browser
            "maxRedirects": 0,
          })
            .catch(({ response }) => {
              // HTTP 302: Redirect
              console.log(response.data);
            });
      - lang: javascript_v2--nodejs
        source: |
          const axios = require("axios");

          axios.get("https://api.shutterstock.com/v2/oauth/authorize", {
            "params": {
              "scope": "licenses.create licenses.view purchases.view",
              "state": "demo_" + Math.round(new Date() / 1000),
              "response_type": "code",
              "redirect_uri": "http://localhost:3000/callback",
              "client_id": clientId,
            },
            // Don't follow the redirect because this program is not running in a browser
            "maxRedirects": 0,
          })
            .catch(({ response }) => {
              // HTTP 302: Redirect
              console.log(response.data);
            });
      - lang: typescript_v2--nodejs
        source: |
          const axios = require("axios");

          axios.get("https://api.shutterstock.com/v2/oauth/authorize", {
            "params": {
              "scope": "licenses.create licenses.view purchases.view",
              "state": "demo_" + Math.round(new Date() / 1000),
              "response_type": "code",
              "redirect_uri": "http://localhost:3000/callback",
              "client_id": clientId,
            },
            // Don't follow the redirect because this program is not running in a browser
            "maxRedirects": 0,
          })
            .catch(({ response }) => {
              // HTTP 302: Redirect
              console.log(response.data);
            });
      - lang: php
        source: |
          $queryFields = [
            "client_id" => $clientId,
            "redirect_uri" => "http://localhost:3000/callback",
            "response_type" => "code",
            "scope" => "licenses.create licenses.view purchases.view",
            "state" => time()
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/oauth/authorize?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          curl "https://api.shutterstock.com/v2/oauth/authorize" \
            -X GET \
            -G \
            --data-urlencode "scope=licenses.create licenses.view purchases.view" \
            --data-urlencode "state=demo_`date +%s`" \
            --data-urlencode "response_type=code" \
            --data-urlencode "redirect_uri=http://localhost:3000/callback" \
            --data-urlencode "client_id=$CLIENT_ID"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-oauth-authorize
      x-accepts: text/html
  /v2/sfx:
    get:
      description: This endpoint shows information about sound effects.
      operationId: Soundeffects_listDetails
      parameters:
      - description: One or more sound effect IDs
        example:
        - "1110335168"
        - "465011609"
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: asset-id
            type: string
          maxItems: 500
          type: array
        style: form
        x-konfig-original-example:
        - "1110335168"
        - "465011609"
      - description: Amount of detail to render in the response
        example: minimal
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-get-parameters-1-schema
        style: form
        x-konfig-original-example: minimal
      - description: Language for the keywords and categories in the response
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      - description: Which library to fetch from
        example: shutterstock
        explode: true
        in: query
        name: library
        required: false
        schema:
          enum:
          - shutterstock
          - premier
          - premiumbeat
          type: string
        style: form
        x-konfig-original-example: shutterstock
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/SFXDataList/example'
              schema:
                $ref: '#/components/schemas/SFXDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List details about sound effects
      tags:
      - sound_effects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-sfx
      x-accepts: application/json
  /v2/sfx/licenses:
    get:
      description: This endpoint lists existing licenses.
      operationId: Soundeffects_listLicenses
      parameters:
      - description: Show licenses for the specified sound effects ID
        example: "12345678"
        explode: true
        in: query
        name: sfx_id
        required: false
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        style: form
        x-konfig-original-example: "12345678"
      - description: "Show sound effects that are available with the specified license,\
          \ such as `standard` or `enhanced`; prepending a `-` sign excludes results\
          \ from that license"
        example: standard
        explode: true
        in: query
        name: license
        required: false
        schema:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        style: form
        x-konfig-original-example: standard
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-3-schema
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: end_date
          relationship: <=
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: start_date
          relationship: '>'
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter by the license ID
        explode: true
        in: query
        name: license_id
        required: false
        schema:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        style: form
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-9-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-10-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/DownloadHistoryDataList/example'
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List sound effects licenses
      tags:
      - sound_effects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-sfx-licenses
      x-accepts: application/json
    post:
      description: This endpoint licenses sounds effect assets.
      operationId: Soundeffects_licenseAssets
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/LicenseSFXRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseSFXRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/LicenseSFXResultDataList/example'
              schema:
                $ref: '#/components/schemas/LicenseSFXResultDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: License sound effects
      tags:
      - sound_effects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-sfx-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/sfx/licenses/{id}/downloads:
    post:
      description: This endpoint redownloads sound effects that you have already received
        a license for. The download links in the response are valid for 8 hours.
      operationId: Soundeffects_redownloadLicenses
      parameters:
      - description: License ID
        example: "123"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "123"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    url: http://download.dev.shutterstock.com/gatekeeper/abc/shutterstock_id.wav
              schema:
                $ref: '#/components/schemas/SfxUrl'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: Download sound effects
      tags:
      - sound_effects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-sfx-licenses-id-downloads
      x-accepts: application/json
  /v2/sfx/search:
    get:
      description: "This endpoint searches for sound effects. If you specify more\
        \ than one search parameter, the API uses an AND condition."
      operationId: Soundeffects_searchSoundEffects
      parameters:
      - description: Show sound effects added on the specified date
        example: 2022-09-23T00:00:00.000Z
        explode: true
        in: query
        name: added_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2022-09-23T00:00:00.000Z
      - description: Show sound effects added on or after the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show sound effects added before the specified date
        example: 2021-03-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-03-29T00:00:00.000Z
      - description: Show sound effects with the specified duration in seconds
        example: 180
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 180
      - description: Show sound effects with the specified duration or longer in seconds
        example: 30
        explode: true
        in: query
        name: duration_from
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 30
      - description: Show sound effects with the specified duration or shorter in
          seconds
        example: 180
        explode: true
        in: query
        name: duration_to
        required: false
        schema:
          type: integer
          uniqueItems: true
        style: form
        x-konfig-original-example: 180
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-6-schema
        style: form
      - description: Number of results per page
        example: 1
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-7-schema
        style: form
        x-konfig-original-example: 1
      - description: One or more search terms separated by spaces
        example: drum
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
          uniqueItems: true
        style: form
        x-konfig-original-example: drum
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-9-schema
        style: form
      - description: Sort by
        example: popular
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: popular
          enum:
          - popular
          - newest
          - relevance
          - random
          - oldest
          example: popular
          type: string
          uniqueItems: true
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-10-schema
        style: form
        x-konfig-original-example: popular
      - description: Amount of detail to render in the response
        example: full
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          uniqueItems: true
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-11-schema
        style: form
        x-konfig-original-example: full
      - description: Set query and result language (uses Accept-Language header if
          not set)
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/SFXSearchResults'
              schema:
                $ref: '#/components/schemas/SFXSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "503":
          description: Service Unavailable
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search for sound effects
      tags:
      - sound_effects
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/sfx/search" \
            --header "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "query=air" \
            --data-urlencode "duration_from=60"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const sfxApi = new sstk.SFXApi();

          const queryParams = {
            "query": "air",
            "duration_from": 60
          };

          sfxApi.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "bluegrass",
            "duration_from": 60,
            "moods": ["uplifting"],
          };

          sstk.sfx.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { SfxApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: SfxApiMethodsParams["searchTracks"] = {
            "query": "air",
            "duration_from": 60,
          };

          sstk.sfx.searchTracks(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "air",
            "duration_from" => 60
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/sfx/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock sfx search-tracks \
            --query air \
            --duration-from 60
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-sfx-search
      x-accepts: application/json
  /v2/sfx/{id}:
    get:
      description: This endpoint shows information about a sound effect.
      operationId: Soundeffects_getDetails
      parameters:
      - description: Audio track ID
        example: 442583
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 442583
      - description: Language for the keywords and categories in the response
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      - description: Amount of detail to render in the response
        example: full
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-id-get-parameters-2-schema
        style: form
        x-konfig-original-example: full
      - description: Which library to fetch from
        example: shutterstock
        explode: true
        in: query
        name: library
        required: false
        schema:
          enum:
          - shutterstock
          - premier
          - premiumbeat
          type: string
        style: form
        x-konfig-original-example: shutterstock
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/SFX/example'
              schema:
                $ref: '#/components/schemas/SFX'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "503":
          description: Service Unavailable
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get details about sound effects
      tags:
      - sound_effects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-sfx-id
      x-accepts: application/json
  /v2/test:
    get:
      operationId: Test_echoText
      parameters:
      - description: Text to echo
        explode: true
        in: query
        name: text
        required: false
        schema:
          default: ok
          example: ok
          type: string
          x-konfig-original-example: ok
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-test-get-parameters-0-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/TestEcho/example'
              schema:
                $ref: '#/components/schemas/TestEcho'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Echo text
      tags:
      - test
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-test
      x-accepts: application/json
  /v2/test/validate:
    get:
      operationId: Test_inputValidation
      parameters:
      - description: Integer ID
        example: 123
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
        x-konfig-original-example: 123
      - description: List of tags
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User agent
        explode: false
        in: header
        name: user-agent
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/TestValidate/example'
              schema:
                $ref: '#/components/schemas/TestValidate'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Validate input
      tags:
      - test
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-test-validate
      x-accepts: application/json
  /v2/user:
    get:
      operationId: Users_getUserDetails
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/UserDetails/example'
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - user.view
      summary: Get user details
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-user
      x-accepts: application/json
  /v2/user/access_token:
    get:
      operationId: Users_getAccessTokenDetails
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/AccessTokenDetails/example'
              schema:
                $ref: '#/components/schemas/AccessTokenDetails'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode: []
      summary: Get access token details
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-user-access_token
      x-accepts: application/json
  /v2/user/subscriptions:
    get:
      operationId: Users_listSubscriptions
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/SubscriptionDataList/example'
              schema:
                $ref: '#/components/schemas/SubscriptionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - purchases.view
      summary: List user subscriptions
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-user-subscriptions
      x-accepts: application/json
  /v2/videos:
    get:
      description: "This endpoint lists information about one or more videos, including\
        \ the aspect ratio and URLs to previews."
      operationId: Videos_listVideo
      parameters:
      - description: One or more video IDs
        example:
        - "639703"
        - "993721"
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: asset-id
            type: string
          maxItems: 500
          minItems: 1
          type: array
        style: form
        x-konfig-original-example:
        - "639703"
        - "993721"
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-get-parameters-1-schema
        style: form
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/VideoDataList/example'
              schema:
                $ref: '#/components/schemas/VideoDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List videos
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos
      x-accepts: application/json
  /v2/videos/categories:
    get:
      description: This endpoint lists the categories (Shutterstock-assigned genres)
        that videos can belong to.
      operationId: Videos_listCategories
      parameters:
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CategoryDataList/example'
              schema:
                $ref: '#/components/schemas/CategoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List video categories
      tags:
      - videos
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock, { Language } from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: VideosApiMethodsParams["listVideoCategories"] = {
            "language": Language.Es,
          };

          sstk.videos.listVideoCategories(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-categories
      x-accepts: application/json
  /v2/videos/collections:
    get:
      description: This endpoint lists your collections of videos and their basic
        attributes.
      operationId: Videos_listCollections
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-get-parameters-0-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-get-parameters-1-schema
        style: form
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        example: share_code
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
        x-konfig-original-example: share_code
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.view
      summary: List video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections
      x-accepts: application/json
    post:
      description: "This endpoint creates one or more collections (clipboxes). To\
        \ add videos to collections, use `POST /v2/videos/collections/{id}/items`."
      operationId: Videos_createVideoCollections
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/CollectionCreateRequest/example'
            schema:
              $ref: '#/components/schemas/CollectionCreateRequest'
        description: Collection metadata
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionCreateResponse/example'
              schema:
                $ref: '#/components/schemas/CollectionCreateResponse'
          description: Successfully created video collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - collections.edit
      summary: Create video collections
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "New collection name"
          }'

          curl -X POST "https://api.shutterstock.com/v2/videos/collections" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const body = {
            "name": "New collection name"
          };

          videosApi.createVideoCollection(body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const createBody = {
            "body": {
              "name": "New collection name",
            },
          };

          sstk.videos.createVideoCollection(createBody)
            .then(({ data }) => {
              const newCollectionId = data.id;
              console.log("Created", newCollectionId);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const createBody: VideosApiMethodsParams["createVideoCollection"] = {
            "body": {
              "name": "New collection name",
            },
          };

          sstk.videos.createVideoCollection(createBody)
            .then(({ data }) => {
              const newCollectionId = data.id;
              console.log("Created", newCollectionId);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "name" => "New collection name"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/collections",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "New collection name"
          }' > data.json

          shutterstock videos create-video-collection data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-videos-collections
      x-content-type: application/json
      x-accepts: application/json
  /v2/videos/collections/featured:
    get:
      description: This endpoint lists featured video collections and a name and cover
        video for each collection.
      operationId: Videos_listFeaturedVideoCollections
      parameters:
      - description: "What information to include in the response, such as a URL to\
          \ the collection"
        example: share_url
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - share_url
          type: string
        style: form
        x-konfig-original-example: share_url
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/FeaturedCollectionDataList/example'
              schema:
                $ref: '#/components/schemas/FeaturedCollectionDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List featured video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured
      x-accepts: application/json
  /v2/videos/collections/featured/{id}:
    get:
      description: "This endpoint gets more detailed information about a featured\
        \ video collection, including its cover video and timestamps for its creation\
        \ and most recent update. To get the videos, use `GET /v2/videos/collections/featured/{id}/items`."
      operationId: Videos_collectionDetailsGet
      parameters:
      - description: Collection ID
        example: "136351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "136351027"
      - description: "What information to include in the response, such as a URL to\
          \ the collection"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - share_url
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/FeaturedCollection/example'
              schema:
                $ref: '#/components/schemas/FeaturedCollection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Featured collection not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get the details of featured video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured-id
      x-accepts: application/json
  /v2/videos/collections/featured/{id}/items:
    get:
      description: This endpoint lists the IDs of videos in a featured collection
        and the date that each was added.
      operationId: Videos_getFeaturedCollectionItems
      parameters:
      - description: Collection ID
        example: "136351027"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "136351027"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/VideoCollectionItemDataList/example'
              schema:
                $ref: '#/components/schemas/VideoCollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Featured collection not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get the contents of featured video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured-id-items
      x-accepts: application/json
  /v2/videos/collections/{id}:
    delete:
      description: This endpoint deletes a collection.
      operationId: Videos_deleteCollection
      parameters:
      - description: The ID of the collection to delete
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      responses:
        "204":
          description: Successfully deleted collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Delete video collections
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/videos/collections/17555176" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const collectionId = "17555176";

          videosApi.deleteVideoCollection(collectionId)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176";

          const deleteVideoCollectionParams = {
            "id": collectionId,
          };

          sstk.videos.deleteVideoCollection(deleteVideoCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176";

          const deleteVideoCollectionParams: VideosApiMethodsParams["deleteVideoCollection"] = {
            "id": collectionId,
          };

          sstk.videos.deleteVideoCollection(deleteVideoCollectionParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/collections/17555176",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock videos delete-video-collection 17555176
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-videos-collections-id
      x-accepts: application/json
    get:
      description: "This endpoint gets more detailed information about a collection,\
        \ including the timestamp for its creation and the number of videos in it.\
        \ To get the videos in collections, use GET /v2/videos/collections/{id}/items."
      operationId: Videos_collectionDetailsGet
      parameters:
      - description: The ID of the collection to return
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      - description: "Which sharing information to include in the response, such as\
          \ a URL to the collection"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        style: form
      - description: Code to retrieve a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Collection/example'
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the details of video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-id
      x-accepts: application/json
    post:
      description: This endpoint sets a new name for a collection.
      operationId: Videos_setNewName
      parameters:
      - description: The ID of the collection to rename
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/CollectionUpdateRequest/example'
            schema:
              $ref: '#/components/schemas/CollectionUpdateRequest'
        description: The new name for the collection
        required: true
      responses:
        "204":
          description: Successfully updated collection
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Rename video collections
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "name": "Updated collection name"
          }'

          curl -X POST "https://api.shutterstock.com/v2/videos/collections/17555176" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const collectionId = "186765119";

          const body = {
            "name": "My new collection name"
          };

          videosApi.renameVideoCollection(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "186765119";

          const renameCollectionBody = {
            "id": collectionId,
            "body": {
              "name": "My new collection name for video collection",
            },
          };

          sstk.videos.renameVideoCollection(renameCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "186765119";

          const renameCollectionBody: VideosApiMethodsParams["renameVideoCollection"] = {
            "id": collectionId,
            "body": {
              "name": "My new collection name for video collection",
            },
          };

          sstk.videos.renameVideoCollection(renameCollectionBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "name" => "Updated collection name"
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/collections/17555176",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "name": "Updated collection name"
          }' > data.json

          shutterstock videos rename-video-collection 17555176 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-videos-collections-id
      x-content-type: application/json
      x-accepts: application/json
  /v2/videos/collections/{id}/items:
    delete:
      description: This endpoint removes one or more videos from a collection.
      operationId: Videos_removeFromCollection
      parameters:
      - description: The ID of the Collection from which items will be deleted
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      - description: One or more video IDs to remove from the collection
        explode: true
        in: query
        name: item_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Successfully removed collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Remove videos from collections
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |-
          curl -X DELETE "https://api.shutterstock.com/v2/videos/collections/17555176/items?item_id=495863218" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const collectionId = "17555176";

          // Array of videos to remove
          const videosToRemove = {
            "item_id": [
              "10120264"
            ]
          };

          videosApi.deleteVideoCollectionItems(collectionId, videosToRemove)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176";
          const itemToDelete = "10120264";

          const deleteVideoParams = {
            "id": collectionId,
            "item_id": [
              itemToDelete,
            ],
          };

          sstk.videos.deleteVideoCollectionItems(deleteVideoParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176";
          const itemToDelete = "10120264";

          const deleteVideoParams: VideosApiMethodsParams["deleteVideoCollectionItems"] = {
            "id": collectionId,
            "item_id": [
              itemToDelete,
            ],
          };

          sstk.videos.deleteVideoCollectionItems(deleteVideoParams)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/collections/17555176/items?item_id=495863218",
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_CUSTOMREQUEST => "DELETE",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock videos delete-video-collection-items 17555176 \
            --item-id 495863218
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v2-videos-collections-id-items
      x-accepts: application/json
    get:
      description: This endpoint lists the IDs of videos in a collection and the date
        that each was added.
      operationId: Videos_getCollectionItems
      parameters:
      - description: Collection ID
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-1-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-2-schema
        style: form
      - description: Code to retrieve the contents of a shared collection
        explode: true
        in: query
        name: share_code
        required: false
        schema:
          type: string
        style: form
      - description: Sort order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/CollectionItemDataList/example'
              schema:
                $ref: '#/components/schemas/CollectionItemDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.view
      summary: Get the contents of video collections
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-id-items
      x-accepts: application/json
    post:
      description: This endpoint adds one or more videos to a collection by video
        IDs.
      operationId: Videos_addToCollectionItems
      parameters:
      - description: The ID of the collection to which items should be added
        example: "17555176"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: "17555176"
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  items:
                  - id: "10120264"
                  - id: "24419024"
            schema:
              $ref: '#/components/schemas/CollectionItemRequest'
        description: Array of video IDs to add to the collection
        required: true
      responses:
        "204":
          description: Successfully added collection items
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
      security:
      - customer_accessCode:
        - collections.edit
      summary: Add videos to collections
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |-
          DATA='{
            "items": [
              {
                "id": "10120264"
              },
              {
                "id": "24419024"
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/videos/collections/17555176/items" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const collectionId = "17555176"; // Collection ID

          // Array of videos to add
          const body = {
            "items": [
              {
                "id": "10120264",
                "media_type": "video"
              }
            ]
          };

          videosApi.addImageCollectionItems(collectionId, body)
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176"; // Collection ID

          const addVideoBody = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "10120264",
                  "media_type": "video",
                },
              ],
            },
          };

          sstk.videos.addVideoCollectionItems(addVideoBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const collectionId = "17555176"; // Collection ID

          const addVideoBody: VideosApiMethodsParams["addVideoCollectionItems"] = {
            "id": collectionId,
            "body": {
              "items": [
                {
                  "id": "10120264",
                  "media_type": "video",
                },
              ],
            },
          };

          sstk.videos.addVideoCollectionItems(addVideoBody)
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |-
          $body = [
            "items" => [
              [
                "id" => "10120264"
              ],
              [
                "id" => "24419024"
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/collections/17555176/items",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "items": [
              {
                "id": "10120264"
              },
              {
                "id": "24419024"
              }
            ]
          }' > data.json

          shutterstock videos add-video-collection-items 17555176 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-videos-collections-id-items
      x-content-type: application/json
      x-accepts: application/json
  /v2/videos/licenses:
    get:
      description: This endpoint lists existing licenses.
      operationId: Videos_listLicenses
      parameters:
      - description: Show licenses for the specified video ID
        example: "12345678"
        explode: true
        in: query
        name: video_id
        required: false
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        style: form
        x-konfig-original-example: "12345678"
      - description: "Show videos that are available with the specified license, such\
          \ as `standard` or `enhanced`; prepending a `-` sign excludes results from\
          \ that license"
        example: standard
        explode: true
        in: query
        name: license
        required: false
        schema:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        style: form
        x-konfig-original-example: standard
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-3-schema
        style: form
      - description: Sort by oldest or newest videos first
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-4-schema
        style: form
      - description: Filter licenses by username of licensee
        example: aUniqueUsername
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: aUniqueUsername
      - description: Show licenses created on or after the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: end_date
          relationship: <=
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Show licenses created before the specified date
        example: 2021-03-29T13:25:13.521Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-relationships:
        - in: query
          name: start_date
          relationship: '>'
        x-konfig-original-example: 2021-03-29T13:25:13.521Z
      - description: Filter licenses by download availability
        explode: true
        in: query
        name: download_availability
        required: false
        schema:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-8-schema
        style: form
      - description: Set to true to see license history for all members of your team.
        explode: true
        in: query
        name: team_history
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-9-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - download_time: 2018-05-24T18:26:25.000Z
                      id: e121
                      is_downloadable: true
                      license: footage_premier
                      metadata:
                        customer_id: "12345"
                        geo_location: US
                        number_viewed: "15"
                        search_term: dog
                      subscription_id: s12345678
                      user:
                        username: myusername
                      video:
                        format:
                          size: sd
                        id: "2140697"
                    page: 1
                    per_page: 20
              schema:
                $ref: '#/components/schemas/DownloadHistoryDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: List video licenses
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/videos/licenses" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            -G \
            --data-urlencode "start_date=2016-10-03T01:25:13.521Z" \
            --data-urlencode "end_date=2016-10-04T13:25:13.521Z" \
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const queryParams = {
            "start_date": "2016-10-03T01:25:13.521Z",
            "end_date": "2016-10-04T13:25:13.521Z"
          };

          videosApi.getVideoLicenseList(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.images.getImageLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const today = new Date();
          const lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);

          const queryParams: VideosApiMethodsParams["getVideoLicenseList"] = {
            "start_date": lastWeek,
            "end_date": today,
          };

          sstk.images.getImageLicenseList(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "start_date" => "2016-10-03T01:25:13.521Z",
            "end_date" => "2016-10-04T13:25:13.521Z"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/licenses" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock videos get-video-license-list \
            --start-date "2021-01-03T01:25:13.521Z" \
            --end-date "2021-05-04T13:25:13.521Z"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-licenses
      x-accepts: application/json
    post:
      description: This endpoint gets licenses for one or more videos. You must specify
        the video IDs in the body parameter and the size and subscription ID either
        in the query parameter or with each video ID in the body parameter. Values
        in the body parameter override values in the query parameters. The download
        links in the response are valid for 8 hours.
      operationId: Videos_licenseVideos
      parameters:
      - description: The subscription ID to use for licensing
        example: s12345678
        explode: true
        in: query
        name: subscription_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: s12345678
      - description: The size of the video to license
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: web
          enum:
          - web
          - sd
          - hd
          - 4k
          example: web
          type: string
          x-konfig-original-example: web
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-post-parameters-1-schema
        style: form
      - description: The Search ID that led to this licensing event
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  $ref: '#/components/schemas/LicenseVideoRequest/example'
            schema:
              $ref: '#/components/schemas/LicenseVideoRequest'
        description: List of videos to request licenses for and information about
          each license transaction; these values override the defaults in the query
          parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/LicenseVideoResultDataList/example'
              schema:
                $ref: '#/components/schemas/LicenseVideoResultDataList'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.create
        - purchases.view
      summary: License videos
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |
          DATA='{
            "videos": [
              {
                "video_id": "2140697",
                "subscription_id": "s12345678",
                "size": "hd"
              },
              {
                "video_id": "5613314",
                "subscription_id": "s12345678",
                "size": "4k"
              }
            ]
          }'

          curl -X POST "https://api.shutterstock.com/v2/videos/licenses" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const body = {
            "videos": [
              {
                "subscription_id": "s12345678",
                "video_id": "419235589"
              },
              {
                "subscription_id": "s12345678",
                "video_id": "1079756147"
              }
            ]
          };

          videosApi.licenseVideos(body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams = {
            "body": {
              "videos": [
                {
                  "subscription_id": "s12345678",
                  "video_id": "419235589",
                  "size": "hd",
                },
                {
                  "subscription_id": "s12345678",
                  "video_id": "1079756147",
                  "size": "hd",
                },
              ],
            },
          };

          sstk.videos.licenseVideos(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, { LicenseVideoSizeEnum } from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseParams: VideosApiMethodsParams["licenseVideos"] = {
            "body": {
              "videos": [
                {
                  "subscription_id": "s12345678",
                  "video_id": "419235589",
                  "size": LicenseVideoSizeEnum.Hd,
                },
                {
                  "subscription_id": "s12345678",
                  "video_id": "1079756147",
                  "size": LicenseVideoSizeEnum.Hd,
                },
              ],
            },
          };

          sstk.videos.licenseVideos(licenseParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [
            "videos" => [
              [
                "video_id" => "2140697",
                "subscription_id" => "s12345678",
                "size" => "hd"
              ],
              [
                "video_id" => "5613314",
                "subscription_id" => "s12345678",
                "size" => "4k"
              ]
            ]
          ];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/licenses",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{
            "videos": [
              {
                "video_id": "2140697",
                "subscription_id": "s12345678",
                "size": "hd"
              },
              {
                "video_id": "5613314",
                "subscription_id": "s12345678",
                "size": "4k"
              }
            ]
          }' > data.json

          shutterstock videos license-videos \
            data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-videos-licenses
      x-content-type: application/json
      x-accepts: application/json
  /v2/videos/licenses/{id}/downloads:
    post:
      description: This endpoint redownloads videos that you have already received
        a license for.
      operationId: Videos_redownloadDownloads
      parameters:
      - description: The license ID of the item to (re)download. The download links
          in the response are valid for 8 hours.
        example: e123
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: e123
      requestBody:
        content:
          application/json:
            example:
              $ref: '#/components/schemas/RedownloadVideo/example'
            schema:
              $ref: '#/components/schemas/RedownloadVideo'
            x-konfig-original-example:
              $ref: '#/components/schemas/RedownloadVideo/example'
        description: Information about the videos to redownload
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    url: https://download1.shutterstock.com/gatekeeper/W3siZSI6MTUzMzMzMzUzMCwiayI6InZpZGVvLzM5NjU4ODEvaGQubW92IiwibSI6MSwiZCI6InNodXR0ZXJzdG9jay1tZWRpYSJ9LCJjZ2lvRU14T09hNWZGTHZsN21iTWVPRVQ3MFEiXQ/shutterstock_v3965881.mov
              schema:
                $ref: '#/components/schemas/Url'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - customer_accessCode:
        - licenses.view
      summary: Download videos
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |
          DATA='{}'

          curl -X POST "https://api.shutterstock.com/v2/videos/licenses/e123/downloads" \
            -d "$DATA" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const licenseId = "e123";

          const body = {};

          videosApi.downloadVideos(licenseId, body)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not video ID

          const queryParams = {
            "id": licenseId,
            "body": {
              "size": "hd",
            },
          };

          sstk.videos.downloadVideos(queryParams)
            .then(({ data }) => {
              console.log(data.url);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock, { RedownloadVideoSizeEnum } from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const licenseId = "e123"; // license ID, not video ID

          const queryParams: VideosApiMethodsParams["downloadVideos"] = {
            "id": licenseId,
            "body": {
              "size": RedownloadVideoSizeEnum.Hd,
            },
          };

          sstk.videos.downloadVideos(queryParams)
            .then(({ data }) => {
              console.log(data.url);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $body = [];
          $encodedBody = json_encode($body);

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/licenses/e123/downloads",
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $encodedBody,
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN",
              "Content-Type: application/json"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          echo '{}' > data.json

          shutterstock videos download-videos e123 data.json
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v2-videos-licenses-id-downloads
      x-content-type: application/json
      x-accepts: application/json
  /v2/videos/search:
    get:
      description: "This endpoint searches for videos. If you specify more than one\
        \ search parameter, the API uses an AND condition. Array parameters can be\
        \ specified multiple times; in this case, the API uses an AND or an OR condition\
        \ with those values, depending on the parameter. You can also filter search\
        \ terms out in the `query` parameter by prefixing the term with NOT."
      operationId: Videos_searchVideo
      parameters:
      - description: Show videos added on the specified date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show videos added on or after the specified date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_start
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show videos added before the specified date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: added_date_end
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show videos with the specified aspect ratio
        example: 43
        explode: true
        in: query
        name: aspect_ratio
        required: false
        schema:
          enum:
          - "43"
          - "169"
          - nonstandard
          type: string
        style: form
        x-konfig-original-example: 43
      - description: Show videos with the specified Shutterstock-defined category;
          specify a category name or ID
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Show videos with the specified artist names or IDs
        example: "[12345678]"
        explode: true
        in: query
        name: contributor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example: "[12345678]"
      - description: Show videos from contributors in one or more specified countries
        example: US
        explode: true
        in: query
        name: contributor_country
        required: false
        schema:
          items:
            format: country-code-2
            type: string
          type: array
        style: form
        x-konfig-original-example: US
      - deprecated: true
        description: (Deprecated; use duration_from and duration_to instead) Show
          videos with the specified duration in seconds
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
        style: form
      - description: Show videos with the specified duration or longer in seconds
        example: 60
        explode: true
        in: query
        name: duration_from
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 60
      - description: Show videos with the specified duration or shorter in seconds
        example: 180
        explode: true
        in: query
        name: duration_to
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 180
      - deprecated: true
        description: (Deprecated; use fps_from and fps_to instead) Show videos with
          the specified frames per second
        explode: true
        in: query
        name: fps
        required: false
        schema:
          type: number
        style: form
      - description: Show videos with the specified frames per second or more
        example: 24
        explode: true
        in: query
        name: fps_from
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 24
      - description: Show videos with the specified frames per second or fewer
        example: 60
        explode: true
        in: query
        name: fps_to
        required: false
        schema:
          type: number
        style: form
        x-konfig-original-example: 60
      - description: Hide results with potentially unsafe keywords
        explode: true
        in: query
        name: keyword_safe_search
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-13-schema
        style: form
      - description: Set query and result language (uses Accept-Language header if
          not set)
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      - description: Show only videos with the specified license or licenses
        example:
        - commercial
        - editorial
        explode: true
        in: query
        name: license
        required: false
        schema:
          items:
            default: commercial
            enum:
            - commercial
            - editorial
            example: commercial
            type: string
            x-konfig-original-example: commercial
            x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-15-schema-items
          type: array
        style: form
        x-konfig-original-example:
        - commercial
        - editorial
      - description: Show videos with each of the specified models
        example:
        - "442583"
        - "434750"
        explode: true
        in: query
        name: model
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-konfig-original-example:
        - "442583"
        - "434750"
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-17-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-18-schema
        style: form
      - description: Show videos that feature people of the specified age range
        example: 20s
        explode: true
        in: query
        name: people_age
        required: false
        schema:
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        style: form
        x-konfig-original-example: 20s
      - description: Show videos with people of the specified ethnicities
        example: hispanic
        explode: true
        in: query
        name: people_ethnicity
        required: false
        schema:
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            type: string
          type: array
        style: form
        x-konfig-original-example: hispanic
      - description: Show videos with people with the specified gender
        example: female
        explode: true
        in: query
        name: people_gender
        required: false
        schema:
          enum:
          - male
          - female
          - both
          type: string
        style: form
        x-konfig-original-example: female
      - description: Show videos with the specified number of people
        example: 2
        explode: true
        in: query
        name: people_number
        required: false
        schema:
          maximum: 4
          minimum: 0
          type: integer
        style: form
        x-konfig-original-example: 2
      - description: Show only videos of people with a signed model release
        example: true
        explode: true
        in: query
        name: people_model_released
        required: false
        schema:
          type: boolean
        style: form
        x-konfig-original-example: true
      - description: One or more search terms separated by spaces; you can use NOT
          to filter out videos that match a term
        example: dogs running on the beach
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: dogs running on the beach
      - description: Show videos with the specified resolution
        example: 4k
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          enum:
          - 4k
          - standard_definition
          - high_definition
          type: string
        style: form
        x-konfig-original-example: 4k
      - description: Enable or disable safe search
        explode: true
        in: query
        name: safe
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-26-schema
        style: form
      - description: Sort by one of these categories
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: popular
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-27-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-28-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/VideoSearchResults/example'
              schema:
                $ref: '#/components/schemas/VideoSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Search for videos
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/videos/search" \
            --header "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "query=hot air balloon" \
            --data-urlencode "duration_from=30" \
            --data-urlencode "sort=popular"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const queryParams = {
            "query": "hot air balloon",
            "duration_from": 30,
            "sort": "popular"
          };

          videosApi.searchVideos(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "query": "hot air balloon",
            "duration_from": 30,
            "sort": "popular",
          };

          sstk.videos.searchVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: VideosApiMethodsParams["searchVideos"] = {
            "query": "hot air balloon",
            "duration_from": 30,
            "sort": "popular",
          };

          sstk.videos.searchVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "query" => "hot air balloon",
            "duration_from" => 30,
            "sort" => "popular"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/search?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock videos search-videos \
            --query "hot air balloon" \
            --duration-from 30 \
            --sort popular
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-search
      x-accepts: application/json
  /v2/videos/search/suggestions:
    get:
      description: This endpoint provides autocomplete suggestions for partial search
        terms.
      operationId: Videos_searchSuggestions
      parameters:
      - description: Search term for which you want keyword suggestions
        example: cats
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
        x-konfig-original-example: cats
      - description: Limit the number of the suggestions
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          example: 10
          maximum: 25
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-suggestions-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Suggestions/example'
              schema:
                $ref: '#/components/schemas/Suggestions'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get suggestions for a search term
      tags:
      - videos
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-search-suggestions
      x-accepts: application/json
  /v2/videos/updated:
    get:
      description: "This endpoint lists videos that have been updated in the specified\
        \ time period to update content management systems (CMS) or digital asset\
        \ management (DAM) systems. In most cases, use the `interval` parameter to\
        \ show videos that were updated recently, but you can also use the `start_date`\
        \ and `end_date` parameters to specify a range of no more than three days.\
        \ Do not use the `interval` parameter with either `start_date` or `end_date`."
      operationId: Videos_listUpdatedVideos
      parameters:
      - description: Show videos updated on or after the specified date
        example: 2020-05-29T00:00:00.000Z
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2020-05-29T00:00:00.000Z
      - description: Show videos updated before the specified date
        example: 2021-05-29T00:00:00.000Z
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
        x-konfig-original-example: 2021-05-29T00:00:00.000Z
      - description: "Show videos updated in the specified time period, where the\
          \ time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR,\
          \ or 30 MINUTE; the default is 1 HOUR, which shows videos that were updated\
          \ in the hour preceding the request"
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1 HOUR
          example: 1 HOUR
          type: string
          x-konfig-original-example: 1 HOUR
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-2-schema
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-3-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          example: 100
          maximum: 2000
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-4-schema
        style: form
      - description: Sort by oldest or newest videos first
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-5-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/UpdatedMediaDataList/example'
              schema:
                $ref: '#/components/schemas/UpdatedMediaDataList'
          description: OK
      security:
      - basic: []
      - customer_accessCode: []
      summary: List updated videos
      tags:
      - videos
      x-code-samples:
      - lang: shell
        source: |
          curl -X GET "https://api.shutterstock.com/v2/videos/updated "\
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN" \
            -G \
            --data-urlencode "interval=30 MINUTE"
      - lang: javascript_v1--nodejs
        source: |
          const sstk = require("shutterstock-api");

          sstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);

          const videosApi = new sstk.VideosApi();

          const queryParams = {
            "interval": "30 MINUTE"
          };

          videosApi.getUpdatedVideos(queryParams)
            .then((data) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: javascript_v2--nodejs
        source: |
          const Shutterstock = require("shutterstock-api");

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams = {
            "interval": "30 MINUTE",
          };

          sstk.videos.getUpdatedVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: typescript_v2--nodejs
        source: |
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: VideosApiMethodsParams["getUpdatedVideos"] = {
            "interval": "30 MINUTE",
          };

          sstk.videos.getUpdatedVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      - lang: php
        source: |
          $queryFields = [
            "interval" => "30 MINUTE"
          ];

          $options = [
            CURLOPT_URL => "https://api.shutterstock.com/v2/videos/updated?" . http_build_query($queryFields),
            CURLOPT_USERAGENT => "php/curl",
            CURLOPT_HTTPHEADER => [
              "Authorization: Bearer $SHUTTERSTOCK_API_TOKEN"
            ],
            CURLOPT_RETURNTRANSFER => 1
          ];

          $handle = curl_init();
          curl_setopt_array($handle, $options);
          $response = curl_exec($handle);
          curl_close($handle);

          $decodedResponse = json_decode($response);
          print_r($decodedResponse);
      - lang: bash
        source: |
          export SHUTTERSTOCK_API_TOKEN="v2/ODYwYmRlNzBiYjMzNTE2M2UyZTQvMTc4NzI2OTM4L2N1c3RvbWVyLzIvWEtXR01HQ1FaVHRLOG85a"

          shutterstock videos get-updated-videos \
            --interval "30 MINUTE"
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-updated
      x-accepts: application/json
  /v2/videos/{id}:
    get:
      description: "This endpoint shows information about a video, including URLs\
        \ to previews and the sizes that it is available in."
      operationId: Videos_videoDetails
      parameters:
      - description: Video ID
        example: "639703"
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: asset-id
          type: string
        style: simple
        x-konfig-original-example: "639703"
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-get-parameters-2-schema
        style: form
      - description: The ID of the search that is related to this request
        example: 00000000-0000-0000-0000-000000000000
        explode: true
        in: query
        name: search_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: 00000000-0000-0000-0000-000000000000
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/Video/example'
              schema:
                $ref: '#/components/schemas/Video'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basic: []
      - customer_accessCode: []
      summary: Get details about videos
      tags:
      - videos
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: VideosApiMethodsParams["getVideo"] = {
            "id": "639703",
          };

          sstk.videos.getVideo(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-id
      x-accepts: application/json
  /v2/videos/{id}/similar:
    get:
      description: This endpoint searches for videos that are similar to a video that
        you specify.
      operationId: Videos_findSimilar
      parameters:
      - description: The ID of a video for which similar videos should be returned
        example: "2140697"
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: asset-id
          type: string
        style: simple
        x-konfig-original-example: "2140697"
      - description: Language for the keywords and categories in the response
        example: es
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
        x-konfig-original-example: es
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-2-schema
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-3-schema
        style: form
      - description: Amount of detail to render in the response
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    $ref: '#/components/schemas/VideoSearchResults/example'
              schema:
                $ref: '#/components/schemas/VideoSearchResults'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basic: []
      - customer_accessCode: []
      summary: List similar videos
      tags:
      - videos
      x-code-samples:
      - lang: typescript_v2--nodejs
        source: |-
          import Shutterstock from "shutterstock-api";
          import type { VideosApiMethodsParams } from "shutterstock-api";

          const sstk = new Shutterstock({
            "accessToken": process.env.SHUTTERSTOCK_API_TOKEN,
          });

          const queryParams: VideosApiMethodsParams["findSimilarVideos"] = {
            "id": "2140697",
          };

          sstk.videos.findSimilarVideos(queryParams)
            .then(({ data }) => {
              console.log(data);
            })
            .catch((error) => {
              console.error(error);
            });
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v2-videos-id-similar
      x-accepts: application/json
components:
  schemas:
    AccessTokenDetails:
      description: Access token details that are currently associated with this user
      example:
        client_id: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
        customer_id: "123456789"
        expires_in: 3600
        realm: customer
        scopes:
        - collections.edit
        - collections.view
        - licenses.create
        - licenses.view
        - purchases.view
        - user.view
        user_id: "123456789"
        username: jdoe
      properties:
        client_id:
          description: Client ID that is associated with the user
          example: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-client_id
        contributor_id:
          description: Contributor ID that is associated with the user
          type: string
        customer_id:
          description: Customer ID that is associated with the user
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-customer_id
        expires_in:
          description: Number of seconds until the access token expires; no expiration
            if this value is null
          example: 3600
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-expires_in
        organization_id:
          description: Organization ID that is associated with the user
          type: string
        realm:
          description: Type of access token
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-realm
        scopes:
          description: Scopes that this access token provides when used as authentication
          items:
            type: string
          type: array
        user_id:
          description: User ID that is associated with the user
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-user_id
        username:
          description: User name that is associated with the user
          example: jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails-properties-username
      type: object
      x-konfig-original-example:
        client_id: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
        customer_id: "123456789"
        expires_in: 3600
        realm: customer
        scopes:
        - collections.edit
        - collections.view
        - licenses.create
        - licenses.view
        - purchases.view
        - user.view
        user_id: "123456789"
        username: jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccessTokenDetails
      x-konfig-is-used-in-successful-response: true
    Album:
      description: Album metadata
      example:
        title: Happy Music
        id: "1234567"
      properties:
        title:
          description: The album title
          example: Happy Music
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Album-properties-title
        id:
          description: The album ID
          example: "1234567"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Album-properties-id
      required:
      - id
      - title
      type: object
      x-konfig-original-example:
        title: Happy Music
        id: "1234567"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Album
    Allotment:
      description: An allotment of credits as part of a subscription
      example:
        downloads_left: 5
        downloads_limit: 10
        end_time: 2020-05-29T17:10:22.000Z
        start_time: 2020-05-29T17:10:22.000Z
      properties:
        downloads_left:
          description: Number of credits remaining in the subscription
          example: 5
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Allotment-properties-downloads_left
        downloads_limit:
          description: Total number of credits available to this subscription
          example: 10
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Allotment-properties-downloads_limit
        end_time:
          description: Date the subscription ends
          example: 2020-05-29T17:10:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Allotment-properties-end_time
        start_time:
          description: Date the subscription started
          example: 2020-05-29T17:10:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Allotment-properties-start_time
      type: object
      x-konfig-original-example:
        downloads_left: 5
        downloads_limit: 10
        end_time: 2020-05-29T17:10:22.000Z
        start_time: 2020-05-29T17:10:22.000Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Allotment
    Artist:
      description: Metadata about the artist that created the media
      example:
        name: The Happy Tunes Band
      properties:
        name:
          description: The artist's name
          example: The Happy Tunes Band
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Artist-properties-name
      required:
      - name
      type: object
      x-konfig-original-example:
        name: The Happy Tunes Band
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Artist
    Audio:
      description: Audio metadata
      example:
        title: Another Tomorrow
        description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
          \ synth bass drums and synth drums that create a euphoric, upbeat mood."
        added_date: 2016-08-16T00:00:00.000Z
        artists:
        - name: Klimenko Music
        assets:
          clean_audio:
            file_size: 35188408
          preview_mp3:
            file_size: 4400203
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
          preview_ogg:
            file_size: 4453197
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
          waveform:
            file_size: 18778
            url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
        bpm: 110
        contributor:
          id: "2847971"
        duration: 183
        genres:
        - Dance/Electronic
        - Electro Pop
        - Pop/Rock
        id: 442583X
        instruments:
        - Piano
        - Synth bass
        - Synth drums
        - Synthesizer
        is_adult: false
        is_instrumental: true
        isrc: ""
        keywords:
        - celebratory
        - chic
        - euphoric
        - good times
        - hip
        - optimistic
        - party
        - soaring
        - upbeat
        language: en
        lyrics: ""
        media_type: audio
        moods:
        - Bright
        - Confident
        - Fun
        - Happy
        - Inspiring
        - Optimistic
        - Playful
        - Sophisticated
        - Stylish
        - Uplifting
        published_time: 2016-08-16T18:30:03.000Z
        recording_version: ""
        releases: []
        similar_artists: []
        updated_time: 2016-08-18T21:59:33.000Z
        url: ""
        vocal_description: ""
      properties:
        title:
          description: Title of this track
          example: Another Tomorrow
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-title
        description:
          description: Description of this track
          example: "Pulsing and feel-good, featuring soaring synthesizer, groovy synth\
            \ bass drums and synth drums that create a euphoric, upbeat mood."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-description
        added_date:
          description: Date this track was added to the Shutterstock library
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-added_date
        affiliate_url:
          description: Affiliate referral link; appears only for registered affiliate
            partners
          type: string
        album:
          $ref: '#/components/schemas/Album'
        artists:
          description: List of artists
          items:
            $ref: '#/components/schemas/Artist'
          type: array
        assets:
          $ref: '#/components/schemas/AudioAssets'
        bpm:
          description: BPM (beats per minute) of this track
          example: 110
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-bpm
        contributor:
          $ref: '#/components/schemas/Contributor'
        deleted_time:
          format: date-time
          type: string
        duration:
          description: Duration of this track in seconds
          example: 183
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-duration
        genres:
          description: List of all genres for this track
          items:
            description: Genre that is associated with this track
            type: string
          type: array
        id:
          description: Shutterstock ID of this track
          example: 442583X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-id
        instruments:
          description: List of all instruments that appear in this track
          items:
            description: Instrument that appears in this track
            type: string
          type: array
        is_adult:
          description: Whether or not this track contains adult content
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-is_adult
        is_instrumental:
          description: Whether or not this track is purely instrumental (lacking lyrics)
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-is_instrumental
        isrc:
          description: ""
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-isrc
        keywords:
          description: List of all keywords for this track
          items:
            description: Keyword for this track
            type: string
          type: array
        language:
          description: Language of this track's lyrics
          example: en
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-language
        lyrics:
          description: Lyrics of this track
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-lyrics
        media_type:
          description: Media type of this track; should always be "audio"
          example: audio
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-media_type
        model_releases:
          description: List of all model releases for this track
          items:
            $ref: '#/components/schemas/ModelRelease'
          type: array
        moods:
          description: List of all moods of this track
          items:
            description: Mood of this track
            type: string
          type: array
        published_time:
          description: Time this track was published
          example: 2016-08-16T18:30:03Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-published_time
        recording_version:
          description: Recording version of this track
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-recording_version
        releases:
          description: List of all releases of this track
          items:
            description: Release of this track
            type: string
          type: array
        similar_artists:
          description: List of all similar artists of this track
          items:
            $ref: '#/components/schemas/Artist'
          type: array
        submitted_time:
          description: Time this track was submitted
          format: date-time
          type: string
        updated_time:
          description: Time this track was last updated
          example: 2016-08-18T21:59:33Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-updated_time
        url:
          description: ""
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-url
        vocal_description:
          description: Vocal description of this track
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio-properties-vocal_description
      required:
      - contributor
      - id
      - media_type
      type: object
      x-konfig-original-example:
        title: Another Tomorrow
        description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
          \ synth bass drums and synth drums that create a euphoric, upbeat mood."
        added_date: 2016-08-16T00:00:00.000Z
        artists:
        - name: Klimenko Music
        assets:
          clean_audio:
            file_size: 35188408
          preview_mp3:
            file_size: 4400203
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
          preview_ogg:
            file_size: 4453197
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
          waveform:
            file_size: 18778
            url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
        bpm: 110
        contributor:
          id: "2847971"
        duration: 183
        genres:
        - Dance/Electronic
        - Electro Pop
        - Pop/Rock
        id: 442583X
        instruments:
        - Piano
        - Synth bass
        - Synth drums
        - Synthesizer
        is_adult: false
        is_instrumental: true
        isrc: ""
        keywords:
        - celebratory
        - chic
        - euphoric
        - good times
        - hip
        - optimistic
        - party
        - soaring
        - upbeat
        language: en
        lyrics: ""
        media_type: audio
        moods:
        - Bright
        - Confident
        - Fun
        - Happy
        - Inspiring
        - Optimistic
        - Playful
        - Sophisticated
        - Stylish
        - Uplifting
        published_time: 2016-08-16T18:30:03.000Z
        recording_version: ""
        releases: []
        similar_artists: []
        updated_time: 2016-08-18T21:59:33.000Z
        url: ""
        vocal_description: ""
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Audio
      x-konfig-is-used-in-successful-response: true
    AudioAssetDetails:
      description: Information about a file that is part of an audio asset
      example:
        file_size: 4453197
        url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
      properties:
        file_size:
          description: File size of the track
          example: 35188408
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioAssetDetails-properties-file_size
        url:
          description: URL the track is available at
          example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioAssetDetails-properties-url
      type: object
      x-konfig-original-example:
        file_size: 4453197
        url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioAssetDetails
    AudioAssets:
      description: Files that are available as part of an audio asset
      example:
        clean_audio:
          file_size: 35188408
        preview_mp3:
          file_size: 4400203
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
        preview_ogg:
          file_size: 4453197
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
        waveform:
          file_size: 18778
          url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
      properties:
        album_art:
          $ref: '#/components/schemas/AudioAssetDetails'
        clean_audio:
          $ref: '#/components/schemas/AudioAssetDetails'
        original_audio:
          $ref: '#/components/schemas/AudioAssetDetails'
        preview_mp3:
          $ref: '#/components/schemas/AudioAssetDetails'
        preview_ogg:
          $ref: '#/components/schemas/AudioAssetDetails'
        shorts_loops_stems:
          $ref: '#/components/schemas/ShortsLoopsStems'
        waveform:
          $ref: '#/components/schemas/AudioAssetDetails'
      type: object
      x-konfig-original-example:
        clean_audio:
          file_size: 35188408
        preview_mp3:
          file_size: 4400203
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
        preview_ogg:
          file_size: 4453197
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
        waveform:
          file_size: 18778
          url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioAssets
    AudioDataList:
      description: List of tracks
      example:
        data:
        - title: Fresh Love
          description: "Pulsing and feel-good, featuring slick electric guitar, synthesizer,\
            \ bass, electronic drum pads and drums that create a positive, celebratory\
            \ mood."
          added_date: 2016-04-12T00:00:00.000Z
          artists:
          - name: Fin Productions
          assets:
            clean_audio:
              file_size: 30760372
            preview_mp3:
              file_size: 3846606
              url: https://ak.picdn.net/shutterstock/audio/434750/preview/preview.mp3
            preview_ogg:
              file_size: 4402608
              url: https://ak.picdn.net/shutterstock/audio/434750/preview/preview.ogg
            waveform:
              file_size: 19822
              url: https://ak.picdn.net/shutterstock/audio/434750/waveform/waveform.png
          bpm: 100
          contributor:
            id: 2847971X
          duration: 160
          genres:
          - Dance/Electronic
          - Electro Pop
          - Pop/Rock
          id: "434750"
          instruments:
          - Bass
          - Drums
          - Electric guitar
          - Pads
          - Percussion
          - Synthesizer
          is_adult: false
          is_instrumental: true
          isrc: ""
          keywords:
          - breezy
          - celebration
          - festive
          - good times
          - hopeful
          - optimistic
          - party
          - positive
          - reflective
          language: en
          lyrics: ""
          media_type: audio
          moods:
          - Bright
          - Confident
          - Fun
          - Happy
          - Inspiring
          - Optimistic
          - Playful
          - Sophisticated
          - Stylish
          - Uplifting
          published_time: 2016-04-12T21:45:29.000Z
          recording_version: ""
          releases: []
          similar_artists: []
          updated_time: 2016-08-18T22:03:11.000Z
          vocal_description: ""
      properties:
        data:
          description: Tracks
          items:
            $ref: '#/components/schemas/Audio'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - title: Fresh Love
          description: "Pulsing and feel-good, featuring slick electric guitar, synthesizer,\
            \ bass, electronic drum pads and drums that create a positive, celebratory\
            \ mood."
          added_date: 2016-04-12T00:00:00.000Z
          artists:
          - name: Fin Productions
          assets:
            clean_audio:
              file_size: 30760372
            preview_mp3:
              file_size: 3846606
              url: https://ak.picdn.net/shutterstock/audio/434750/preview/preview.mp3
            preview_ogg:
              file_size: 4402608
              url: https://ak.picdn.net/shutterstock/audio/434750/preview/preview.ogg
            waveform:
              file_size: 19822
              url: https://ak.picdn.net/shutterstock/audio/434750/waveform/waveform.png
          bpm: 100
          contributor:
            id: 2847971X
          duration: 160
          genres:
          - Dance/Electronic
          - Electro Pop
          - Pop/Rock
          id: "434750"
          instruments:
          - Bass
          - Drums
          - Electric guitar
          - Pads
          - Percussion
          - Synthesizer
          is_adult: false
          is_instrumental: true
          isrc: ""
          keywords:
          - breezy
          - celebration
          - festive
          - good times
          - hopeful
          - optimistic
          - party
          - positive
          - reflective
          language: en
          lyrics: ""
          media_type: audio
          moods:
          - Bright
          - Confident
          - Fun
          - Happy
          - Inspiring
          - Optimistic
          - Playful
          - Sophisticated
          - Stylish
          - Uplifting
          published_time: 2016-04-12T21:45:29.000Z
          recording_version: ""
          releases: []
          similar_artists: []
          updated_time: 2016-08-18T22:03:11.000Z
          vocal_description: ""
      x-konfig-is-used-in-successful-response: true
    AudioRenderResult:
      description: The output of an audio render in WAV or MP3 format
      example:
        created_date: 2021-07-13T20:19:30.000Z
        files: []
        id: 2yZp13IhLqnjfh2KquDTOHUHzTiP
        preset: MASTER_MP3
        progress_percent: 0
        status: WAITING_COMPOSE
        timeline: {}
        updated_date: 2021-07-13T20:19:30.000Z
      properties:
        created_date:
          description: The time the render was submitted to the API
          example: 2021-07-13T20:19:30Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-created_date
        files:
          description: The files associated with the render
          items:
            $ref: '#/components/schemas/AudioRendersFilesList'
          type: array
        id:
          description: The alphanumeric ID of the simple render
          example: 2yZp13IhLqnjfh2KquDTOHUHzTiP
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-id
        preset:
          description: The file format preset
          enum:
          - MASTER_MP3
          - MASTER_WAV
          - STEMS_WAV
          example: MASTER_MP3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-preset
        progress_percent:
          description: The current progress of the render as a percentage
          example: 0
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-progress_percent
        status:
          description: A coarse progress indicator
          enum:
          - WAITING_COMPOSE
          - RUNNING_COMPOSE
          - WAITING_RENDER
          - RUNNING_RENDER
          - CREATED
          - FAILED_CREATE
          example: WAITING_COMPOSE
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-status
        timeline:
          $ref: '#/components/schemas/AudioRenderTimeline'
        updated_date:
          description: The time that the audio output was uploaded
          example: 2021-07-13T20:19:30Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult-properties-updated_date
      required:
      - id
      - status
      - timeline
      type: object
      x-konfig-original-example:
        created_date: 2021-07-13T20:19:30.000Z
        files: []
        id: 2yZp13IhLqnjfh2KquDTOHUHzTiP
        preset: MASTER_MP3
        progress_percent: 0
        status: WAITING_COMPOSE
        timeline: {}
        updated_date: 2021-07-13T20:19:30.000Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderResult
    AudioRenderTimeline:
      description: A timeline object that represents either a request for music to
        be created or an entire music composition
      example:
        spans:
        - id: 123456
          instrument_groups:
          - instrument_group: The instrument ID
            statuses:
            - beat: 12
              status: active
          regions:
          - beat: 12
            descriptor: The descriptor ID needed to compose the music
            end_type:
              beat: 12
              event: ending
              type: ringout
            id: 123456
            key:
              tonic_accidental: double flat
              tonic_note: c
              tonic_quality: major
            region: music
          span_type: metered
          tempo: 12345
          tempo_changes:
          - tempo: 12345
            time: 5
          time: 5
      properties:
        spans:
          description: A span object that represents the beginning of a period of
            absolute time
          items:
            $ref: '#/components/schemas/AudioRenderTimelineSpan'
          type: array
      type: object
      x-konfig-original-example:
        spans:
        - id: 123456
          instrument_groups:
          - instrument_group: The instrument ID
            statuses:
            - beat: 12
              status: active
          regions:
          - beat: 12
            descriptor: The descriptor ID needed to compose the music
            end_type:
              beat: 12
              event: ending
              type: ringout
            id: 123456
            key:
              tonic_accidental: double flat
              tonic_note: c
              tonic_quality: major
            region: music
          span_type: metered
          tempo: 12345
          tempo_changes:
          - tempo: 12345
            time: 5
          time: 5
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimeline
    AudioRenderTimelineSpan:
      description: The beginning of a non-overlapping period of absolute time
      example:
        id: 111
        regions:
        - beat: 12
          descriptor: cinematic_minimal_tense
          end_type:
            beat: 24
            event: ending
            type: ringout
          id: 222
          key:
            tonic_note: c
            tonic_quality: major
          region: music
        span_type: metered
        tempo: 76
        time: 0
      properties:
        id:
          description: An identifier which must be unique within the parent span
          example: 111
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-id
        instrument_groups:
          description: An array of instrument_group objects that are used in this
            span
          items:
            $ref: '#/components/schemas/AudioRenderTimelineSpanInstrumentGroup'
          type: array
        regions:
          description: An array of region objects within the span
          items:
            $ref: '#/components/schemas/AudioRenderTimelineSpanRegion'
          type: array
        span_type:
          description: "Type of span; metered spans represent a pariod of time with\
            \ music, and unmetered spans denote the end of the prior metered span"
          enum:
          - metered
          - unmetered
          example: metered
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-span_type
        tempo:
          description: "The tempo, in beats per minute, at the start of the span;\
            \ if not provided, the API selects a random tempo"
          example: 76
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-tempo
        tempo_changes:
          description: Two or more inflection points in a tempo curve; the API creates
            a smoothly changing tempo by using a linear interpolation of the time
            between each tempo change
          items:
            $ref: '#/components/schemas/AudioRenderTimelineSpanTempoChanges'
          type: array
        time:
          description: "The absolute time, in seconds, at which the span starts"
          example: 0
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-time
      required:
      - span_type
      - time
      type: object
      x-konfig-original-example:
        id: 111
        regions:
        - beat: 12
          descriptor: cinematic_minimal_tense
          end_type:
            beat: 24
            event: ending
            type: ringout
          id: 222
          key:
            tonic_note: c
            tonic_quality: major
          region: music
        span_type: metered
        tempo: 76
        time: 0
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpan
    AudioRenderTimelineSpanInstrumentGroup:
      description: An instrument and the status objects that specify when that instrument
        plays
      example:
        instrument_group: bright_roomy_kit
        statuses:
        - beat: 12
          status: active
      properties:
        instrument_group:
          description: The instrument ID
          example: bright_roomy_kit
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroup-properties-instrument_group
        statuses:
          description: An array of status objects
          items:
            $ref: '#/components/schemas/AudioRenderTimelineSpanInstrumentGroupStatus'
          type: array
      required:
      - instrument_group
      type: object
      x-konfig-original-example:
        instrument_group: bright_roomy_kit
        statuses:
        - beat: 12
          status: active
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroup
    AudioRenderTimelineSpanInstrumentGroupStatus:
      description: The status of an instrument at a specific beat
      example:
        beat: 12
        status: active
      properties:
        beat:
          description: "The beat, relative to the span, at which the status begins"
          example: 12
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus-properties-beat
        status:
          description: Whether the instrument is playing or not
          enum:
          - active
          - inactive
          example: active
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus-properties-status
      required:
      - beat
      - status
      type: object
      x-konfig-original-example:
        beat: 12
        status: active
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus
    AudioRenderTimelineSpanRegion:
      description: "A period of music or silence, measured in beats"
      example:
        beat: 12
        descriptor: cinematic_minimal_tense
        end_type:
          beat: 24
          event: ending
          type: ringout
        id: 222
        key:
          tonic_note: c
          tonic_quality: major
        region: music
      properties:
        beat:
          description: "The beat, relative to the span, at which the region object's\
            \ music begins"
          example: 12
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-beat
        descriptor:
          description: The descriptor ID needed to compose the music
          example: cinematic_minimal_tense
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-descriptor
        end_type:
          $ref: '#/components/schemas/AudioRenderTimelineSpanRegion_end_type'
        id:
          description: An identifier which must be unique within the parent span
          example: 222
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-id
        key:
          $ref: '#/components/schemas/AudioRenderTimelineSpanRegion_key'
        region:
          description: The type of region
          enum:
          - music
          - silence
          example: music
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-region
      required:
      - beat
      - descriptor
      - id
      - region
      type: object
      x-konfig-original-example:
        beat: 12
        descriptor: cinematic_minimal_tense
        end_type:
          beat: 24
          event: ending
          type: ringout
        id: 222
        key:
          tonic_note: c
          tonic_quality: major
        region: music
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion
    AudioRenderTimelineSpanTempoChanges:
      description: An inflection point in a tempo curve; the API creates the overall
        tempo by using a linear interpolation of the time between each tempo change
      example:
        tempo: 86
        time: 5
      properties:
        tempo:
          description: "The tempo, in beats per minute, active at this time"
          example: 86
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges-properties-tempo
        time:
          description: "The time, in seconds, at which the tempo exists"
          example: 5
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges-properties-time
      required:
      - tempo
      - time
      type: object
      x-konfig-original-example:
        tempo: 86
        time: 5
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges
    AudioRendersFilesList:
      description: Files associated with the render
      example:
        bits_sample: 16
        content_type: audio/mp3
        download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
        filename: My_audio_ai.mp3
        frequency_hz: 44100
        kbits_second: 192
        size_bytes: 481556
        tracks:
        - master
      properties:
        bits_sample:
          description: The bit depth of the audio files in bits/sample
          example: 16
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-bits_sample
        content_type:
          description: The content-type of the file
          example: audio/mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-content_type
        download_url:
          description: The internet-accessible URL from which the file can be downloaded.
            Any redirects encountered when using this URL must be followed
          example: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-download_url
        filename:
          description: The user-specified file name suggestion from the render request;
            this file name becomes the filename property of the Content-Disposition
            header when the user downloads the rendered audio file
          example: My_audio_ai.mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-filename
        frequency_hz:
          description: The Sample rate of the audio files in Hertz (Hz)
          example: 44100
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-frequency_hz
        kbits_second:
          description: The data rate of the audio files in kilobits/second
          example: 192
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-kbits_second
        size_bytes:
          description: Size of the file in bytes
          example: 481556
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-size_bytes
        tracks:
          description: An array of track names included in the file
          items:
            type: string
          type: array
      required:
      - bits_sample
      - content_type
      - download_url
      - filename
      - frequency_hz
      - kbits_second
      - size_bytes
      - tracks
      type: object
      x-konfig-original-example:
        bits_sample: 16
        content_type: audio/mp3
        download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
        filename: My_audio_ai.mp3
        frequency_hz: 44100
        kbits_second: 192
        size_bytes: 481556
        tracks:
        - master
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRendersFilesList
    AudioRendersListResults:
      description: Audio render data
      example:
        audio_renders:
        - created_date: 2021-07-13T20:19:30.000Z
          files: []
          id: 2yZp13IhLqnjfh2KquDTOHUHzTiPX
          preset: MASTER_MP3
          progress_percent: 20
          status: WAITING_COMPOSE
          timeline: {}
          updated_date: 2021-07-13T20:19:30.000Z
        - created_date: 2021-07-12T20:39:59.000Z
          files:
          - bits_sample: 16
            content_type: audio/mp3
            download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
            filename: My_audio_ai.mp3
            frequency_hz: 44100
            kbits_second: 192
            size_bytes: 481556
            tracks:
            - master
          - bits_sample: 0
            content_type: application/vnd.amper.waveform+json
            download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/1.json
            filename: render.json
            frequency_hz: 42
            kbits_second: 0
            size_bytes: 4420
            tracks:
            - master
          id: QwAgKqXQAzr622KuXYZ25C9WRH3a
          preset: MASTER_MP3
          progress_percent: 100
          status: CREATED
          timeline: {}
          updated_date: 2021-07-12T20:46:26.000Z
      properties:
        audio_renders:
          description: Audio render results
          items:
            $ref: '#/components/schemas/AudioRenderResult'
          type: array
      required:
      - audio_renders
      x-konfig-original-example:
        audio_renders:
        - created_date: 2021-07-13T20:19:30.000Z
          files: []
          id: 2yZp13IhLqnjfh2KquDTOHUHzTiPX
          preset: MASTER_MP3
          progress_percent: 20
          status: WAITING_COMPOSE
          timeline: {}
          updated_date: 2021-07-13T20:19:30.000Z
        - created_date: 2021-07-12T20:39:59.000Z
          files:
          - bits_sample: 16
            content_type: audio/mp3
            download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
            filename: My_audio_ai.mp3
            frequency_hz: 44100
            kbits_second: 192
            size_bytes: 481556
            tracks:
            - master
          - bits_sample: 0
            content_type: application/vnd.amper.waveform+json
            download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/1.json
            filename: render.json
            frequency_hz: 42
            kbits_second: 0
            size_bytes: 4420
            tracks:
            - master
          id: QwAgKqXQAzr622KuXYZ25C9WRH3a
          preset: MASTER_MP3
          progress_percent: 100
          status: CREATED
          timeline: {}
          updated_date: 2021-07-12T20:46:26.000Z
      x-konfig-is-used-in-successful-response: true
    AudioSearchResults:
      description: Audio search results
      example:
        data:
        - title: Another Tomorrow
          description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
            \ synth bass drums and synth drums that create a euphoric, upbeat mood."
          added_date: 2016-08-16T00:00:00.000Z
          artists:
          - name: Klimenko Music
          assets:
            clean_audio:
              file_size: 35188408
            preview_mp3:
              file_size: 4400203
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
            preview_ogg:
              file_size: 4453197
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
            waveform:
              file_size: 18778
              url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
          bpm: 110
          contributor:
            id: 2847971X
          duration: 183
          genres:
          - Dance/Electronic
          - Electro Pop
          - Pop/Rock
          id: 442583X
          instruments:
          - Piano
          - Synth bass
          - Synth drums
          - Synthesizer
          is_adult: false
          is_instrumental: true
          isrc: ""
          keywords:
          - celebratory
          - chic
          - euphoric
          - good times
          - hip
          - optimistic
          - party
          - soaring
          - upbeat
          language: en
          lyrics: ""
          media_type: audio
          moods:
          - Bright
          - Confident
          - Fun
          - Happy
          - Inspiring
          - Optimistic
          - Playful
          - Sophisticated
          - Stylish
          - Uplifting
          published_time: 2016-08-16T18:30:03.000Z
          recording_version: ""
          releases: []
          similar_artists: []
          updated_time: 2016-08-18T21:59:33.000Z
          url: ""
          vocal_description: ""
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123455
      properties:
        data:
          description: List of tracks
          items:
            $ref: '#/components/schemas/Audio'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioSearchResults-properties-page
        per_page:
          description: Number of results per page
          example: 5
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioSearchResults-properties-per_page
        search_id:
          description: ID of the search
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioSearchResults-properties-search_id
        total_count:
          description: Total count of all results across all pages
          example: 123455
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioSearchResults-properties-total_count
      required:
      - data
      - search_id
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - title: Another Tomorrow
          description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
            \ synth bass drums and synth drums that create a euphoric, upbeat mood."
          added_date: 2016-08-16T00:00:00.000Z
          artists:
          - name: Klimenko Music
          assets:
            clean_audio:
              file_size: 35188408
            preview_mp3:
              file_size: 4400203
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
            preview_ogg:
              file_size: 4453197
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
            waveform:
              file_size: 18778
              url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
          bpm: 110
          contributor:
            id: 2847971X
          duration: 183
          genres:
          - Dance/Electronic
          - Electro Pop
          - Pop/Rock
          id: 442583X
          instruments:
          - Piano
          - Synth bass
          - Synth drums
          - Synthesizer
          is_adult: false
          is_instrumental: true
          isrc: ""
          keywords:
          - celebratory
          - chic
          - euphoric
          - good times
          - hip
          - optimistic
          - party
          - soaring
          - upbeat
          language: en
          lyrics: ""
          media_type: audio
          moods:
          - Bright
          - Confident
          - Fun
          - Happy
          - Inspiring
          - Optimistic
          - Playful
          - Sophisticated
          - Stylish
          - Uplifting
          published_time: 2016-08-16T18:30:03.000Z
          recording_version: ""
          releases: []
          similar_artists: []
          updated_time: 2016-08-18T21:59:33.000Z
          url: ""
          vocal_description: ""
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123455
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioSearchResults
      x-konfig-is-used-in-successful-response: true
    AudioUrl:
      description: Audio License URL object
      example:
        $ref: '#/components/schemas/Url/example'
      properties:
        shorts_loops_stems:
          description: "URL that can be used to download the .zip file containing\
            \ shorts, loops, and stems"
          type: string
        url:
          description: "URL that can be used to download the unwatermarked, licensed\
            \ asset"
          example: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioUrl-properties-url
      required:
      - url
      type: object
      x-konfig-original-example:
        $ref: '#/components/schemas/Url/example'
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioUrl
      x-konfig-is-used-in-successful-response: true
    AuthorizeResponse:
      description: HTML redirect URL that contains the application authorization 'code'
      example: Moved temporarily. Redirecting to https://accounts.shutterstock.com/login?next=%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26state%3D1539619928633%26scope%3Dlicenses.create%20licenses.view%20purchases.view%26client_id%3D6d097450b209c6dcd859%26redirect_uri%3Dhttp%3A%2F%2Flocalhost%3A3000%2Fmyapp%2Fauth%2Fcallback%26realm%3Dcustomer
      type: string
      x-konfig-original-example: Moved temporarily. Redirecting to https://accounts.shutterstock.com/login?next=%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26state%3D1539619928633%26scope%3Dlicenses.create%20licenses.view%20purchases.view%26client_id%3D6d097450b209c6dcd859%26redirect_uri%3Dhttp%3A%2F%2Flocalhost%3A3000%2Fmyapp%2Fauth%2Fcallback%26realm%3Dcustomer
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizeResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Bands:
      description: A band that can be used to generate music
      example:
        id: 1234567X
        name: The Happy Tunes Band
      properties:
        id:
          description: The ID of the band
          example: 1234567X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Bands-properties-id
        name:
          description: The name of the band
          example: The Happy Tunes Band
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Bands-properties-name
      type: object
      x-konfig-original-example:
        id: 1234567X
        name: The Happy Tunes Band
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Bands
    BulkImageSearchRequest:
      description: List of searches
      example:
      - license:
        - editorial
        query: cat
        sort: popular
      - orientation: horizontal
        query: dog
      items:
        $ref: '#/components/schemas/SearchImage'
      maxItems: 5
      type: array
      x-konfig-original-example:
      - license:
        - editorial
        query: cat
        sort: popular
      - orientation: horizontal
        query: dog
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BulkImageSearchRequest
    BulkImageSearchResults:
      description: List of search results for each given query
      example:
        results:
        - data:
          - description: cropped image of woman gardening
            aspect: 1.5
            assets:
              huge_thumb:
                height: 260
                url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
                width: 390
              large_thumb:
                height: 100
                url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 150
              preview:
                height: 300
                url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 450
              preview_1000:
                height: 667
                url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
                width: 1000
              preview_1500:
                height: 1000
                url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 1500
              small_thumb:
                height: 67
                url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 100
            contributor:
              id: "250738318"
            has_model_release: true
            id: "1572478477"
            image_type: photo
            media_type: image
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e10
          spellcheck_info: {}
          total_count: 45
        - data: []
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e11
          spellcheck_info: {}
          total_count: 0
      properties:
        bulk_search_id:
          description: Unique identifier for the search request
          type: string
        results:
          description: List of image search results
          items:
            $ref: '#/components/schemas/ImageSearchResults'
          type: array
      type: object
      x-konfig-original-example:
        results:
        - data:
          - description: cropped image of woman gardening
            aspect: 1.5
            assets:
              huge_thumb:
                height: 260
                url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
                width: 390
              large_thumb:
                height: 100
                url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 150
              preview:
                height: 300
                url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 450
              preview_1000:
                height: 667
                url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
                width: 1000
              preview_1500:
                height: 1000
                url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 1500
              small_thumb:
                height: 67
                url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 100
            contributor:
              id: "250738318"
            has_model_release: true
            id: "1572478477"
            image_type: photo
            media_type: image
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e10
          spellcheck_info: {}
          total_count: 45
        - data: []
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e11
          spellcheck_info: {}
          total_count: 0
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BulkImageSearchResults
      x-konfig-is-used-in-successful-response: true
    CatalogCollection:
      description: Catalog collection
      example:
        cover_asset:
          asset:
            id: "1690105108"
            name: Young couple playing tennis at the court
            type: image
          created_time: 2021-06-10T17:26:09.000Z
          id: "123"
        created_time: 2021-05-20T20:15:22.000Z
        id: "126351028"
        name: My collection
        role_assignments:
          collection_id: "126351028"
          roles:
            editors:
            - email: userTwo@org.com
              id: "987"
              type: USER
            owners:
            - email: userOne@org.com
              id: "321"
              type: USER
            viewers: []
        total_item_count: 2
        updated_time: 2021-06-10T17:26:09.000Z
        visibility: public
      properties:
        cover_asset:
          $ref: '#/components/schemas/CatalogCollectionItem'
        created_time:
          example: 2021-05-20T20:15:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-created_time
        id:
          example: "126351028"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-id
        name:
          example: My collection
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-name
        role_assignments:
          $ref: '#/components/schemas/CatalogCollectionRoleAssignments'
        total_item_count:
          example: 2
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-total_item_count
        updated_time:
          example: 2021-06-10T17:26:09Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-updated_time
        visibility:
          enum:
          - private
          - public
          example: public
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection-properties-visibility
      required:
      - created_time
      - id
      - name
      - role_assignments
      - total_item_count
      - updated_time
      - visibility
      type: object
      x-konfig-original-example:
        cover_asset:
          asset:
            id: "1690105108"
            name: Young couple playing tennis at the court
            type: image
          created_time: 2021-06-10T17:26:09.000Z
          id: "123"
        created_time: 2021-05-20T20:15:22.000Z
        id: "126351028"
        name: My collection
        role_assignments:
          collection_id: "126351028"
          roles:
            editors:
            - email: userTwo@org.com
              id: "987"
              type: USER
            owners:
            - email: userOne@org.com
              id: "321"
              type: USER
            viewers: []
        total_item_count: 2
        updated_time: 2021-06-10T17:26:09.000Z
        visibility: public
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollection
      x-konfig-is-used-in-successful-response: true
    CatalogCollectionDataList:
      description: List of catalog collections
      example:
        data:
        - cover_asset:
            asset:
              id: 1690105108X
              name: Young couple playing tennis at the court
              type: image
            created_time: 2021-06-10T17:26:09.000Z
            id: 123X
          created_time: 2021-05-20T20:15:22.000Z
          id: 126351028X
          name: My collection
          role_assignments:
            collection_id: "126351028"
            roles:
              editors:
              - email: userTwo@org.com
                id: 987X
                type: USER
              owners:
              - email: userOne@org.com
                id: 321X
                type: USER
              viewers: []
          total_item_count: 2
          updated_time: 2021-06-10T17:26:09.000Z
          visibility: public
        page: 1
        per_page: 20
        total_count: 1
      properties:
        data:
          description: List of catalog collections
          items:
            $ref: '#/components/schemas/CatalogCollection'
          type: array
        page:
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-page
        per_page:
          example: 20
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-per_page
        total_count:
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-total_count
      required:
      - data
      - page
      - per_page
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - cover_asset:
            asset:
              id: 1690105108X
              name: Young couple playing tennis at the court
              type: image
            created_time: 2021-06-10T17:26:09.000Z
            id: 123X
          created_time: 2021-05-20T20:15:22.000Z
          id: 126351028X
          name: My collection
          role_assignments:
            collection_id: "126351028"
            roles:
              editors:
              - email: userTwo@org.com
                id: 987X
                type: USER
              owners:
              - email: userOne@org.com
                id: 321X
                type: USER
              viewers: []
          total_item_count: 2
          updated_time: 2021-06-10T17:26:09.000Z
          visibility: public
        page: 1
        per_page: 20
        total_count: 1
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionDataList
      x-konfig-is-used-in-successful-response: true
    CatalogCollectionItem:
      description: Metadata about an item that is part of a collection
      example:
        asset:
          id: 1690105108X
          name: Young couple playing tennis at the court
          type: image
        collection_ids:
        - "126351028"
        created_time: 2021-06-10T17:26:09.000Z
        id: 123X
      properties:
        asset:
          $ref: '#/components/schemas/CatalogCollectionItem_asset'
        collection_ids:
          description: The collection IDs that this asset belongs to
          items:
            type: string
          type: array
        created_time:
          example: 2021-06-10T17:26:09Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-created_time
        id:
          example: "123"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-id
      required:
      - asset
      - created_time
      - id
      type: object
      x-konfig-original-example:
        asset:
          id: 1690105108X
          name: Young couple playing tennis at the court
          type: image
        collection_ids:
        - "126351028"
        created_time: 2021-06-10T17:26:09.000Z
        id: 123X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem
    CatalogCollectionItemDataList:
      description: List of catalog collection items
      example:
        data:
        - asset:
            id: 1690105108X
            name: Young couple playing tennis at the court
            type: image
          collection_ids:
          - "126351028"
          created_time: 2021-06-10T17:26:09.000Z
          id: 123X
        page: 1
        per_page: 1
        total_count: 82
      properties:
        data:
          description: List of catalog collection items
          items:
            $ref: '#/components/schemas/CatalogCollectionItem'
          type: array
        page:
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-page
        per_page:
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-per_page
        total_count:
          example: 82
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-total_count
      required:
      - data
      - page
      - per_page
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - asset:
            id: 1690105108X
            name: Young couple playing tennis at the court
            type: image
          collection_ids:
          - "126351028"
          created_time: 2021-06-10T17:26:09.000Z
          id: 123X
        page: 1
        per_page: 1
        total_count: 82
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItemDataList
      x-konfig-is-used-in-successful-response: true
    CatalogCollectionRole:
      description: A user that has access to a catalog collection
      example:
        email: user123@org.com
        id: 123X
        type: USER
      properties:
        email:
          example: user123@org.com
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-email
        id:
          example: 123X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-id
        type:
          enum:
          - USER
          example: USER
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-type
      required:
      - email
      - id
      - type
      type: object
      x-konfig-original-example:
        email: user123@org.com
        id: 123X
        type: USER
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRole
    CatalogCollectionRoleAssignments:
      description: List of role assignments for a catalog collection
      example:
        collection_id: "126351028"
        roles:
          editors:
          - email: userTwo@org.com
            id: 987X
            type: USER
          owners:
          - email: userOne@org.com
            id: 321X
            type: USER
          viewers: []
      properties:
        collection_id:
          example: "126351028"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRoleAssignments-properties-collection_id
        roles:
          $ref: '#/components/schemas/CatalogCollectionRoleAssignments_roles'
      required:
      - collection_id
      - roles
      type: object
      x-konfig-original-example:
        collection_id: "126351028"
        roles:
          editors:
          - email: userTwo@org.com
            id: 987X
            type: USER
          owners:
          - email: userOne@org.com
            id: 321X
            type: USER
          viewers: []
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionRoleAssignments
    Category:
      description: Category information
      example:
        id: "1"
        name: Animals/Wildlife
      properties:
        id:
          description: Category ID
          example: "1"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Category-properties-id
        name:
          description: Category name
          example: Animals/Wildlife
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Category-properties-name
      type: object
      x-konfig-original-example:
        id: "1"
        name: Animals/Wildlife
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Category
    CategoryDataList:
      description: List of categories that images can belong to
      example:
        data:
        - id: 1X
          name: Animals/Wildlife
        - id: "11"
          name: The Arts
        page: 1
        per_page: 2
        total_count: 13
      properties:
        data:
          description: Categories
          items:
            $ref: '#/components/schemas/Category'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: The current page of results
          type: integer
        per_page:
          description: The number of results per page
          type: integer
        total_count:
          description: The total number of results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - id: 1X
          name: Animals/Wildlife
        - id: "11"
          name: The Arts
        page: 1
        per_page: 2
        total_count: 13
      x-konfig-is-used-in-successful-response: true
    Collection:
      description: Metadata about a collection of assets
      example:
        cover_item:
          id: "297886754"
        id: "293542904"
        items_updated_time: 2021-05-20T20:15:22.000Z
        name: My collection
        total_item_count: 85
      properties:
        cover_item:
          $ref: '#/components/schemas/CollectionItem'
        created_time:
          description: When the collection was created
          format: date-time
          type: string
        id:
          description: The collection ID
          example: "293542904"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Collection-properties-id
        items_updated_time:
          description: The last time this collection's items were updated
          example: 2021-05-20T20:15:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Collection-properties-items_updated_time
        name:
          description: The name of the collection
          example: My collection
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Collection-properties-name
        share_code:
          description: A code that can be used to share the collection (optional)
          type: string
        share_url:
          description: The browser URL that can be used to share the collection (optional)
          type: string
        total_item_count:
          description: The number of items in the collection
          example: 85
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Collection-properties-total_item_count
        updated_time:
          description: The last time the collection was update (other than changes
            to the items in it)
          format: date-time
          type: string
      required:
      - id
      - name
      - total_item_count
      type: object
      x-konfig-original-example:
        cover_item:
          id: "297886754"
        id: "293542904"
        items_updated_time: 2021-05-20T20:15:22.000Z
        name: My collection
        total_item_count: 85
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Collection
      x-konfig-is-used-in-successful-response: true
    CollectionCreateRequest:
      description: Collection creation request
      example:
        name: Test Collection 19cf
      properties:
        name:
          description: The name of the collection
          example: Test Collection 19cf
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateRequest-properties-name
      required:
      - name
      type: object
      x-konfig-original-example:
        name: Test Collection 19cf
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateRequest
    CollectionCreateResponse:
      description: Collection creation response
      example:
        id: "48433105"
      properties:
        id:
          description: ID of the new collection
          example: "48433105"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateResponse-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: "48433105"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateResponse
      x-konfig-is-used-in-successful-response: true
    CollectionDataList:
      description: List of collections
      example:
        data:
        - cover_item:
            id: 297886754X
          id: 293542904X
          items_updated_time: 2021-05-20T20:15:22.000Z
          name: My collection
          total_item_count: 85
        page: 1
        per_page: 100
        total_count: 1
      properties:
        data:
          description: Collections
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: The current page of results
          type: integer
        per_page:
          description: The number of results per page
          type: integer
        total_count:
          description: The total number of results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - cover_item:
            id: 297886754X
          id: 293542904X
          items_updated_time: 2021-05-20T20:15:22.000Z
          name: My collection
          total_item_count: 85
        page: 1
        per_page: 100
        total_count: 1
      x-konfig-is-used-in-successful-response: true
    CollectionItem:
      description: Metadata about an item that is part of a collection
      example:
        added_time: 2020-05-29T17:10:22.000Z
        id: 1690105108X
        media_type: image
      properties:
        added_time:
          description: The date the item was added to the collection
          example: 2020-05-29T17:10:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionItem-properties-added_time
        id:
          description: ID of the item
          example: "297886754"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionItem-properties-id
        media_type:
          description: "The media type of the item, such as image, video, or audio"
          example: image
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionItem-properties-media_type
      required:
      - id
      type: object
      x-konfig-original-example:
        added_time: 2020-05-29T17:10:22.000Z
        id: 1690105108X
        media_type: image
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionItem
    CollectionItemDataList:
      description: List of items in a collection
      example:
        data:
        - added_time: 2021-07-08T12:33:37.000Z
          id: 1690105108X
          media_type: image
        - added_time: 2021-07-08T12:31:43.000Z
          id: "1468703072"
          media_type: image
        page: 1
        per_page: 2
        total_count: 82
      properties:
        data:
          description: Assets in the collection
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: The current page of results
          type: integer
        per_page:
          description: The number of results per page
          type: integer
        total_count:
          description: The total number of results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - added_time: 2021-07-08T12:33:37.000Z
          id: 1690105108X
          media_type: image
        - added_time: 2021-07-08T12:31:43.000Z
          id: "1468703072"
          media_type: image
        page: 1
        per_page: 2
        total_count: 82
      x-konfig-is-used-in-successful-response: true
    CollectionItemRequest:
      description: Request to get a list of items in a collection
      example:
        items:
        - added_time: 2020-05-29T17:10:22.000Z
          id: 1690105108X
          media_type: image
      properties:
        items:
          description: List of items
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - items
      type: object
      x-konfig-original-example:
        items:
        - added_time: 2020-05-29T17:10:22.000Z
          id: 1690105108X
          media_type: image
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionItemRequest
    CollectionUpdateRequest:
      description: Collection update request
      example:
        name: My collection with a new name
      properties:
        name:
          description: The new name of the collection
          example: My collection with a new name
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionUpdateRequest-properties-name
      required:
      - name
      type: object
      x-konfig-original-example:
        name: My collection with a new name
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionUpdateRequest
    ComputerVisionImageCreateResponse:
      description: Asset upload information
      example:
        upload_id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      properties:
        upload_id:
          example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ComputerVisionImageCreateResponse-properties-upload_id
      required:
      - upload_id
      type: object
      x-konfig-original-example:
        upload_id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ComputerVisionImageCreateResponse
      x-konfig-is-used-in-successful-response: true
    Contributor:
      description: Information about a contributor
      example:
        id: "12345678"
      properties:
        id:
          description: ID of the contributor
          example: "2847971"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contributor-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: "12345678"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contributor
    ContributorProfile:
      description: Contributor profile data
      example:
        about: John Doe's photographs
        contributor_type:
        - photographer
        display_name: John Doe
        equipment:
        - Nikon
        - Fuji
        id: 12345678X
        location: US
        portfolio_url: https://www.shutterstock.com/g/jdoe
        social_media:
          facebook: http://example.com/jdoe
          google_plus: http://example.com/jdoe
          linkedin: http://example.com/jdoe
          pinterest: http://example.com/jdoe
          tumblr: http://example.com/jdoe
          twitter: http://example.com/jdoe
        styles:
        - landscape
        - nature
        - footage_travel
        subjects:
        - animals
        - landmarks
        - nature
        - objects
        - recreation
        website: http://example.com/profiles/jdoe
      properties:
        about:
          description: Short description of the contributors' library
          example: John Doe's photographs
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-about
        contributor_type:
          description: "Type of content that the contributor specializes in (photographer,\
            \ illustrator, etc)"
          items:
            type: string
          type: array
        display_name:
          description: Preferred name to be displayed for the contributor
          example: John Doe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-display_name
        equipment:
          description: "List of equipment used by the contributor (Canon EOS 5D Mark\
            \ II, etc)"
          items:
            type: string
          type: array
        id:
          description: Contributor ID
          example: 12345678X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-id
        location:
          description: Country code representing the contributor's locale
          example: US
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-location
        portfolio_url:
          description: Web URL for the contributors' profile
          example: https://www.shutterstock.com/g/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-portfolio_url
        social_media:
          $ref: '#/components/schemas/ContributorProfileSocialMedia'
        styles:
          description: "List of styles that the contributor specializes in (lifestyle,\
            \ mixed media, etc)"
          items:
            type: string
          type: array
        subjects:
          description: "Generic list of subjects for contributors' work (food_and_drink,\
            \ holiday, people, etc)"
          items:
            type: string
          type: array
        website:
          description: Personal website for the contributor
          example: http://example.com/profiles/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile-properties-website
      required:
      - id
      type: object
      x-konfig-original-example:
        about: John Doe's photographs
        contributor_type:
        - photographer
        display_name: John Doe
        equipment:
        - Nikon
        - Fuji
        id: 12345678X
        location: US
        portfolio_url: https://www.shutterstock.com/g/jdoe
        social_media:
          facebook: http://example.com/jdoe
          google_plus: http://example.com/jdoe
          linkedin: http://example.com/jdoe
          pinterest: http://example.com/jdoe
          tumblr: http://example.com/jdoe
          twitter: http://example.com/jdoe
        styles:
        - landscape
        - nature
        - footage_travel
        subjects:
        - animals
        - landmarks
        - nature
        - objects
        - recreation
        website: http://example.com/profiles/jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfile
      x-konfig-is-used-in-successful-response: true
    ContributorProfileDataList:
      description: List of contributor profiles
      example:
        data:
        - about: John Doe's photographs
          contributor_type:
          - photographer
          display_name: John Doe
          equipment:
          - Nikon
          - Fuji
          id: 12345678X
          location: US
          portfolio_url: https://www.shutterstock.com/g/jdoe
          social_media:
            facebook: http://example.com/jdoe
            google_plus: http://example.com/jdoe
            linkedin: http://example.com/jdoe
            pinterest: http://example.com/jdoe
            tumblr: http://example.com/jdoe
            twitter: http://example.com/jdoe
          styles:
          - landscape
          - nature
          - footage_travel
          subjects:
          - animals
          - landmarks
          - nature
          - objects
          - recreation
          website: http://example.com/profiles/jdoe
        page: 1
        per_page: 5
        total_count: 15
      properties:
        data:
          description: Conributor profiles
          items:
            $ref: '#/components/schemas/ContributorProfile'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: Error message
          type: string
        page:
          description: Page of response
          type: integer
        per_page:
          description: Number of contributors per page
          type: integer
        total_count:
          description: Total count of contributors for this request
          type: integer
      x-konfig-original-example:
        data:
        - about: John Doe's photographs
          contributor_type:
          - photographer
          display_name: John Doe
          equipment:
          - Nikon
          - Fuji
          id: 12345678X
          location: US
          portfolio_url: https://www.shutterstock.com/g/jdoe
          social_media:
            facebook: http://example.com/jdoe
            google_plus: http://example.com/jdoe
            linkedin: http://example.com/jdoe
            pinterest: http://example.com/jdoe
            tumblr: http://example.com/jdoe
            twitter: http://example.com/jdoe
          styles:
          - landscape
          - nature
          - footage_travel
          subjects:
          - animals
          - landmarks
          - nature
          - objects
          - recreation
          website: http://example.com/profiles/jdoe
        page: 1
        per_page: 5
        total_count: 15
      x-konfig-is-used-in-successful-response: true
    ContributorProfileSocialMedia:
      description: Contributor profile social media links
      example:
        facebook: http://example.com/jdoe
        google_plus: http://example.com/jdoe
        linkedin: http://example.com/jdoe
        pinterest: http://example.com/jdoe
        tumblr: http://example.com/jdoe
        twitter: http://example.com/jdoe
      properties:
        facebook:
          description: Facebook link for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-facebook
        google_plus:
          description: Google+ link for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-google_plus
        linkedin:
          description: LinkedIn link for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-linkedin
        pinterest:
          description: Pinterest page for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-pinterest
        tumblr:
          description: Tumblr link for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-tumblr
        twitter:
          description: Twitter link for contributor
          example: http://example.com/jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-twitter
      type: object
      x-konfig-original-example:
        facebook: http://example.com/jdoe
        google_plus: http://example.com/jdoe
        linkedin: http://example.com/jdoe
        pinterest: http://example.com/jdoe
        tumblr: http://example.com/jdoe
        twitter: http://example.com/jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContributorProfileSocialMedia
    Cookie:
      description: Cookie object
      example:
        name: The name of the cookie
        value: The value of the cookie
      properties:
        name:
          description: The name of the cookie
          example: The name of the cookie
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie-properties-name
        value:
          description: The value of the cookie
          example: The value of the cookie
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie-properties-value
      required:
      - name
      - value
      type: object
      x-konfig-original-example:
        name: The name of the cookie
        value: The value of the cookie
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie
    CreateAudioRender:
      description: Data required to create an audio render
      example:
        filename: My Project.mp3
        preset: MASTER_MP3
        timeline:
          spans:
          - id: 111
            instrument_groups:
            - instrument_group: roomy_kit
              statuses:
              - beat: 12
                status: active
            regions:
            - beat: 12
              descriptor: cinematic_minimal_tense
              end_type:
                beat: 24
                event: ending
                type: ringout
              id: 222
              key:
                tonic_note: c
                tonic_quality: major
              region: music
            span_type: metered
            tempo: 76
            tempo_changes:
            - tempo: 86
              time: 5
            time: 5
          - span_type: unmetered
            time: 20
      properties:
        filename:
          description: A user-specified file name suggestion; this file name becomes
            the filename property of the Content-Disposition header when the user
            downloads the rendered audio file
          example: My Project.mp3
          type: string
          x-konfig-original-example: My Project.mp3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateAudioRender-properties-filename
        preset:
          description: "File format, such as MP3 file, combined WAV file, or individual\
            \ track WAV files"
          enum:
          - MASTER_MP3
          - MASTER_WAV
          - STEMS_WAV
          example: MASTER_MP3
          type: string
          x-konfig-original-example: MASTER_MP3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateAudioRender-properties-preset
        timeline:
          $ref: '#/components/schemas/AudioRenderTimeline'
      required:
      - filename
      - preset
      - timeline
      type: object
      x-konfig-original-example:
        filename: My Project.mp3
        preset: MASTER_MP3
        timeline:
          spans:
          - id: 111
            instrument_groups:
            - instrument_group: roomy_kit
              statuses:
              - beat: 12
                status: active
            regions:
            - beat: 12
              descriptor: cinematic_minimal_tense
              end_type:
                beat: 24
                event: ending
                type: ringout
              id: 222
              key:
                tonic_note: c
                tonic_quality: major
              region: music
            span_type: metered
            tempo: 76
            tempo_changes:
            - tempo: 86
              time: 5
            time: 5
          - span_type: unmetered
            time: 20
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateAudioRender
    CreateAudioRendersRequest:
      description: Render request data
      example:
        audio_renders:
        - filename: My Project.mp3
          preset: MASTER_MP3
          timeline:
            spans:
            - id: 111
              instrument_groups:
              - instrument_group: roomy_kit
                statuses:
                - beat: 12
                  status: active
              regions:
              - beat: 12
                descriptor: cinematic_minimal_tense
                end_type:
                  beat: 24
                  event: ending
                  type: ringout
                id: 222
                key:
                  tonic_note: c
                  tonic_quality: major
                region: music
              span_type: metered
              tempo: 76
              tempo_changes:
              - tempo: 86
                time: 5
              time: 5
            - span_type: unmetered
              time: 20
      properties:
        audio_renders:
          description: Parameters to create computer audio renders
          items:
            $ref: '#/components/schemas/CreateAudioRender'
          type: array
      required:
      - audio_renders
      type: object
      x-konfig-original-example:
        audio_renders:
        - filename: My Project.mp3
          preset: MASTER_MP3
          timeline:
            spans:
            - id: 111
              instrument_groups:
              - instrument_group: roomy_kit
                statuses:
                - beat: 12
                  status: active
              regions:
              - beat: 12
                descriptor: cinematic_minimal_tense
                end_type:
                  beat: 24
                  event: ending
                  type: ringout
                id: 222
                key:
                  tonic_note: c
                  tonic_quality: major
                region: music
              span_type: metered
              tempo: 76
              tempo_changes:
              - tempo: 86
                time: 5
              time: 5
            - span_type: unmetered
              time: 20
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateAudioRendersRequest
    CreateCatalogCollection:
      example:
        items:
        - asset:
            id: 1690105108X
            type: image
        name: New Collection
        visibility: public
      properties:
        items:
          items:
            $ref: '#/components/schemas/CreateCatalogCollectionItem'
          maxItems: 50
          type: array
        name:
          example: New Collection
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-name
        visibility:
          default: private
          enum:
          - private
          - public
          example: private
          type: string
          x-konfig-original-example: private
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-visibility
      required:
      - name
      type: object
      x-konfig-original-example:
        items:
        - asset:
            id: 1690105108X
            type: image
        name: New Collection
        visibility: public
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollection
    CreateCatalogCollectionItem:
      example:
        asset:
          id: 1690105108X
          type: image
      properties:
        asset:
          $ref: '#/components/schemas/CreateCatalogCollectionItem_asset'
      required:
      - asset
      type: object
      x-konfig-original-example:
        asset:
          id: 1690105108X
          type: image
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollectionItem
    CreateCatalogCollectionItems:
      example:
        items:
        - asset:
            id: 1690105108X
            type: image
      properties:
        items:
          items:
            $ref: '#/components/schemas/CreateCatalogCollectionItem'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - items
      type: object
      x-konfig-original-example:
        items:
        - asset:
            id: 1690105108X
            type: image
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollectionItems
    CustomSizeDimensions:
      description: "A custom height or a custom width to resize the image to, but\
        \ not both (experimental)"
      example:
        height: 600
        width: 800
      properties:
        height:
          description: Custom height to resize the image to
          example: 600
          minimum: 100
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CustomSizeDimensions-properties-height
        width:
          description: Custom width to resize the image to
          example: 800
          minimum: 100
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CustomSizeDimensions-properties-width
      type: object
      x-konfig-original-example:
        height: 600
        width: 800
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CustomSizeDimensions
    Descriptors:
      description: Information about a descriptor
      example:
        tags:
        - Tense
        - Cinematic
        - Negative
        - Simple Meter
        - 4/4
        - Natural Minor
        - Dorian
        - Minimal
        - Adagio
        - Single Region
        - Main
        - Entertainment
        - Politics
        - Keys
        - Mid Pads
        - Fast
        - Slow
        - Slow
        - Voice
        - Medium Bright
        - Non Noisy
        - Medium Thick
        - Angelic
        - Direct
        - Percussion
        - Perc FX
        - Misc
        - Acoustic Pianos
        - Grand
        - Nice
        - Roomy
        - Pop
        - Upright
        - Clean
        - Classic
        - Keyboards
        - Digital Keyboard
        - Strings
        - Synth Basses
        - Fast
        - Dark
        - Thick
        - Sub
        - Synth Mallets
        - Dull
        - Mid Synth Beds
        - Slow
        - None
        - Medium Noisy
        - Harsh
        - Fast
        - Airy
        - Long Textures
        - Ambience
        - Synth Texture
        - Ethereal
        - Set Kicks
        - Processed
        - Hubcap Mallet
        - Wide
        - Tickie
        - Airy
        - Chamber
        - Thin
        - Organ
        - Cello Ensemble
        - Sweet
        - Big
        - Di
        - Raw
        - Bright
        - Tight
        - Chorus
        - Buzzy
        - Huge
        - Warm
        - Jazz
        - Brass
        - String
        - Hollow
        - Woodwind
        - Breathy
        - Crystal
        - Rhodes
        - Synth Piano
        - Noisy
        - Woody
        - Metallic
        - Reverse Piano
        - Full
        - Foley
        - Piano
        - Clean
        - Delayed
        - Reverb
        - Low Passed
        - Large
        - Medium
        - Small
        average_render_speed: 8.242664029014177
        bands:
        - id: cinematic_minimal_tense_band_1
          name: Cinematic Minimal Tense Band 1
        - id: cinematic_minimal_tense_band_2
          name: Cinematic Minimal Tense Band 2
        id: cinematic_minimal_tense
        instruments:
        - id: blue_synth_pad
          name: Warm Pad - Lush
        - id: direct_round_1_synth_bass
          name: Direct Round 1 Synth Bass
        - id: direct_crystal_breath_mid_pad
          name: Direct Crystal Breath Mid Pad
        max_tempo: 76
        min_tempo: 58
        name: Cinematic Minimal Tense
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
      properties:
        tags:
          description: Tags that describe the descriptor
          items:
            type: string
          type: array
        average_render_speed:
          description: "The average ratio of the length of the music to the time it\
            \ takes to render; for example, a render speed of 3.0 generates 30 seconds\
            \ of music in about 10 seconds"
          example: 8.242664029014177
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors-properties-average_render_speed
        bands:
          description: The bands that are available to use this descriptor
          items:
            $ref: '#/components/schemas/Bands'
          type: array
        id:
          description: The ID of the descriptor
          example: cinematic_minimal_tense
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors-properties-id
        instruments:
          description: The instruments that can play with this descriptor
          items:
            $ref: '#/components/schemas/Instruments'
          type: array
        max_tempo:
          description: The maximum beats per minute that the descriptor is intended
            to be used with
          example: 76
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors-properties-max_tempo
        min_tempo:
          description: The minimum beats per minute that the descriptor is intended
            to be used with
          example: 58
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors-properties-min_tempo
        name:
          description: The name of the descriptor
          example: Cinematic Minimal Tense
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors-properties-name
        previews:
          description: Preview of the descriptor
          items:
            $ref: '#/components/schemas/Preview'
          type: array
      type: object
      x-konfig-original-example:
        tags:
        - Tense
        - Cinematic
        - Negative
        - Simple Meter
        - 4/4
        - Natural Minor
        - Dorian
        - Minimal
        - Adagio
        - Single Region
        - Main
        - Entertainment
        - Politics
        - Keys
        - Mid Pads
        - Fast
        - Slow
        - Slow
        - Voice
        - Medium Bright
        - Non Noisy
        - Medium Thick
        - Angelic
        - Direct
        - Percussion
        - Perc FX
        - Misc
        - Acoustic Pianos
        - Grand
        - Nice
        - Roomy
        - Pop
        - Upright
        - Clean
        - Classic
        - Keyboards
        - Digital Keyboard
        - Strings
        - Synth Basses
        - Fast
        - Dark
        - Thick
        - Sub
        - Synth Mallets
        - Dull
        - Mid Synth Beds
        - Slow
        - None
        - Medium Noisy
        - Harsh
        - Fast
        - Airy
        - Long Textures
        - Ambience
        - Synth Texture
        - Ethereal
        - Set Kicks
        - Processed
        - Hubcap Mallet
        - Wide
        - Tickie
        - Airy
        - Chamber
        - Thin
        - Organ
        - Cello Ensemble
        - Sweet
        - Big
        - Di
        - Raw
        - Bright
        - Tight
        - Chorus
        - Buzzy
        - Huge
        - Warm
        - Jazz
        - Brass
        - String
        - Hollow
        - Woodwind
        - Breathy
        - Crystal
        - Rhodes
        - Synth Piano
        - Noisy
        - Woody
        - Metallic
        - Reverse Piano
        - Full
        - Foley
        - Piano
        - Clean
        - Delayed
        - Reverb
        - Low Passed
        - Large
        - Medium
        - Small
        average_render_speed: 8.242664029014177
        bands:
        - id: cinematic_minimal_tense_band_1
          name: Cinematic Minimal Tense Band 1
        - id: cinematic_minimal_tense_band_2
          name: Cinematic Minimal Tense Band 2
        id: cinematic_minimal_tense
        instruments:
        - id: blue_synth_pad
          name: Warm Pad - Lush
        - id: direct_round_1_synth_bass
          name: Direct Round 1 Synth Bass
        - id: direct_crystal_breath_mid_pad
          name: Direct Crystal Breath Mid Pad
        max_tempo: 76
        min_tempo: 58
        name: Cinematic Minimal Tense
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Descriptors
    DescriptorsListResult:
      description: List Descriptors results
      example:
        data:
        - tags:
          - Tense
          - Cinematic
          - Negative
          - Simple Meter
          - 4/4
          - Natural Minor
          - Dorian
          - Minimal
          - Adagio
          - Single Region
          - Main
          - Entertainment
          - Politics
          - Keys
          - Mid Pads
          - Fast
          - Slow
          - Slow
          - Voice
          - Medium Bright
          - Non Noisy
          - Medium Thick
          - Angelic
          - Direct
          - Percussion
          - Perc FX
          - Misc
          - Acoustic Pianos
          - Grand
          - Nice
          - Roomy
          - Pop
          - Upright
          - Clean
          - Classic
          - Keyboards
          - Digital Keyboard
          - Strings
          - Synth Basses
          - Fast
          - Dark
          - Thick
          - Sub
          - Synth Mallets
          - Dull
          - Mid Synth Beds
          - Slow
          - None
          - Medium Noisy
          - Harsh
          - Fast
          - Airy
          - Long Textures
          - Ambience
          - Synth Texture
          - Ethereal
          - Set Kicks
          - Processed
          - Hubcap Mallet
          - Wide
          - Tickie
          - Airy
          - Chamber
          - Thin
          - Organ
          - Cello Ensemble
          - Sweet
          - Big
          - Di
          - Raw
          - Bright
          - Tight
          - Chorus
          - Buzzy
          - Huge
          - Warm
          - Jazz
          - Brass
          - String
          - Hollow
          - Woodwind
          - Breathy
          - Crystal
          - Rhodes
          - Synth Piano
          - Noisy
          - Woody
          - Metallic
          - Reverse Piano
          - Full
          - Foley
          - Piano
          - Clean
          - Delayed
          - Reverb
          - Low Passed
          - Large
          - Medium
          - Small
          average_render_speed: 8.242664029014177
          bands:
          - id: cinematic_minimal_tense_band_1X
            name: Cinematic Minimal Tense Band 1
          - id: cinematic_minimal_tense_band_2X
            name: Cinematic Minimal Tense Band 2
          id: cinematic_minimal_tenseX
          instruments:
          - id: blue_synth_padX
            name: Warm Pad - Lush
          - id: direct_round_1_synth_bassX
            name: Direct Round 1 Synth Bass
          - id: direct_crystal_breath_mid_padX
            name: Direct Crystal Breath Mid Pad
          max_tempo: 76
          min_tempo: 58
          name: Cinematic Minimal Tense
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
        page: 1
        per_page: 1
      properties:
        data:
          description: List of descriptors
          items:
            $ref: '#/components/schemas/Descriptors'
          type: array
        page:
          description: Current page that is returned
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DescriptorsListResult-properties-page
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DescriptorsListResult-properties-per_page
      type: object
      x-konfig-original-example:
        data:
        - tags:
          - Tense
          - Cinematic
          - Negative
          - Simple Meter
          - 4/4
          - Natural Minor
          - Dorian
          - Minimal
          - Adagio
          - Single Region
          - Main
          - Entertainment
          - Politics
          - Keys
          - Mid Pads
          - Fast
          - Slow
          - Slow
          - Voice
          - Medium Bright
          - Non Noisy
          - Medium Thick
          - Angelic
          - Direct
          - Percussion
          - Perc FX
          - Misc
          - Acoustic Pianos
          - Grand
          - Nice
          - Roomy
          - Pop
          - Upright
          - Clean
          - Classic
          - Keyboards
          - Digital Keyboard
          - Strings
          - Synth Basses
          - Fast
          - Dark
          - Thick
          - Sub
          - Synth Mallets
          - Dull
          - Mid Synth Beds
          - Slow
          - None
          - Medium Noisy
          - Harsh
          - Fast
          - Airy
          - Long Textures
          - Ambience
          - Synth Texture
          - Ethereal
          - Set Kicks
          - Processed
          - Hubcap Mallet
          - Wide
          - Tickie
          - Airy
          - Chamber
          - Thin
          - Organ
          - Cello Ensemble
          - Sweet
          - Big
          - Di
          - Raw
          - Bright
          - Tight
          - Chorus
          - Buzzy
          - Huge
          - Warm
          - Jazz
          - Brass
          - String
          - Hollow
          - Woodwind
          - Breathy
          - Crystal
          - Rhodes
          - Synth Piano
          - Noisy
          - Woody
          - Metallic
          - Reverse Piano
          - Full
          - Foley
          - Piano
          - Clean
          - Delayed
          - Reverb
          - Low Passed
          - Large
          - Medium
          - Small
          average_render_speed: 8.242664029014177
          bands:
          - id: cinematic_minimal_tense_band_1X
            name: Cinematic Minimal Tense Band 1
          - id: cinematic_minimal_tense_band_2X
            name: Cinematic Minimal Tense Band 2
          id: cinematic_minimal_tenseX
          instruments:
          - id: blue_synth_padX
            name: Warm Pad - Lush
          - id: direct_round_1_synth_bassX
            name: Direct Round 1 Synth Bass
          - id: direct_crystal_breath_mid_padX
            name: Direct Crystal Breath Mid Pad
          max_tempo: 76
          min_tempo: 58
          name: Cinematic Minimal Tense
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
        page: 1
        per_page: 1
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DescriptorsListResult
      x-konfig-is-used-in-successful-response: true
    DownloadHistory:
      description: "Information about a downloaded media item. Applicable for all\
        \ media types, only one of 'audio', 'image' or 'video' will be in a single\
        \ DownloadHistory object"
      example:
        download_time: 2021-05-20T20:31:46.000Z
        id: a24499ca3ccd912a6d8316d45f953ef092
        image:
          format:
            size: medium
          id: 1234567X
        is_downloadable: true
        license: standard
        subscription_id: s12345678
        user:
          username: jdoe
      properties:
        audio:
          $ref: '#/components/schemas/DownloadHistoryMediaDetails'
        download_time:
          description: Date the media was downloaded the first time
          example: 2021-05-20T20:31:46Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory-properties-download_time
        id:
          description: ID of the download
          example: a24499ca3ccd912a6d8316d45f953ef092
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory-properties-id
        image:
          $ref: '#/components/schemas/DownloadHistoryMediaDetails'
        is_downloadable:
          description: Specifies if the media is downloadable via its respective downloads
            endpoint
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory-properties-is_downloadable
        license:
          description: The name of the license of this download
          example: standard
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory-properties-license
        metadata:
          description: The metadata that was passed in the original licensing request
          type: object
        revshare:
          $ref: '#/components/schemas/DownloadHistoryRevshareDetails'
        subscription_id:
          description: ID of the subscription used to perform this download
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory-properties-subscription_id
        user:
          $ref: '#/components/schemas/DownloadHistoryUserDetails'
        video:
          $ref: '#/components/schemas/DownloadHistoryMediaDetails'
      required:
      - download_time
      - id
      - license
      type: object
      x-konfig-original-example:
        download_time: 2021-05-20T20:31:46.000Z
        id: a24499ca3ccd912a6d8316d45f953ef092
        image:
          format:
            size: medium
          id: 1234567X
        is_downloadable: true
        license: standard
        subscription_id: s12345678
        user:
          username: jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistory
    DownloadHistoryDataList:
      description: List of download events
      example:
        data:
        - download_time: 2021-07-15T15:46:34.000Z
          id: e1eba3833793e77188d22caae8bac9f2cd
          image:
            format:
              size: original
            id: 9763363ao
          is_downloadable: false
          license: premier_editorial_all_digital
          metadata:
            client: Company A
            job: Important project
            other: Important media
            purchase_order: "123456"
          subscription_id: s12345678
          user:
            username: editorial_test_account_002
        page: 1
        per_page: 1
        total_count: 2890
      properties:
        data:
          description: Download events
          items:
            $ref: '#/components/schemas/DownloadHistory'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: The current page of results
          type: integer
        per_page:
          description: The number of results per page
          type: integer
        total_count:
          description: The total number of results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - download_time: 2021-07-15T15:46:34.000Z
          id: e1eba3833793e77188d22caae8bac9f2cd
          image:
            format:
              size: original
            id: 9763363ao
          is_downloadable: false
          license: premier_editorial_all_digital
          metadata:
            client: Company A
            job: Important project
            other: Important media
            purchase_order: "123456"
          subscription_id: s12345678
          user:
            username: editorial_test_account_002
        page: 1
        per_page: 1
        total_count: 2890
      x-konfig-is-used-in-successful-response: true
    DownloadHistoryFormatDetails:
      description: Information about the format of a download
      example:
        format: jpg
        size: medium
      properties:
        format:
          description: The format of the downloaded media
          example: jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails-properties-format
        size:
          description: The size of the downloaded media
          example: medium
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails-properties-size
      type: object
      x-konfig-original-example:
        format: jpg
        size: medium
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails
    DownloadHistoryMediaDetails:
      description: Information about the downloaded media
      example:
        format:
          format: jpg
          size: medium
        id: 1234567X
      properties:
        format:
          $ref: '#/components/schemas/DownloadHistoryFormatDetails'
        id:
          description: ID of the download history media details
          example: 1234567X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryMediaDetails-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        format:
          format: jpg
          size: medium
        id: 1234567X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryMediaDetails
    DownloadHistoryRevshareDetails:
      description: Pricing information for revenue-sharing transactions
      example:
        purchase_amount: "8.65"
        purchase_currency: USD
      properties:
        purchase_amount:
          description: The amount charged for the license
          example: "8.65"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails-properties-purchase_amount
        purchase_currency:
          description: The currency the amount was charged in
          example: USD
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails-properties-purchase_currency
      required:
      - purchase_amount
      - purchase_currency
      type: object
      x-konfig-original-example:
        purchase_amount: "8.65"
        purchase_currency: USD
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails
    DownloadHistoryUserDetails:
      description: Information about a user
      example:
        username: jdoe
      properties:
        username:
          description: The name of the user who downloaded the item
          example: jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryUserDetails-properties-username
      required:
      - username
      type: object
      x-konfig-original-example:
        username: jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DownloadHistoryUserDetails
    EditorialAssets:
      description: "Asset information, including size and thumbnail URLs"
      example:
        medium_jpg:
          display_name: Med
          height: 617
          is_licensable: true
          width: 1000
        original:
          display_name: Original
          height: 3693
          is_licensable: true
          width: 5985
        small_jpg:
          display_name: Small
          height: 309
          is_licensable: true
          width: 500
        thumb_170:
          height: 105
          url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
          width: 170
        thumb_220:
          height: 136
          url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
          width: 220
        watermark_1500:
          height: 926
          url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
          width: 1500
        watermark_450:
          height: 278
          url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
          width: 450
      properties:
        medium_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        original:
          $ref: '#/components/schemas/ImageSizeDetails'
        small_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        thumb_170:
          $ref: '#/components/schemas/Thumbnail'
        thumb_220:
          $ref: '#/components/schemas/Thumbnail'
        watermark_1500:
          $ref: '#/components/schemas/Thumbnail'
        watermark_450:
          $ref: '#/components/schemas/Thumbnail'
      type: object
      x-konfig-original-example:
        medium_jpg:
          display_name: Med
          height: 617
          is_licensable: true
          width: 1000
        original:
          display_name: Original
          height: 3693
          is_licensable: true
          width: 5985
        small_jpg:
          display_name: Small
          height: 309
          is_licensable: true
          width: 500
        thumb_170:
          height: 105
          url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
          width: 170
        thumb_220:
          height: 136
          url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
          width: 220
        watermark_1500:
          height: 926
          url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
          width: 1500
        watermark_450:
          height: 278
          url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
          width: 450
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialAssets
    EditorialCategory:
      description: Name of an editorial category
      example:
        name: Awards
      properties:
        name:
          example: Awards
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCategory-properties-name
      type: object
      x-konfig-original-example:
        name: Awards
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCategory
    EditorialCategoryResults:
      description: List of editorial categories
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
      properties:
        data:
          description: List of editorial categories
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
      type: object
      x-konfig-original-example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCategoryResults
      x-konfig-is-used-in-successful-response: true
    EditorialContent:
      description: Metadata about editorial content
      example:
        title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
        description: "Security and stewards stand outside the Old Trafford stadium\
          \ in Manchester, England, ahead of the English Premier League soccer match\
          \ between Manchester United and Leicester City. This is the first Manchester\
          \ United home match since fans protested against American owner Joel Glazer,\
          \ forcing the postponement of the team's Premier League game against Liverpool.\
          \ The protests prompted Glazer to publish a letter in which he pledged to\
          \ accelerate discussions with fans about supporters being able to have a\
          \ greater say at the club"
        aspect: 1.621
        assets:
          medium_jpg:
            display_name: Med
            height: 617
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3693
            is_licensable: true
            width: 5985
          small_jpg:
            display_name: Small
            height: 309
            is_licensable: true
            width: 500
          thumb_170:
            height: 105
            url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
            width: 170
          thumb_220:
            height: 136
            url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
            width: 220
          watermark_1500:
            height: 926
            url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
            width: 1500
          watermark_450:
            height: 278
            url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
            width: 450
        byline: Jon Super/AP/Shutterstock
        caption: ""
        categories:
        - name: Sport
        date_taken: 2021-05-11T00:00:00.000Z
        id: 10687730b
        keywords:
        - england
        - europe
        - leicester city fc
        - manchester
        - manchester united fc
        - men's soccer
        - men's sports
        - premier league
        - professional soccer
        - soccer
        - sports
        - united kingdom
        - western europe
        - wsoc
      properties:
        title:
          example: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-title
        description:
          example: "Security and stewards stand outside the Old Trafford stadium in\
            \ Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-description
        aspect:
          example: 1.621
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-aspect
        assets:
          $ref: '#/components/schemas/EditorialAssets'
        byline:
          example: Jon Super/AP/Shutterstock
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-byline
        caption:
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-caption
        categories:
          description: List of categories
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
        date_taken:
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-date_taken
        id:
          example: 10687730b
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent-properties-id
        keywords:
          items:
            type: string
          type: array
        special_instructions:
          type: string
      required:
      - id
      type: object
      x-konfig-original-example:
        title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
        description: "Security and stewards stand outside the Old Trafford stadium\
          \ in Manchester, England, ahead of the English Premier League soccer match\
          \ between Manchester United and Leicester City. This is the first Manchester\
          \ United home match since fans protested against American owner Joel Glazer,\
          \ forcing the postponement of the team's Premier League game against Liverpool.\
          \ The protests prompted Glazer to publish a letter in which he pledged to\
          \ accelerate discussions with fans about supporters being able to have a\
          \ greater say at the club"
        aspect: 1.621
        assets:
          medium_jpg:
            display_name: Med
            height: 617
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3693
            is_licensable: true
            width: 5985
          small_jpg:
            display_name: Small
            height: 309
            is_licensable: true
            width: 500
          thumb_170:
            height: 105
            url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
            width: 170
          thumb_220:
            height: 136
            url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
            width: 220
          watermark_1500:
            height: 926
            url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
            width: 1500
          watermark_450:
            height: 278
            url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
            width: 450
        byline: Jon Super/AP/Shutterstock
        caption: ""
        categories:
        - name: Sport
        date_taken: 2021-05-11T00:00:00.000Z
        id: 10687730b
        keywords:
        - england
        - europe
        - leicester city fc
        - manchester
        - manchester united fc
        - men's soccer
        - men's sports
        - premier league
        - professional soccer
        - soccer
        - sports
        - united kingdom
        - western europe
        - wsoc
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialContent
      x-konfig-is-used-in-successful-response: true
    EditorialContentDataList:
      description: List of editorial items
      example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        page: 1
        per_page: 5
        total_count: 16
      properties:
        data:
          description: Editorial items
          items:
            $ref: '#/components/schemas/EditorialContent'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page of the response
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results
          type: integer
      x-konfig-original-example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        page: 1
        per_page: 5
        total_count: 16
      x-konfig-is-used-in-successful-response: true
    EditorialCoverItem:
      description: Cover image for editorial livefeed
      example:
        height: 117
        id: 9763363q
        url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
        width: 170
      properties:
        height:
          example: 117
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCoverItem-properties-height
        id:
          example: 9763363q
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCoverItem-properties-id
        url:
          example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCoverItem-properties-url
        width:
          example: 170
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCoverItem-properties-width
      required:
      - id
      - url
      type: object
      x-konfig-original-example:
        height: 117
        id: 9763363q
        url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
        width: 170
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialCoverItem
    EditorialImageCategoryResults:
      description: List of editorial categories
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      properties:
        data:
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
      type: object
      x-konfig-original-example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageCategoryResults
      x-konfig-is-used-in-successful-response: true
    EditorialImageContentDataList:
      description: List of editorial items
      example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        page: 1
        per_page: 1
        total_count: 23
      properties:
        data:
          description: Editorial items
          items:
            $ref: '#/components/schemas/EditorialContent'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page of the response
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results
          type: integer
      x-konfig-original-example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        page: 1
        per_page: 1
        total_count: 23
      x-konfig-is-used-in-successful-response: true
    EditorialImageLivefeed:
      description: Metadata about editorial livefeed
      example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      properties:
        cover_item:
          $ref: '#/components/schemas/EditorialCoverItem'
        created_time:
          description: When the livefeed was initially created
          example: 2018-07-17T12:42:03Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-created_time
        id:
          description: Livefeed ID
          example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-id
        name:
          description: Name of the livefeed
          example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-name
        total_item_count:
          description: Total count of items in the livefeed
          example: 38
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-total_item_count
      required:
      - id
      - name
      - total_item_count
      type: object
      x-konfig-original-example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeed
      x-konfig-is-used-in-successful-response: true
    EditorialImageLivefeedList:
      description: List of editorial livefeeds
      example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 5300
      properties:
        data:
          description: Editorial livefeeds
          items:
            $ref: '#/components/schemas/EditorialLivefeed'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page of the response
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-page
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-per_page
        total_count:
          description: Total count of all results
          example: 5300
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-total_count
      required:
      - data
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 5300
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialImageLivefeedList
      x-konfig-is-used-in-successful-response: true
    EditorialLivefeed:
      description: Metadata about editorial livefeed
      example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      properties:
        cover_item:
          $ref: '#/components/schemas/EditorialCoverItem'
        created_time:
          description: When the livefeed was initially created
          example: 2018-07-17T12:42:03Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeed-properties-created_time
        id:
          description: Livefeed ID
          example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeed-properties-id
        name:
          description: Name of the livefeed
          example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeed-properties-name
        total_item_count:
          description: Total count of items in the livefeed
          example: 38
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeed-properties-total_item_count
      required:
      - id
      - name
      - total_item_count
      type: object
      x-konfig-original-example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeed
      x-konfig-is-used-in-successful-response: true
    EditorialLivefeedList:
      description: List of editorial livefeeds
      example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 56
      properties:
        data:
          description: Editorial livefeeds
          items:
            $ref: '#/components/schemas/EditorialLivefeed'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page of the response
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-page
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-per_page
        total_count:
          description: Total count of all results
          example: 56
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-total_count
      required:
      - data
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 56
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialLivefeedList
      x-konfig-is-used-in-successful-response: true
    EditorialSearchResults:
      description: Editorial search results
      example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        next: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
        per_page: 1
        prev: ""
        search_id: BaMzOAkpHIvfnuWVRFs1ag
        total_count: 46845
      properties:
        data:
          description: Editorial items
          items:
            $ref: '#/components/schemas/EditorialContent'
          type: array
        message:
          description: Optional error message
          type: string
        next:
          description: Cursor value that represents the next page of results
          example: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults-properties-next
        page:
          description: Current page of the response
          type: integer
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults-properties-per_page
        prev:
          description: Cursor value that represents the previous page of results
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults-properties-prev
        search_id:
          description: Unique identifier for the search request
          example: BaMzOAkpHIvfnuWVRFs1ag
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults-properties-search_id
        total_count:
          description: Total count of all results
          example: 46845
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults-properties-total_count
      required:
      - data
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        next: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
        per_page: 1
        prev: ""
        search_id: BaMzOAkpHIvfnuWVRFs1ag
        total_count: 46845
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialSearchResults
      x-konfig-is-used-in-successful-response: true
    EditorialUpdatedContent:
      description: Metadata about updated editorial content
      example:
        title: "Hong Kong kicks off international e-Sports competition, China - 24\
          \ Aug 2018"
        description: "Members of the TyLoo e-Sports team from China prepare to face\
          \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia) e-Sports\
          \ and Music Festival Hong Kong 2018, Hong Kong, China, 24 August 2018. The\
          \ festival runs from 24 to 26 August with professional gamers from around\
          \ the world competing in international e-sports tournaments."
        aspect: 1.481
        assets:
          medium_jpg:
            display_name: Med
            height: 675
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3263
            is_licensable: true
            width: 4831
          small_jpg:
            display_name: Small
            height: 337
            is_licensable: true
            width: 500
          thumb_170:
            height: 115
            url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
            width: 170
          thumb_220:
            height: 149
            url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
            width: 220
          watermark_1500:
            height: 1500
            url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
            width: 1040
          watermark_450:
            height: 304
            url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
            width: 450
        byline: ALEX HOFFORD/EPA-EFE/Shutterstock
        caption: ""
        categories: []
        commercial_status:
          status: available
        date_taken: 2018-08-24T00:00:00.000Z
        id: 9804979n
        keywords: []
        rights:
          countries: "CAN,+DEU,+GBR,+USA,-*"
        supplier_code: EPA
        updated_time: 2019-07-16T00:04:44.000Z
        updates:
        - addition
      properties:
        title:
          example: "Hong Kong kicks off international e-Sports competition, China\
            \ - 24 Aug 2018"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-title
        description:
          example: "Members of the TyLoo e-Sports team from China prepare to face\
            \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia)\
            \ e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August\
            \ 2018. The festival runs from 24 to 26 August with professional gamers\
            \ from around the world competing in international e-sports tournaments."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-description
        aspect:
          example: 1.481
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-aspect
        assets:
          $ref: '#/components/schemas/EditorialAssets'
        byline:
          example: ALEX HOFFORD/EPA-EFE/Shutterstock
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-byline
        caption:
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-caption
        categories:
          description: List of categories
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
        commercial_status:
          $ref: '#/components/schemas/EditorialUpdatedContent_commercial_status'
        created_time:
          format: date-time
          type: string
        date_taken:
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-date_taken
        id:
          example: 9804979n
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-id
        keywords:
          items:
            type: string
          type: array
        rights:
          $ref: '#/components/schemas/EditorialUpdatedContent_rights'
        special_instructions:
          type: string
        supplier_code:
          example: EPA
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-supplier_code
        updated_time:
          example: 2019-07-16T00:04:44Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-updated_time
        updates:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-konfig-original-example:
        title: "Hong Kong kicks off international e-Sports competition, China - 24\
          \ Aug 2018"
        description: "Members of the TyLoo e-Sports team from China prepare to face\
          \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia) e-Sports\
          \ and Music Festival Hong Kong 2018, Hong Kong, China, 24 August 2018. The\
          \ festival runs from 24 to 26 August with professional gamers from around\
          \ the world competing in international e-sports tournaments."
        aspect: 1.481
        assets:
          medium_jpg:
            display_name: Med
            height: 675
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3263
            is_licensable: true
            width: 4831
          small_jpg:
            display_name: Small
            height: 337
            is_licensable: true
            width: 500
          thumb_170:
            height: 115
            url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
            width: 170
          thumb_220:
            height: 149
            url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
            width: 220
          watermark_1500:
            height: 1500
            url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
            width: 1040
          watermark_450:
            height: 304
            url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
            width: 450
        byline: ALEX HOFFORD/EPA-EFE/Shutterstock
        caption: ""
        categories: []
        commercial_status:
          status: available
        date_taken: 2018-08-24T00:00:00.000Z
        id: 9804979n
        keywords: []
        rights:
          countries: "CAN,+DEU,+GBR,+USA,-*"
        supplier_code: EPA
        updated_time: 2019-07-16T00:04:44.000Z
        updates:
        - addition
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent
    EditorialUpdatedResults:
      description: Editorial updated results
      example:
        data:
        - title: "Hong Kong kicks off international e-Sports competition, China -\
            \ 24 Aug 2018"
          description: "Members of the TyLoo e-Sports team from China prepare to face\
            \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia)\
            \ e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August\
            \ 2018. The festival runs from 24 to 26 August with professional gamers\
            \ from around the world competing in international e-sports tournaments."
          aspect: 1.481
          assets:
            medium_jpg:
              display_name: Med
              height: 675
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3263
              is_licensable: true
              width: 4831
            small_jpg:
              display_name: Small
              height: 337
              is_licensable: true
              width: 500
            thumb_170:
              height: 115
              url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
              width: 170
            thumb_220:
              height: 149
              url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
              width: 220
            watermark_1500:
              height: 1500
              url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
              width: 1040
            watermark_450:
              height: 304
              url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
              width: 450
          byline: ALEX HOFFORD/EPA-EFE/Shutterstock
          caption: ""
          categories: []
          commercial_status:
            status: available
          date_taken: 2018-08-24T00:00:00.000Z
          id: 9804979nX
          keywords: []
          rights:
            countries: "CAN,+DEU,+GBR,+USA,-*"
          supplier_code: EPA
          updated_time: 2019-07-16T00:04:44.000Z
          updates:
          - addition
        next: eyJ2IjoxLCJzIjoxfQ==
        per_page: 1
        prev: ""
      properties:
        data:
          description: Editorial updated items
          items:
            $ref: '#/components/schemas/EditorialUpdatedContent'
          type: array
        message:
          description: Optional error message
          type: string
        next:
          description: Cursor value that represents the next page of results
          example: eyJ2IjoxLCJzIjoxfQ==
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-next
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-per_page
        prev:
          description: Cursor value that represents the previous page of results
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-prev
      required:
      - data
      type: object
      x-konfig-original-example:
        data:
        - title: "Hong Kong kicks off international e-Sports competition, China -\
            \ 24 Aug 2018"
          description: "Members of the TyLoo e-Sports team from China prepare to face\
            \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia)\
            \ e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August\
            \ 2018. The festival runs from 24 to 26 August with professional gamers\
            \ from around the world competing in international e-sports tournaments."
          aspect: 1.481
          assets:
            medium_jpg:
              display_name: Med
              height: 675
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3263
              is_licensable: true
              width: 4831
            small_jpg:
              display_name: Small
              height: 337
              is_licensable: true
              width: 500
            thumb_170:
              height: 115
              url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
              width: 170
            thumb_220:
              height: 149
              url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
              width: 220
            watermark_1500:
              height: 1500
              url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
              width: 1040
            watermark_450:
              height: 304
              url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
              width: 450
          byline: ALEX HOFFORD/EPA-EFE/Shutterstock
          caption: ""
          categories: []
          commercial_status:
            status: available
          date_taken: 2018-08-24T00:00:00.000Z
          id: 9804979nX
          keywords: []
          rights:
            countries: "CAN,+DEU,+GBR,+USA,-*"
          supplier_code: EPA
          updated_time: 2019-07-16T00:04:44.000Z
          updates:
          - addition
        next: eyJ2IjoxLCJzIjoxfQ==
        per_page: 1
        prev: ""
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedResults
      x-konfig-is-used-in-successful-response: true
    EditorialVideoAssets:
      description: "Asset information, including size and thumbnail URLs"
      example:
        original:
          display_name: HD
          file_size: 82233387
          format: avc1
          fps: 30
          height: 1080
          is_licensable: true
          width: 1080
        preview_mp4:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
        preview_webm:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
        thumb_jpg:
          url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
      properties:
        original:
          $ref: '#/components/schemas/VideoSizeDetails'
        preview_mp4:
          $ref: '#/components/schemas/VideoPreviewUrl'
        preview_webm:
          $ref: '#/components/schemas/VideoPreviewUrl'
        thumb_jpg:
          $ref: '#/components/schemas/VideoPreviewUrl'
      type: object
      x-konfig-original-example:
        original:
          display_name: HD
          file_size: 82233387
          format: avc1
          fps: 30
          height: 1080
          is_licensable: true
          width: 1080
        preview_mp4:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
        preview_webm:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
        thumb_jpg:
          url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoAssets
    EditorialVideoCategoryResults:
      description: List of editorial video categories
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      properties:
        data:
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
      type: object
      x-konfig-original-example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoCategoryResults
      x-konfig-is-used-in-successful-response: true
    EditorialVideoContent:
      description: Metadata about editorial content
      example:
        title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota, USA\
          \ - 13 Nov 2020"
        description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
          \ with our family since a gosling. Peeps has made appearances on our local\
          \ news channels, TV shows, and local newspapers. He has been trained to\
          \ fly next to four wheelers, jet ski's, and boats. He has brought joy to\
          \ many people during the pandemic including those with cancer.\""
        aspect: 1
        assets:
          original:
            display_name: HD
            file_size: 82233387
            format: avc1
            fps: 30
            height: 1080
            is_licensable: true
            width: 1080
          preview_mp4:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
          preview_webm:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
          thumb_jpg:
            url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
        byline: ViralHog/Shutterstock
        caption: ""
        categories: []
        date_taken: 2020-11-13T00:00:00.000Z
        id: 10679854a
        keywords:
        - "2020"
        - adorable
        - birds
        - bizarre
        - canadian goose
        - cute
        - domesticated animals
        - entertainment
        - feel good
        - flew
        - flies
        - fly
        - flying
        - fun
        - goose
        - jet skis
        - nature
        - odd
        - pets
        - played
        - playing
        - plays
        - prior lake
        - sports
        - strange
        - sweet
        - usa
        - viralhog
        - virals
        - water sports
        - weird
      properties:
        title:
          example: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
            \ USA - 13 Nov 2020"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-title
        description:
          example: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
            \ with our family since a gosling. Peeps has made appearances on our local\
            \ news channels, TV shows, and local newspapers. He has been trained to\
            \ fly next to four wheelers, jet ski's, and boats. He has brought joy\
            \ to many people during the pandemic including those with cancer.\""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-description
        aspect:
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-aspect
        assets:
          $ref: '#/components/schemas/EditorialVideoAssets'
        byline:
          example: ViralHog/Shutterstock
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-byline
        caption:
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-caption
        categories:
          description: List of categories
          items:
            $ref: '#/components/schemas/EditorialCategory'
          type: array
        date_taken:
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-date_taken
        id:
          example: 10679854a
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent-properties-id
        keywords:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-konfig-original-example:
        title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota, USA\
          \ - 13 Nov 2020"
        description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
          \ with our family since a gosling. Peeps has made appearances on our local\
          \ news channels, TV shows, and local newspapers. He has been trained to\
          \ fly next to four wheelers, jet ski's, and boats. He has brought joy to\
          \ many people during the pandemic including those with cancer.\""
        aspect: 1
        assets:
          original:
            display_name: HD
            file_size: 82233387
            format: avc1
            fps: 30
            height: 1080
            is_licensable: true
            width: 1080
          preview_mp4:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
          preview_webm:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
          thumb_jpg:
            url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
        byline: ViralHog/Shutterstock
        caption: ""
        categories: []
        date_taken: 2020-11-13T00:00:00.000Z
        id: 10679854a
        keywords:
        - "2020"
        - adorable
        - birds
        - bizarre
        - canadian goose
        - cute
        - domesticated animals
        - entertainment
        - feel good
        - flew
        - flies
        - fly
        - flying
        - fun
        - goose
        - jet skis
        - nature
        - odd
        - pets
        - played
        - playing
        - plays
        - prior lake
        - sports
        - strange
        - sweet
        - usa
        - viralhog
        - virals
        - water sports
        - weird
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoContent
      x-konfig-is-used-in-successful-response: true
    EditorialVideoSearchResults:
      description: Editorial search results
      example:
        data:
        - title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
            \ USA - 13 Nov 2020"
          description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
            \ with our family since a gosling. Peeps has made appearances on our local\
            \ news channels, TV shows, and local newspapers. He has been trained to\
            \ fly next to four wheelers, jet ski's, and boats. He has brought joy\
            \ to many people during the pandemic including those with cancer.\""
          aspect: 1
          assets:
            original:
              display_name: HD
              file_size: 82233387
              format: avc1
              fps: 30
              height: 1080
              is_licensable: true
              width: 1080
            preview_mp4:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
            preview_webm:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
            thumb_jpg:
              url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
          byline: ViralHog/Shutterstock
          caption: ""
          categories: []
          date_taken: 2020-11-13T00:00:00.000Z
          id: 10679854aX
          keywords:
          - "2020"
          - adorable
          - birds
          - bizarre
          - canadian goose
          - cute
          - domesticated animals
          - entertainment
          - feel good
          - flew
          - flies
          - fly
          - flying
          - fun
          - goose
          - jet skis
          - nature
          - odd
          - pets
          - played
          - playing
          - plays
          - prior lake
          - sports
          - strange
          - sweet
          - usa
          - viralhog
          - virals
          - water sports
          - weird
        next: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
        per_page: 1
        prev: ""
        search_id: zhmz9zLmpQehdTPvg8cacQ
        total_count: 331
      properties:
        data:
          description: Editorial items
          items:
            $ref: '#/components/schemas/EditorialVideoContent'
          type: array
        message:
          description: Optional error message
          type: string
        next:
          description: Cursor value that represents the next page of results
          example: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-next
        page:
          description: Current page of the response
          type: integer
        per_page:
          description: Number of results per page
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-per_page
        prev:
          description: Cursor value that represents the previous page of results
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-prev
        search_id:
          description: Unique identifier for the search request
          example: zhmz9zLmpQehdTPvg8cacQ
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-search_id
        total_count:
          description: Total count of all results
          example: 331
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-total_count
      required:
      - data
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
            \ USA - 13 Nov 2020"
          description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
            \ with our family since a gosling. Peeps has made appearances on our local\
            \ news channels, TV shows, and local newspapers. He has been trained to\
            \ fly next to four wheelers, jet ski's, and boats. He has brought joy\
            \ to many people during the pandemic including those with cancer.\""
          aspect: 1
          assets:
            original:
              display_name: HD
              file_size: 82233387
              format: avc1
              fps: 30
              height: 1080
              is_licensable: true
              width: 1080
            preview_mp4:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
            preview_webm:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
            thumb_jpg:
              url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
          byline: ViralHog/Shutterstock
          caption: ""
          categories: []
          date_taken: 2020-11-13T00:00:00.000Z
          id: 10679854aX
          keywords:
          - "2020"
          - adorable
          - birds
          - bizarre
          - canadian goose
          - cute
          - domesticated animals
          - entertainment
          - feel good
          - flew
          - flies
          - fly
          - flying
          - fun
          - goose
          - jet skis
          - nature
          - odd
          - pets
          - played
          - playing
          - plays
          - prior lake
          - sports
          - strange
          - sweet
          - usa
          - viralhog
          - virals
          - water sports
          - weird
        next: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
        per_page: 1
        prev: ""
        search_id: zhmz9zLmpQehdTPvg8cacQ
        total_count: 331
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialVideoSearchResults
      x-konfig-is-used-in-successful-response: true
    Error:
      description: Error object
      example:
        code: VALIDATION_INVALID_TYPE
        data: '''10'''
        message: "Invalid type: string should be integer"
        path: $.query.page
      properties:
        code:
          description: The error code of this error
          example: VALIDATION_INVALID_TYPE
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Error-properties-code
        data:
          description: Debugging information about the error
          example: '''10'''
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Error-properties-data
        items:
          description: A list of items that produced the error
          items:
            type: object
          type: array
        message:
          description: Specific details about this error
          example: "Invalid type: string should be integer"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Error-properties-message
        path:
          description: Internal code reference to the source of the error
          example: $.query.page
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Error-properties-path
      required:
      - message
      type: object
      x-konfig-original-example:
        code: VALIDATION_INVALID_TYPE
        data: '''10'''
        message: "Invalid type: string should be integer"
        path: $.query.page
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Error
    FeaturedCollection:
      description: Metadata about a featured collection
      example:
        cover_item:
          url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
        created_time: 2021-07-07T13:10:24.000Z
        id: "19853"
        items_updated_time: 2021-07-08T12:33:37.000Z
        name: Exercise & Fitness
        total_item_count: 82
        updated_time: 2021-07-07T13:10:24.000Z
      properties:
        cover_item:
          $ref: '#/components/schemas/FeaturedCollectionCoverItem'
        created_time:
          description: Date that the collection was created
          example: 2021-07-07T13:10:24Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-created_time
        hero_item:
          $ref: '#/components/schemas/FeaturedCollectionCoverItem'
        id:
          description: Collection ID
          example: "19853"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-id
        items_updated_time:
          description: Date that an item in the collection was last added or removed
          example: 2021-07-08T12:33:37Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-items_updated_time
        name:
          description: Name of the collection
          example: Exercise & Fitness
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-name
        share_url:
          description: Unique share url for the collection
          type: string
        total_item_count:
          description: Total number of items in the collection
          example: 82
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-total_item_count
        updated_time:
          description: Date that the collection was last modified
          example: 2021-07-07T13:10:24Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection-properties-updated_time
      required:
      - id
      - name
      - total_item_count
      type: object
      x-konfig-original-example:
        cover_item:
          url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
        created_time: 2021-07-07T13:10:24.000Z
        id: "19853"
        items_updated_time: 2021-07-08T12:33:37.000Z
        name: Exercise & Fitness
        total_item_count: 82
        updated_time: 2021-07-07T13:10:24.000Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollection
      x-konfig-is-used-in-successful-response: true
    FeaturedCollectionCoverItem:
      description: Featured collection cover item metadata
      example:
        url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
      properties:
        url:
          description: URL of the collection cover item
          example: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollectionCoverItem-properties-url
      required:
      - url
      type: object
      x-konfig-original-example:
        url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-FeaturedCollectionCoverItem
    FeaturedCollectionDataList:
      description: List of featured collections
      example:
        data:
        - cover_item:
            url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
          created_time: 2021-07-07T13:10:24.000Z
          id: 19853X
          items_updated_time: 2021-07-08T12:33:37.000Z
          name: Exercise & Fitness
          total_item_count: 82
          updated_time: 2021-07-07T13:10:24.000Z
        page: 1
        per_page: 5
        total_count: 123455
      properties:
        data:
          description: Featured collections
          items:
            $ref: '#/components/schemas/FeaturedCollection'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - cover_item:
            url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
          created_time: 2021-07-07T13:10:24.000Z
          id: 19853X
          items_updated_time: 2021-07-08T12:33:37.000Z
          name: Exercise & Fitness
          total_item_count: 82
          updated_time: 2021-07-07T13:10:24.000Z
        page: 1
        per_page: 5
        total_count: 123455
      x-konfig-is-used-in-successful-response: true
    GenreList:
      description: List of audio genres
      example:
        data:
        - Rock
        - Pop > Singer-Songwriter
        - Pop > Synth Pop
        - Production / Film Scores
      properties:
        data:
          description: List of genres
          items:
            type: string
          type: array
      required:
      - data
      type: object
      x-konfig-original-example:
        data:
        - Rock
        - Pop > Singer-Songwriter
        - Pop > Synth Pop
        - Production / Film Scores
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-GenreList
      x-konfig-is-used-in-successful-response: true
    ISOCountryCode: {}
    Image:
      description: Information about an image
      example:
        description: cropped image of woman gardening
        aspect: 1.5
        assets:
          huge_thumb:
            height: 260
            url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
            width: 390
          large_thumb:
            height: 100
            url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 150
          mosaic:
            height: 167
            url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
            width: 250
          preview:
            height: 300
            url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 450
          preview_1000:
            height: 667
            url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
            width: 1000
          preview_1500:
            height: 1000
            url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 1500
          small_thumb:
            height: 67
            url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 100
        contributor:
          id: 250738318X
        has_model_release: true
        id: 1572478477X
        image_type: photo
        media_type: image
        original_filename: 123.jpg
      properties:
        description:
          description: Detailed description of the image
          example: cropped image of woman gardening
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-description
        added_date:
          description: Date that the image was added by the contributor
          format: date
          type: string
        affiliate_url:
          description: Affiliate referral link; appears only for registered affiliate
            partners
          format: uri
          type: string
        aspect:
          description: "Aspect ratio of the image in decimal format, such as 0.6667"
          example: 1.5
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-aspect
        assets:
          $ref: '#/components/schemas/ImageAssets'
        categories:
          description: Categories that this image is a part of
          items:
            $ref: '#/components/schemas/Category'
          type: array
        contributor:
          $ref: '#/components/schemas/Contributor'
        has_model_release:
          description: Indicates whether there are model releases for the image
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-has_model_release
        has_property_release:
          description: Indicates whether there are property releases for the image
          type: boolean
        id:
          description: Image ID
          example: 1572478477X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-id
        image_type:
          description: Type of image
          example: photo
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-image_type
        insights:
          $ref: '#/components/schemas/Image_insights'
        is_adult:
          description: Whether or not this image contains adult content
          type: boolean
        is_editorial:
          description: Whether or not this image is editorial content
          type: boolean
        is_illustration:
          description: Whether or not this image is an illustration
          type: boolean
        keywords:
          description: Keywords associated with the content of this image
          items:
            type: string
          type: array
        media_type:
          description: "Media type of this image, should always be \"image\""
          example: image
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image-properties-media_type
        model_releases:
          description: List of model releases
          items:
            $ref: '#/components/schemas/ModelRelease'
          type: array
        models:
          description: List of models
          items:
            $ref: '#/components/schemas/Model'
          type: array
        releases:
          description: List of all releases of this image
          items:
            type: string
          type: array
        url:
          description: Link to image information page; included only for certain accounts
          type: string
      required:
      - contributor
      - id
      - media_type
      type: object
      x-konfig-original-example:
        description: cropped image of woman gardening
        aspect: 1.5
        assets:
          huge_thumb:
            height: 260
            url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
            width: 390
          large_thumb:
            height: 100
            url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 150
          mosaic:
            height: 167
            url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
            width: 250
          preview:
            height: 300
            url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 450
          preview_1000:
            height: 667
            url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
            width: 1000
          preview_1500:
            height: 1000
            url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 1500
          small_thumb:
            height: 67
            url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 100
        contributor:
          id: 250738318X
        has_model_release: true
        id: 1572478477X
        image_type: photo
        media_type: image
        original_filename: 123.jpg
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Image
      x-konfig-is-used-in-successful-response: true
    ImageAssets:
      description: Information about the assets that are part of an image
      example:
        huge_thumb:
          height: 260
          url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
          width: 390
        large_thumb:
          height: 100
          url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 150
        preview:
          height: 300
          url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 450
        preview_1000:
          height: 667
          url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
          width: 1000
        preview_1500:
          height: 1000
          url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 1500
        small_thumb:
          height: 67
          url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 100
      properties:
        huge_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        huge_thumb:
          $ref: '#/components/schemas/Thumbnail'
        large_thumb:
          $ref: '#/components/schemas/Thumbnail'
        medium_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        preview:
          $ref: '#/components/schemas/Thumbnail'
        preview_1000:
          $ref: '#/components/schemas/Thumbnail'
        preview_1500:
          $ref: '#/components/schemas/Thumbnail'
        small_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        small_thumb:
          $ref: '#/components/schemas/Thumbnail'
        supersize_jpg:
          $ref: '#/components/schemas/ImageSizeDetails'
        vector_eps:
          $ref: '#/components/schemas/ImageSizeDetails'
      type: object
      x-konfig-original-example:
        huge_thumb:
          height: 260
          url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
          width: 390
        large_thumb:
          height: 100
          url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 150
        preview:
          height: 300
          url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 450
        preview_1000:
          height: 667
          url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
          width: 1000
        preview_1500:
          height: 1000
          url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 1500
        small_thumb:
          height: 67
          url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 100
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageAssets
    ImageCreateRequest:
      description: Request to upload an image
      example:
        base64_image: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
      properties:
        base64_image:
          description: "A Base 64 encoded jpeg or png; images can be no larger than\
            \ 10mb and can be no larger than 10,000 pixels in width or height"
          example: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateRequest-properties-base64_image
      required:
      - base64_image
      type: object
      x-konfig-original-example:
        base64_image: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateRequest
    ImageCreateResponse:
      description: Image upload information
      example:
        id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      properties:
        id:
          example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateResponse-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateResponse
      x-konfig-is-used-in-successful-response: true
    ImageDataList:
      description: List of images
      example:
        data:
        - description: cropped image of woman gardening
          aspect: 1.5
          assets:
            huge_thumb:
              height: 260
              url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              width: 390
            large_thumb:
              height: 100
              url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 150
            preview:
              height: 300
              url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 450
            preview_1000:
              height: 667
              url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              width: 1000
            preview_1500:
              height: 1000
              url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 1500
            small_thumb:
              height: 67
              url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 100
          contributor:
            id: 250738318X
          has_model_release: true
          id: 1572478477X
          image_type: photo
          media_type: image
        page: 1
        per_page: 5
        total_count: 123455
      properties:
        data:
          description: Images
          items:
            $ref: '#/components/schemas/Image'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - description: cropped image of woman gardening
          aspect: 1.5
          assets:
            huge_thumb:
              height: 260
              url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              width: 390
            large_thumb:
              height: 100
              url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 150
            preview:
              height: 300
              url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 450
            preview_1000:
              height: 667
              url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              width: 1000
            preview_1500:
              height: 1000
              url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 1500
            small_thumb:
              height: 67
              url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 100
          contributor:
            id: 250738318X
          has_model_release: true
          id: 1572478477X
          image_type: photo
          media_type: image
        page: 1
        per_page: 5
        total_count: 123455
      x-konfig-is-used-in-successful-response: true
    ImageSearchResults:
      description: Image search results
      example:
        data:
        - description: cropped image of woman gardening
          aspect: 1.5
          assets:
            huge_thumb:
              height: 260
              url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              width: 390
            large_thumb:
              height: 100
              url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 150
            mosaic:
              height: 167
              url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
              width: 250
            preview:
              height: 300
              url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 450
            preview_1000:
              height: 667
              url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              width: 1000
            preview_1500:
              height: 1000
              url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 1500
            small_thumb:
              height: 67
              url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 100
          contributor:
            id: 250738318X
          has_model_release: true
          id: 1572478477X
          image_type: photo
          media_type: image
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        spellcheck_info: {}
        total_count: 45
      properties:
        data:
          description: List of images
          items:
            $ref: '#/components/schemas/Image'
          type: array
        insights:
          $ref: '#/components/schemas/Insights'
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSearchResults-properties-page
        per_page:
          description: Number of results per page
          example: 5
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSearchResults-properties-per_page
        search_id:
          description: Unique identifier for the search request
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSearchResults-properties-search_id
        spellcheck_info:
          description: Returns information if search phrase has potentially been mistyped
            or another query would lead to better search results
          type: object
        total_count:
          description: Total count of all results across all pages
          example: 45
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSearchResults-properties-total_count
      required:
      - data
      - search_id
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - description: cropped image of woman gardening
          aspect: 1.5
          assets:
            huge_thumb:
              height: 260
              url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              width: 390
            large_thumb:
              height: 100
              url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 150
            mosaic:
              height: 167
              url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
              width: 250
            preview:
              height: 300
              url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 450
            preview_1000:
              height: 667
              url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              width: 1000
            preview_1500:
              height: 1000
              url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 1500
            small_thumb:
              height: 67
              url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 100
          contributor:
            id: 250738318X
          has_model_release: true
          id: 1572478477X
          image_type: photo
          media_type: image
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        spellcheck_info: {}
        total_count: 45
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSearchResults
      x-konfig-is-used-in-successful-response: true
    ImageSizeDetails:
      description: Image size information
      example:
        display_name: Med
        dpi: 300
        file_size: 860200
        format: jpg
        height: 667
        is_licensable: true
        width: 1000
      properties:
        display_name:
          description: Display name of this image size
          example: Med
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-display_name
        dpi:
          example: 300
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-dpi
        file_size:
          description: File size (in bytes) of this image size
          example: 860200
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-file_size
        format:
          description: Format of this image size
          example: jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-format
        height:
          description: Height of this image size
          example: 617
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-height
        is_licensable:
          description: Whether or not this image can be licensed in this image size
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-is_licensable
        width:
          description: Width of this image size
          example: 1000
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails-properties-width
      type: object
      x-konfig-original-example:
        display_name: Med
        dpi: 300
        file_size: 860200
        format: jpg
        height: 667
        is_licensable: true
        width: 1000
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageSizeDetails
    Insights:
      description: "AI-powered insights about an asset, based on the specified audience\
        \ and objective"
      example:
        label_performance:
        - name: Nature
          percentile_performance: 98.82123565673828
        - name: Outdoors
          percentile_performance: 98.63294982910156
      properties:
        label_performance:
          description: "How effective the AI thinks an asset in the category is for\
            \ the specified audience and objective, expressed as a percentile compared\
            \ to other images"
          items:
            $ref: '#/components/schemas/Insights_label_performance_inner'
          type: array
      required:
      - label_performance
      type: object
      x-konfig-original-example:
        label_performance:
        - name: Nature
          percentile_performance: 98.82123565673828
        - name: Outdoors
          percentile_performance: 98.63294982910156
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Insights
    Instrument:
      description: Information about an musical instrument
      example:
        tags:
        - Percussion
        - Aux Percs
        - Set Cymbals
        - Crash
        - Open
        - Ride
        - Set Hi-Hat
        - Set Kicks
        - Stick Snare
        - Quad Toms
        - Roto Toms
        id: bright_roomy_kit
        name: Bright Roomy Kit
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
      properties:
        tags:
          description: List of tags
          items:
            type: string
          type: array
        id:
          description: The id of the instrument
          example: bright_roomy_kit
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instrument-properties-id
        name:
          description: Name of the instrument
          example: Bright Roomy Kit
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instrument-properties-name
        previews:
          description: Preview of the instrument
          items:
            $ref: '#/components/schemas/Preview'
          type: array
      type: object
      x-konfig-original-example:
        tags:
        - Percussion
        - Aux Percs
        - Set Cymbals
        - Crash
        - Open
        - Ride
        - Set Hi-Hat
        - Set Kicks
        - Stick Snare
        - Quad Toms
        - Roto Toms
        id: bright_roomy_kit
        name: Bright Roomy Kit
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instrument
    InstrumentList:
      description: List of instruments
      example:
        data:
        - Orchestra
        - Organ
        - Oud
        - Pads
        - Electric Guitar
      properties:
        data:
          description: List of instruments
          items:
            type: string
          type: array
      required:
      - data
      type: object
      x-konfig-original-example:
        data:
        - Orchestra
        - Organ
        - Oud
        - Pads
        - Electric Guitar
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-InstrumentList
      x-konfig-is-used-in-successful-response: true
    Instruments:
      description: Instruments
      example:
        id: bright_roomy_kitX
        name: Bright Roomy Kit
      properties:
        id:
          description: The string id of the instrument
          example: bright_roomy_kitX
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instruments-properties-id
        name:
          description: The string name of the instrument
          example: Bright Roomy Kit
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instruments-properties-name
      type: object
      x-konfig-original-example:
        id: bright_roomy_kitX
        name: Bright Roomy Kit
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Instruments
    InstrumentsListResult:
      description: Image search results
      example:
        data:
        - tags:
          - Percussion
          - Aux Percs
          - Set Cymbals
          - Crash
          - Open
          - Ride
          - Set Hi-Hat
          - Set Kicks
          - Stick Snare
          - Quad Toms
          - Roto Toms
          id: bright_roomy_kitX
          name: Bright Roomy Kit
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
        page: 1
        per_page: 5
      properties:
        data:
          description: List of instrumnets
          items:
            $ref: '#/components/schemas/Instrument'
          type: array
        page:
          description: Current page that is returned
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InstrumentsListResult-properties-page
        per_page:
          description: Number of results per page
          example: 5
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InstrumentsListResult-properties-per_page
      type: object
      x-konfig-original-example:
        data:
        - tags:
          - Percussion
          - Aux Percs
          - Set Cymbals
          - Crash
          - Open
          - Ride
          - Set Hi-Hat
          - Set Kicks
          - Stick Snare
          - Quad Toms
          - Roto Toms
          id: bright_roomy_kitX
          name: Bright Roomy Kit
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
        page: 1
        per_page: 5
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-InstrumentsListResult
      x-konfig-is-used-in-successful-response: true
    KeywordDataList:
      description: List of keywords
      example:
        data:
        - nature
        - wildlife
        - animal
        - cute
        - bamboo
        - panda
        - china
        - wild
        - endangered
        - black
        - bear
      properties:
        data:
          description: Keywords
          items:
            type: string
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
      x-konfig-original-example:
        data:
        - nature
        - wildlife
        - animal
        - cute
        - bamboo
        - panda
        - china
        - wild
        - endangered
        - black
        - bear
      x-konfig-is-used-in-successful-response: true
    Language:
      description: Language code
      enum:
      - ar
      - bg
      - bn
      - cs
      - da
      - de
      - el
      - en
      - es
      - fi
      - fr
      - gu
      - he
      - hi
      - hr
      - hu
      - id
      - it
      - ja
      - kn
      - ko
      - ml
      - mr
      - nb
      - nl
      - or
      - pl
      - pt
      - ro
      - ru
      - sk
      - sl
      - sv
      - ta
      - te
      - th
      - tr
      - uk
      - ur
      - vi
      - zh
      - zh-Hant
      example: cs
      title: language
      type: string
      x-konfig-original-example: cs
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Language
    LicenseAudio:
      description: An audio track in a licensing request
      example:
        audio_id: "123456789"
        license: audio_platform
        search_id: "987654321"
      properties:
        audio_id:
          description: ID of the track being licensed
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudio-properties-audio_id
        license:
          description: Type of license
          enum:
          - audio_platform
          - premier_music_basic
          - premier_music_extended
          - premier_music_pro
          - premier_music_comp
          - asset_all_music
          example: audio_platform
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudio-properties-license
        search_id:
          description: ID of the search that led to this licensing event
          example: "987654321"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudio-properties-search_id
      required:
      - audio_id
      type: object
      x-konfig-original-example:
        audio_id: "123456789"
        license: audio_platform
        search_id: "987654321"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudio
    LicenseAudioRequest:
      description: Audio license request data
      example:
        audio:
        - audio_id: "591623"
          license: audio_platform
          metadata:
            customer_id: "12345"
      properties:
        audio:
          description: List of audio tracks to license
          items:
            $ref: '#/components/schemas/LicenseAudio'
          maxItems: 50
          type: array
      required:
      - audio
      type: object
      x-konfig-original-example:
        audio:
        - audio_id: "591623"
          license: audio_platform
          metadata:
            customer_id: "12345"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudioRequest
    LicenseAudioResult:
      description: The response to a licensing request for an audio track
      example:
        allotment_charge: 1
        audio_id: "123456789"
        download:
          url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
        license_id: abcdef123456789ghijklmn
      properties:
        allotment_charge:
          description: Number of credits that this licensing event used
          example: 1
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudioResult-properties-allotment_charge
        audio_id:
          description: ID of the track that was licensed
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudioResult-properties-audio_id
        download:
          $ref: '#/components/schemas/AudioUrl'
        error:
          description: Error information if applicable
          type: string
        license_id:
          description: ID of the license event
          example: abcdef123456789ghijklmn
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudioResult-properties-license_id
      required:
      - audio_id
      type: object
      x-konfig-original-example:
        allotment_charge: 1
        audio_id: "123456789"
        download:
          url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
        license_id: abcdef123456789ghijklmn
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseAudioResult
    LicenseAudioResultDataList:
      description: List of audio license results
      example:
        data:
        - allotment_charge: 1
          audio_id: "123456789"
          download:
            url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
          license_id: abcdef123456789ghijklmn
      properties:
        data:
          description: License results
          items:
            $ref: '#/components/schemas/LicenseAudioResult'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - allotment_charge: 1
          audio_id: "123456789"
          download:
            url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
          license_id: abcdef123456789ghijklmn
      x-konfig-is-used-in-successful-response: true
    LicenseEditorialContent:
      description: Individual editorial content to license
      example:
        editorial_id: 10687730b
        license: premier_editorial_comp
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        size: original
      properties:
        editorial_id:
          description: Editorial ID
          example: 10687730b
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-editorial_id
        license:
          description: License agreement to use for licensing
          example: premier_editorial_comp
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-license
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        size:
          default: original
          description: Asset size to download
          enum:
          - small
          - medium
          - original
          example: original
          type: string
          x-konfig-original-example: original
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-size
      required:
      - editorial_id
      - license
      type: object
      x-konfig-original-example:
        editorial_id: 10687730b
        license: premier_editorial_comp
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        size: original
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContent
    LicenseEditorialContentRequest:
      description: License editorial content request
      example:
        country: USA
        editorial:
        - editorial_id: 10687730b
          license: premier_editorial_comp
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          size: original
      properties:
        country: {}
        editorial:
          description: Editorial content to license
          items:
            $ref: '#/components/schemas/LicenseEditorialContent'
          type: array
      required:
      - country
      - editorial
      type: object
      x-konfig-original-example:
        country: USA
        editorial:
        - editorial_id: 10687730b
          license: premier_editorial_comp
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          size: original
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContentRequest
    LicenseEditorialContentResult:
      description: The response to a licensing request for editorial content
      example:
        allotment_charge: 1
        download:
          url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
        editorial_id: "69656358"
      properties:
        allotment_charge:
          description: "For pre-paid plans, how many credits were used for the item\
            \ license"
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContentResult-properties-allotment_charge
        download:
          $ref: '#/components/schemas/Url'
        editorial_id:
          description: Editorial ID
          example: "69656358"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContentResult-properties-editorial_id
        error:
          type: string
      required:
      - editorial_id
      type: object
      x-konfig-original-example:
        allotment_charge: 1
        download:
          url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
        editorial_id: "69656358"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialContentResult
    LicenseEditorialContentResults:
      description: List of editorial license results
      example:
        data:
        - allotment_charge: 1
          download:
            url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
          editorial_id: "69656358"
        page: 1
        per_page: 1
        total_count: 12
      properties:
        data:
          description: License results
          items:
            $ref: '#/components/schemas/LicenseEditorialContentResult'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page of the response
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results
          type: integer
      x-konfig-original-example:
        data:
        - allotment_charge: 1
          download:
            url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
          editorial_id: "69656358"
        page: 1
        per_page: 1
        total_count: 12
      x-konfig-is-used-in-successful-response: true
    LicenseEditorialVideoContent:
      description: Individual editorial video content to license
      example:
        editorial_id: 10679854a
        license: premier_editorial_video_digital_only
        metadata:
          purchase_order: "12345"
        size: original
      properties:
        editorial_id:
          description: Editorial ID
          example: 10679854a
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-editorial_id
        license:
          description: License agreement to use for licensing
          enum:
          - premier_editorial_video_digital_only
          - premier_editorial_video_all_media
          - premier_editorial_video_all_media_single_territory
          - premier_editorial_video_comp
          example: premier_editorial_video_digital_only
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-license
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        size:
          default: original
          description: Asset size to download
          enum:
          - original
          example: original
          type: string
          x-konfig-original-example: original
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-size
      required:
      - editorial_id
      - license
      type: object
      x-konfig-original-example:
        editorial_id: 10679854a
        license: premier_editorial_video_digital_only
        metadata:
          purchase_order: "12345"
        size: original
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialVideoContent
    LicenseEditorialVideoContentRequest:
      description: License editorial video content request
      example:
        country: USA
        editorial:
        - editorial_id: 10679854a
          license: premier_editorial_video_digital_only
          metadata:
            purchase_order: "12345"
          size: original
      properties:
        country: {}
        editorial:
          description: Editorial content to license
          items:
            $ref: '#/components/schemas/LicenseEditorialVideoContent'
          type: array
      required:
      - country
      - editorial
      type: object
      x-konfig-original-example:
        country: USA
        editorial:
        - editorial_id: 10679854a
          license: premier_editorial_video_digital_only
          metadata:
            purchase_order: "12345"
          size: original
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseEditorialVideoContentRequest
    LicenseFormat:
      description: Description of a license
      example:
        description: Med
        format: jpg
        media_type: image
        min_resolution: 1000
        size: medium
      properties:
        description:
          description: Description of the license
          example: Med
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat-properties-description
        format:
          description: "Format or extension of the media, such as mpeg for videos\
            \ or jpeg for images"
          example: jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat-properties-format
        media_type:
          description: Media type of the license
          enum:
          - image
          - video
          - audio
          - editorial
          example: image
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat-properties-media_type
        min_resolution:
          description: "Width of the media, in pixels, allowed by this license"
          example: 1000
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat-properties-min_resolution
        size:
          description: "Keyword that details the size of the media, such as hd or\
            \ sd for video, huge or vector for images"
          example: medium
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat-properties-size
      type: object
      x-konfig-original-example:
        description: Med
        format: jpg
        media_type: image
        min_resolution: 1000
        size: medium
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseFormat
    LicenseImage:
      description: Data required to license an image
      example:
        editorial_acknowledgement: true
        format: jpg
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: small
        subscription_id: s12345678
      properties:
        auth_cookie:
          $ref: '#/components/schemas/LicenseImage_auth_cookie'
        custom_dimensions:
          $ref: '#/components/schemas/CustomSizeDimensions'
        editorial_acknowledgement:
          description: Set to true to acknowledge the editorial agreement
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-editorial_acknowledgement
        format:
          default: jpg
          description: (Deprecated) Image format to download
          enum:
          - jpg
          example: jpg
          type: string
          x-konfig-original-example: jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-format
        image_id:
          description: Image ID
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-image_id
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        price:
          description: "For revenue-sharing transactions, the final cost to the end\
            \ customer as a floating-point number in the transaction currency, such\
            \ as 12.34"
          example: 12.34
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-price
        search_id:
          description: ID of the search that led to this licensing transaction
          type: string
        show_modal:
          deprecated: true
          description: (Deprecated)
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-show_modal
        size:
          description: Image size to download
          enum:
          - small
          - medium
          - huge
          - custom
          example: small
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-size
        subscription_id:
          description: ID of the subscription to use for the download.
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-subscription_id
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      required:
      - image_id
      type: object
      x-konfig-original-example:
        editorial_acknowledgement: true
        format: jpg
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: small
        subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage
    LicenseImageRequest:
      description: Image license request data
      example:
        images:
        - editorial_acknowledgement: true
          format: jpg
          image_id: "123456789"
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          price: 12.34
          show_modal: true
          size: small
          subscription_id: s12345678
      properties:
        images:
          description: Images to create licenses for
          items:
            $ref: '#/components/schemas/VLicenseImage'
          maxItems: 50
          type: array
      required:
      - images
      type: object
      x-konfig-original-example:
        images:
        - editorial_acknowledgement: true
          format: jpg
          image_id: "123456789"
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          price: 12.34
          show_modal: true
          size: small
          subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageRequest
    LicenseImageResult:
      description: The response to a licensing request for an image
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
        image_id: "59656357"
        price:
          local_amount: 12.34
          local_currency: EUR
      properties:
        allotment_charge:
          description: Number of credits that this licensing event used
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageResult-properties-allotment_charge
        download:
          $ref: '#/components/schemas/Url'
        error:
          description: "Error message, appears only if there was an error"
          type: string
        image_id:
          description: Image ID that was licensed
          example: "59656357"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageResult-properties-image_id
        license_id:
          description: ID of the license event
          type: string
        price:
          $ref: '#/components/schemas/Price'
      required:
      - image_id
      type: object
      x-konfig-original-example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
        image_id: "59656357"
        price:
          local_amount: 12.34
          local_currency: EUR
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageResult
    LicenseImageResultDataList:
      description: List of information about licensed images
      example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
          image_id: "59656357"
        page: 1
        per_page: 5
        total_count: 23
      properties:
        data:
          description: License results
          items:
            $ref: '#/components/schemas/LicenseImageResult'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
          image_id: "59656357"
        page: 1
        per_page: 5
        total_count: 23
      x-konfig-is-used-in-successful-response: true
    LicenseImageVector:
      description: Data required to license an image
      example:
        editorial_acknowledgement: true
        format: eps
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: vector
        subscription_id: s12345678
      properties:
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        editorial_acknowledgement:
          description: Set to true to acknowledge the editorial agreement
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-editorial_acknowledgement
        format:
          default: eps
          description: (Deprecated) Image format to download
          enum:
          - eps
          example: eps
          type: string
          x-konfig-original-example: eps
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-format
        image_id:
          description: Image ID
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-image_id
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        price:
          description: "For revenue-sharing transactions, the final cost to the end\
            \ customer as a floating-point number in the transaction currency, such\
            \ as 12.34"
          example: 12.34
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-price
        search_id:
          description: ID of the search that led to this licensing transaction
          type: string
        show_modal:
          deprecated: true
          description: (Deprecated)
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-show_modal
        size:
          description: Image size to download
          enum:
          - vector
          example: vector
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-size
        subscription_id:
          description: ID of the subscription to use for the download.
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector-properties-subscription_id
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      required:
      - image_id
      type: object
      x-konfig-original-example:
        editorial_acknowledgement: true
        format: eps
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: vector
        subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImageVector
    LicenseRequestMetadata:
      description: "Additional information for license requests for enterprise accounts\
        \ and API subscriptions, 4 fields maximum; which fields are required is set\
        \ by the account holder"
      example:
        customer_id: "12345"
        geo_location: US
        number_viewed: "15"
        search_term: dog
      maxProperties: 4
      properties: {}
      type: object
      x-konfig-original-example:
        customer_id: "12345"
        geo_location: US
        number_viewed: "15"
        search_term: dog
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
    LicenseSFX:
      description: ""
      example:
        format: wav
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        sfx_id: "123456789"
        show_modal: true
        size: ambisonic
        subscription_id: s12345678
      properties:
        audio_layout:
          enum:
          - ambisonic
          - "5.1"
          - stereo
          type: string
        format:
          enum:
          - wav
          - mp3
          example: wav
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFX-properties-format
        search_id:
          description: ID of the search that led to this licensing event
          type: string
        sfx_id:
          description: ID of the sounds effect being licensed
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFX-properties-sfx_id
        subscription_id:
          description: ID of the subscription to use for the download.
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFX-properties-subscription_id
      required:
      - sfx_id
      - subscription_id
      type: object
      x-konfig-original-example:
        format: wav
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        sfx_id: "123456789"
        show_modal: true
        size: ambisonic
        subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFX
    LicenseSFXRequest:
      description: License sounds effect asset request body
      example:
        sound_effects:
        - format: wav
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          sfx_id: "123456789"
          show_modal: true
          size: ambisonic
          subscription_id: s12345678
      properties:
        sound_effects:
          description: Sound effects to license for
          items:
            $ref: '#/components/schemas/LicenseSFX'
          type: array
      required:
      - sound_effects
      type: object
      x-konfig-original-example:
        sound_effects:
        - format: wav
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          sfx_id: "123456789"
          show_modal: true
          size: ambisonic
          subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFXRequest
    LicenseSFXResult:
      description: The response to a licensing request for an sound effects
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.wav"
        sfx_id: "59656357"
      properties:
        allotment_charge:
          description: Number of credits that this licensing event used
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFXResult-properties-allotment_charge
        download:
          $ref: '#/components/schemas/Url'
        error:
          description: "Error message, appears only if there was an error"
          type: string
        license_id:
          description: ID of the license event
          type: string
        sfx_id:
          description: Sound effects ID that was licensed
          example: "59656357"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFXResult-properties-sfx_id
      required:
      - sfx_id
      type: object
      x-konfig-original-example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.wav"
        sfx_id: "59656357"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseSFXResult
    LicenseSFXResultDataList:
      description: List of information about licensed sound effects
      example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp3"
          sfx_id: "123456789"
        page: 1
        per_page: 5
        total_count: 123455
      properties:
        data:
          description: Sound effects license results
          items:
            $ref: '#/components/schemas/LicenseSFXResult'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
      x-konfig-original-example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp3"
          sfx_id: "123456789"
        page: 1
        per_page: 5
        total_count: 123455
      x-konfig-is-used-in-successful-response: true
    LicenseVideo:
      description: Data required to license a video
      example:
        size: hd
        subscription_id: s12345678
        video_id: "2140697"
      properties:
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        editorial_acknowledgement:
          description: Whether or not this item is editorial content
          type: boolean
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        price:
          description: "Retail price amount as a floating-point number in the transaction\
            \ currency, such as 12.34; only for rev-share partners"
          type: number
        search_id:
          description: ID of the search that led to this licensing event
          type: string
        show_modal:
          deprecated: true
          description: (Deprecated)
          type: boolean
        size:
          description: Size of the video being licensed
          enum:
          - web
          - sd
          - hd
          - 4k
          example: hd
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideo-properties-size
        subscription_id:
          description: ID of the subscription used for this license
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideo-properties-subscription_id
        video_id:
          description: ID of the video being licensed
          example: "2140697"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideo-properties-video_id
      required:
      - video_id
      type: object
      x-konfig-original-example:
        size: hd
        subscription_id: s12345678
        video_id: "2140697"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideo
    LicenseVideoRequest:
      description: List of videos to license
      example:
        videos:
        - size: hd
          subscription_id: s12345678
          video_id: "2140697"
      properties:
        videos:
          description: Videos to license
          items:
            $ref: '#/components/schemas/LicenseVideo'
          maxItems: 50
          type: array
      required:
      - videos
      type: object
      x-konfig-original-example:
        videos:
        - size: hd
          subscription_id: s12345678
          video_id: "2140697"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideoRequest
    LicenseVideoResult:
      description: The response to a licensing request for a video
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
        price:
          local_amount: 12.34
          local_currency: EUR
        video_id: "123456789"
      properties:
        allotment_charge:
          description: Number of credits that this licensing event used
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideoResult-properties-allotment_charge
        download:
          $ref: '#/components/schemas/Url'
        error:
          description: Potential error that occurred during licensing
          type: string
        license_id:
          description: ID of the license event
          type: string
        price:
          $ref: '#/components/schemas/Price'
        video_id:
          description: ID of the video that was licensed
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideoResult-properties-video_id
      required:
      - video_id
      type: object
      x-konfig-original-example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
        price:
          local_amount: 12.34
          local_currency: EUR
        video_id: "123456789"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseVideoResult
    LicenseVideoResultDataList:
      description: List of video license results
      example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
          price:
            local_amount: 12.34
            local_currency: EUR
          video_id: "123456789"
        page: 1
        per_page: 5
        total_count: 123455
      properties:
        data:
          description: License results
          items:
            $ref: '#/components/schemas/LicenseVideoResult'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - allotment_charge: 1
          download:
            url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
          price:
            local_amount: 12.34
            local_currency: EUR
          video_id: "123456789"
        page: 1
        per_page: 5
        total_count: 123455
      x-konfig-is-used-in-successful-response: true
    Model:
      description: Information about a human model or property that appears in media;
        used to search for assets that this model is in
      example:
        id: "123456789"
      properties:
        id:
          description: ID of the model
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Model-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: "123456789"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Model
    ModelRelease:
      description: Model and property release metadata
      example:
        id: 123456789X
      properties:
        id:
          description: ID of the model or property release
          example: 123456789X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ModelRelease-properties-id
      type: object
      x-konfig-original-example:
        id: 123456789X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ModelRelease
    MoodList:
      description: List of audio moods
      example:
        data:
        - Action / Sports
        - Adventure / Discovery
        - Aerobics / Workout
        - Aggressive
      properties:
        data:
          description: List of audio moods
          items:
            type: string
          type: array
      required:
      - data
      type: object
      x-konfig-original-example:
        data:
        - Action / Sports
        - Adventure / Discovery
        - Aerobics / Workout
        - Aggressive
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-MoodList
      x-konfig-is-used-in-successful-response: true
    OauthAccessTokenResponse:
      description: Access token response to client apps
      example:
        access_token: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
        token_type: Bearer
      properties:
        access_token:
          description: Access token that can be used for future requests
          example: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthAccessTokenResponse-properties-access_token
        expires_in:
          description: "Number of seconds before token expires, only present for expiring\
            \ tokens"
          type: integer
        refresh_token:
          description: "A refresh token that can be used to renew the access_token\
            \ when it expires, only present for expiring tokens"
          type: string
        token_type:
          default: Bearer
          description: Type of token
          example: Bearer
          type: string
          x-konfig-original-example: Bearer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthAccessTokenResponse-properties-token_type
        user_token:
          description: "Metadata about the access_token, only present for expiring\
            \ tokens"
          type: string
      required:
      - access_token
      - token_type
      type: object
      x-konfig-original-example:
        access_token: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
        token_type: Bearer
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthAccessTokenResponse
      x-konfig-is-used-in-successful-response: true
    Preview:
      description: Preview information
      example:
        content_type: audio/mp3
        url: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
      properties:
        content_type:
          description: "Content type of the preview, currently audio/mp3"
          enum:
          - audio/mp3
          example: audio/mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Preview-properties-content_type
        url:
          description: Url of the instrument's preview file
          example: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Preview-properties-url
      type: object
      x-konfig-original-example:
        content_type: audio/mp3
        url: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Preview
    Price:
      description: Price
      example:
        local_amount: 12.34
        local_currency: EUR
      properties:
        local_amount:
          description: Floating-point amount of the calculated rev-share price in
            the currency local_currency
          example: 12.34
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price-properties-local_amount
        local_currency:
          description: Currency of the rev-share price that was calculated
          example: EUR
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price-properties-local_currency
      type: object
      x-konfig-original-example:
        local_amount: 12.34
        local_currency: EUR
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
    Recommendation:
      description: Media Recommendation
      example:
        id: 123456789X
      properties:
        id:
          description: Media ID
          example: 123456789X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recommendation-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: 123456789X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recommendation
    RecommendationDataList:
      description: List of recommended images
      example:
        data:
        - id: 123456789X
        - id: "99379946"
        - id: "133918412"
        page: 1
        per_page: 5
        total_count: 12
      properties:
        data:
          description: Recommended images
          items:
            $ref: '#/components/schemas/Recommendation'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - id: 123456789X
        - id: "99379946"
        - id: "133918412"
        page: 1
        per_page: 5
        total_count: 12
      x-konfig-is-used-in-successful-response: true
    RedownloadImage:
      description: Data required to redownload an image
      example:
        size: small
      properties:
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        show_modal:
          deprecated: true
          description: (Deprecated)
          type: boolean
        size:
          description: Size of the image
          enum:
          - small
          - medium
          - huge
          - supersize
          - vector
          example: small
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadImage-properties-size
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      type: object
      x-konfig-original-example:
        size: small
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadImage
    RedownloadVideo:
      description: Data required to redownload a video
      example:
        size: web
      properties:
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        show_modal:
          deprecated: true
          description: (Deprecated)
          type: boolean
        size:
          description: Size of the video
          enum:
          - web
          - sd
          - hd
          - 4k
          example: web
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadVideo-properties-size
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      type: object
      x-konfig-original-example:
        size: web
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadVideo
    RemoveCatalogCollectionItem:
      example:
        id: 123X
      properties:
        id:
          example: 123X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RemoveCatalogCollectionItem-properties-id
      required:
      - id
      type: object
      x-konfig-original-example:
        id: 123X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-RemoveCatalogCollectionItem
    RemoveCatalogCollectionItems:
      example:
        items:
        - id: 123X
      properties:
        items:
          items:
            $ref: '#/components/schemas/RemoveCatalogCollectionItem'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - items
      type: object
      x-konfig-original-example:
        items:
        - id: 123X
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-RemoveCatalogCollectionItems
    SFX:
      description: SFX metadata
      example:
        contributor:
          id: "1234"
        id: 123X
        media_type: sfx
      properties:
        title:
          description: Title of this sound effect
          type: string
        description:
          description: Description of this sound effect
          type: string
        added_date:
          description: Date this sound effect was added to the Shutterstock library
          format: date
          type: string
        affiliate_url:
          description: Affiliate referral link; appears only for registered affiliate
            partners
          type: string
        artist:
          description: Artist of the sound effect
          type: string
        assets:
          $ref: '#/components/schemas/SFXAssets'
        contributor:
          $ref: '#/components/schemas/Contributor'
        duration:
          description: Duration of this sound effect in seconds
          type: number
        id:
          description: Shutterstock ID of this sound effect
          example: 123X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFX-properties-id
        keywords:
          description: List of all keywords for this sound effect
          items:
            description: Keyword for this track
            type: string
          type: array
        media_type:
          description: Media type of this track; should always be "sfx"
          example: sfx
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFX-properties-media_type
        releases:
          description: List of all releases of this sound effect
          items:
            description: Release of this sound effect
            type: string
          type: array
        updated_time:
          description: Time this sound effect was last updated
          format: date-time
          type: string
        url:
          description: ""
          type: string
      required:
      - contributor
      - id
      - media_type
      type: object
      x-konfig-original-example:
        contributor:
          id: "1234"
        id: 123X
        media_type: sfx
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFX
      x-konfig-is-used-in-successful-response: true
    SFXAssetDetails:
      description: Information about a file that is part of an sound effect asset
      example:
        file_size: 123
        url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      properties:
        file_size:
          description: File size of the sound effect
          example: 123
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXAssetDetails-properties-file_size
        url:
          description: URL the sound effect is available at
          example: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXAssetDetails-properties-url
      type: object
      x-konfig-original-example:
        file_size: 123
        url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXAssetDetails
    SFXAssets:
      description: Files that are available as part of an sound effect asset
      example:
        preview_mp3:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
        waveform:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      properties:
        preview_mp3:
          $ref: '#/components/schemas/SFXAssetDetails'
        waveform:
          $ref: '#/components/schemas/SFXAssetDetails'
      type: object
      x-konfig-original-example:
        preview_mp3:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
        waveform:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXAssets
    SFXDataList:
      description: List of sound effects
      example:
        data:
        - contributor:
            id: 1234X
          id: 123X
          media_type: sfx
      properties:
        data:
          description: Sound Effects
          items:
            $ref: '#/components/schemas/SFX'
          type: array
      x-konfig-original-example:
        data:
        - contributor:
            id: 1234X
          id: 123X
          media_type: sfx
      x-konfig-is-used-in-successful-response: true
    SFXSearchResults:
      description: Sound effects search results
      example:
        data:
        - title: Heavy Duty Interface Feedback
          description: "User interface calculations, scanning, thinking, text displayed\
            \ on screen. Screen gak or garble."
          added_date: 2022-07-29T00:00:00.000Z
          assets:
            preview_mp3:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/preview_ecom_ster/heavy-duty-interface-feedback.mp3
            waveform:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/wvfm_img/heavy-duty-interface-feedback.png
          contributor:
            id: "321402911"
          id: 123X
          media_type: sfx
          updated_time: 2022-08-04T15:11:15.711Z
        search_id: e6f84c4c-ffdd-499b-ad89-72c65a896ead
        total_count: 14881
      properties:
        data:
          description: List of tracks
          items:
            $ref: '#/components/schemas/SFX'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        search_id:
          description: ID of the search
          example: e6f84c4c-ffdd-499b-ad89-72c65a896ead
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXSearchResults-properties-search_id
        total_count:
          description: Total count of all results across all pages
          example: 14881
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXSearchResults-properties-total_count
      required:
      - data
      - search_id
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - title: Heavy Duty Interface Feedback
          description: "User interface calculations, scanning, thinking, text displayed\
            \ on screen. Screen gak or garble."
          added_date: 2022-07-29T00:00:00.000Z
          assets:
            preview_mp3:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/preview_ecom_ster/heavy-duty-interface-feedback.mp3
            waveform:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/wvfm_img/heavy-duty-interface-feedback.png
          contributor:
            id: "321402911"
          id: 123X
          media_type: sfx
          updated_time: 2022-08-04T15:11:15.711Z
        search_id: e6f84c4c-ffdd-499b-ad89-72c65a896ead
        total_count: 14881
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SFXSearchResults
      x-konfig-is-used-in-successful-response: true
    SearchEntitiesRequest:
      description: Search entity request data
      example:
        text: Planting flowers is a great way to make springtime more beautiful.
      properties:
        text:
          description: Plain text to extract keywords from
          example: Planting flowers is a great way to make springtime more beautiful.
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchEntitiesRequest-properties-text
      required:
      - text
      type: object
      x-konfig-original-example:
        text: Planting flowers is a great way to make springtime more beautiful.
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchEntitiesRequest
    SearchEntitiesResponse:
      description: The response to a request for keyword analysis
      example:
        keywords:
        - planting
        - flowers
        - springtime
        - beautiful
      properties:
        keywords:
          description: The top keywords from the submitted text
          items:
            type: string
          type: array
      x-konfig-original-example:
        keywords:
        - planting
        - flowers
        - springtime
        - beautiful
      x-konfig-is-used-in-successful-response: true
    SearchImage:
      description: Data required to search for an image
      example:
        license:
        - editorial
        query: cat
        sort: popular
      properties:
        added_date:
          description: Show images added on the specified date
          format: date
          type: string
        added_date_end:
          description: Show images added before the specified date
          format: date
          type: string
        added_date_start:
          description: Show images added on or after the specified date
          format: date
          type: string
        aspect_ratio:
          description: "Show images with the specified aspect ratio, using a positive\
            \ decimal of the width divided by the height, such as 1.7778 for a 16:9\
            \ image"
          type: number
        aspect_ratio_max:
          description: "Show images with the specified aspect ratio or lower, using\
            \ a positive decimal of the width divided by the height, such as 1.7778\
            \ for a 16:9 image"
          minimum: 0
          type: number
        aspect_ratio_min:
          description: "Show images with the specified aspect ratio or higher, using\
            \ a positive decimal of the width divided by the height, such as 1.7778\
            \ for a 16:9 image"
          minimum: 0
          type: number
        authentic:
          description: Show only authentic images
          type: boolean
        category:
          description: Show images with the specified Shutterstock-defined category;
            specify a category name or ID
          type: string
        color:
          description: Specify either a hexadecimal color in the format '4F21EA' or
            'grayscale'; the API returns images that use similar colors
          type: string
        contributor:
          description: "Show images with the specified contributor names or IDs, allows\
            \ multiple"
          items:
            type: string
          type: array
        contributor_country: {}
        fields:
          description: Fields to display in the response; see the documentation for
            the fields parameter in the overview section
          type: string
          uniqueItems: true
        height:
          description: (Deprecated; use height_from and height_to instead) Show images
            with the specified height
          type: integer
        height_from:
          description: "Show images with the specified height or larger, in pixels"
          type: integer
        height_to:
          description: "Show images with the specified height or smaller, in pixels"
          type: integer
        image_type:
          description: Show images of the specified type
          items:
            enum:
            - photo
            - illustration
            - vector
            type: string
          type: array
        keyword_safe_search:
          default: true
          description: Hide results with potentially unsafe keywords
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-keyword_safe_search
        language:
          $ref: '#/components/schemas/Language'
        license:
          default:
          - commercial
          description: Show only images with the specified license
          example:
          - commercial
          items:
            enum:
            - commercial
            - editorial
            - enhanced
            type: string
          type: array
          x-konfig-original-example:
          - commercial
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-license
        model:
          description: Show image results with the specified model IDs
          items:
            type: string
          type: array
        orientation:
          description: Show image results with horizontal or vertical orientation
          enum:
          - horizontal
          - vertical
          type: string
        page:
          default: 1
          description: Page number
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-page
        people_age:
          description: Show images that feature people of the specified age category
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        people_ethnicity:
          description: "Show images with people of the specified ethnicities, or start\
            \ with NOT to show images without those ethnicities"
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            - NOT african
            - NOT african_american
            - NOT black
            - NOT brazilian
            - NOT chinese
            - NOT caucasian
            - NOT east_asian
            - NOT hispanic
            - NOT japanese
            - NOT middle_eastern
            - NOT native_american
            - NOT pacific_islander
            - NOT south_asian
            - NOT southeast_asian
            - NOT other
            type: string
          type: array
        people_gender:
          description: Show images with people of the specified gender
          enum:
          - male
          - female
          - both
          type: string
        people_model_released:
          description: Show images of people with a signed model release
          type: boolean
        people_number:
          description: Show images with the specified number of people
          maximum: 4
          minimum: 0
          type: integer
        per_page:
          default: 20
          description: Number of results per page
          example: 20
          maximum: 20
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-per_page
        query:
          description: One or more search terms separated by spaces; you can use NOT
            to filter out images that match a term
          example: cat
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-query
        region:
          format: country-code-2
          type: string
        safe:
          default: true
          description: Enable or disable safe search
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-safe
        sort:
          default: popular
          description: Sort by
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-sort
        spellcheck_query:
          default: true
          description: Spellcheck the search query and return results on suggested
            spellings
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-spellcheck_query
        view:
          default: minimal
          description: Amount of detail to render in the response
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage-properties-view
        width:
          description: (Deprecated; use width_from and width_to instead) Show images
            with the specified width
          type: integer
        width_from:
          description: "Show images with the specified width or larger, in pixels"
          type: integer
        width_to:
          description: "Show images with the specified width or smaller, in pixels"
          type: integer
      type: object
      x-konfig-original-example:
        license:
        - editorial
        query: cat
        sort: popular
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchImage
    SfxUrl:
      description: Sound effect license URL object
      example:
        $ref: '#/components/schemas/Url/example'
      properties:
        url:
          description: "URL that can be used to download the unwatermarked, licensed\
            \ asset"
          type: string
      required:
      - url
      type: object
      x-konfig-original-example:
        $ref: '#/components/schemas/Url/example'
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SfxUrl
      x-konfig-is-used-in-successful-response: true
    ShortsLoopsStems:
      description: "Links for Shorts, Loops and Stems previews"
      example:
        loops:
          loop_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_1/loop_preview_1.mp3
          loop_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_2/loop_preview_2.mp3
        shorts:
          short_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_1/short_preview_1.mp3
          short_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_2/short_preview_2.mp3
        stems:
          stem_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
          stem_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
      properties:
        loops:
          additionalProperties:
            $ref: '#/components/schemas/ShortsLoopsStems_loops_value'
          type: object
        shorts:
          additionalProperties:
            $ref: '#/components/schemas/ShortsLoopsStems_loops_value'
          type: object
        stems:
          additionalProperties:
            $ref: '#/components/schemas/ShortsLoopsStems_loops_value'
          type: object
      type: object
      x-konfig-original-example:
        loops:
          loop_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_1/loop_preview_1.mp3
          loop_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_2/loop_preview_2.mp3
        shorts:
          short_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_1/short_preview_1.mp3
          short_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_2/short_preview_2.mp3
        stems:
          stem_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
          stem_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ShortsLoopsStems
    Subscription:
      description: Subscription information
      example:
        description: Annual Subscription
        allotment:
          downloads_left: 5
          downloads_limit: 10
          end_time: 2020-05-29T17:10:22.000Z
          start_time: 2020-05-29T17:10:22.000Z
        asset_type: images
        expiration_time: 2020-05-29T17:10:22.000Z
        formats:
        - description: Small
          format: jpg
          media_type: image
          min_resolution: 500
          size: small
        - description: Med
          format: jpg
          media_type: image
          min_resolution: 1000
          size: medium
        - description: Vector
          format: eps
          media_type: image
          size: vector
        id: s8906043
        license: standard
        metadata: {}
      properties:
        description:
          description: Description of the subscription
          example: Annual Subscription
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription-properties-description
        allotment:
          $ref: '#/components/schemas/Allotment'
        asset_type:
          description: "Identifier for the type of assets associated with this subscription\
            \ (images, videos, audio, editorial)"
          example: images
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription-properties-asset_type
        expiration_time:
          description: Date the subscription ends
          example: 2020-05-29T17:10:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription-properties-expiration_time
        formats:
          description: List of formats that are licensable for the subscription
          items:
            $ref: '#/components/schemas/LicenseFormat'
          type: array
        id:
          description: Unique internal identifier for the subscription
          example: s8906043
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription-properties-id
        license:
          description: Internal identifier for the type of subscription
          example: standard
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription-properties-license
        metadata:
          description: Subscription metadata; different for each customer
          example:
            client:
              is_required: false
              name: purchase_order
            job:
              is_required: true
              name: client_name
            other:
              is_required: false
              name: custom_value
          type: object
          x-konfig-original-example:
            client:
              is_required: false
              name: purchase_order
            job:
              is_required: true
              name: client_name
            other:
              is_required: false
              name: custom_value
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubscriptionMetadata
        price_per_download:
          $ref: '#/components/schemas/Price'
      required:
      - id
      type: object
      x-konfig-original-example:
        description: Annual Subscription
        allotment:
          downloads_left: 5
          downloads_limit: 10
          end_time: 2020-05-29T17:10:22.000Z
          start_time: 2020-05-29T17:10:22.000Z
        asset_type: images
        expiration_time: 2020-05-29T17:10:22.000Z
        formats:
        - description: Small
          format: jpg
          media_type: image
          min_resolution: 500
          size: small
        - description: Med
          format: jpg
          media_type: image
          min_resolution: 1000
          size: medium
        - description: Vector
          format: eps
          media_type: image
          size: vector
        id: s8906043
        license: standard
        metadata: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Subscription
    SubscriptionDataList:
      description: List of subscriptions
      example:
        data:
        - description: Annual Subscription
          allotment:
            downloads_left: 5
            downloads_limit: 10
            end_time: 2020-05-29T17:10:22.000Z
            start_time: 2020-05-29T17:10:22.000Z
          asset_type: images
          expiration_time: 2020-05-29T17:10:22.000Z
          formats:
          - description: Small
            format: jpg
            media_type: image
            min_resolution: 500
            size: small
          - description: Med
            format: jpg
            media_type: image
            min_resolution: 1000
            size: medium
          - description: Vector
            format: eps
            media_type: image
            size: vector
          id: s8906043X
          license: standard
          metadata: {}
        page: 1
        per_page: 5
        total_count: 123455
      properties:
        data:
          description: Subscriptions retrieved from this user
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: Optional error message
          type: string
        page:
          description: Current page that is being queried
          type: integer
        per_page:
          description: Amount of subscriptions to show per page
          type: integer
        total_count:
          description: Total number of subscriptions for this user
          type: integer
      x-konfig-original-example:
        data:
        - description: Annual Subscription
          allotment:
            downloads_left: 5
            downloads_limit: 10
            end_time: 2020-05-29T17:10:22.000Z
            start_time: 2020-05-29T17:10:22.000Z
          asset_type: images
          expiration_time: 2020-05-29T17:10:22.000Z
          formats:
          - description: Small
            format: jpg
            media_type: image
            min_resolution: 500
            size: small
          - description: Med
            format: jpg
            media_type: image
            min_resolution: 1000
            size: medium
          - description: Vector
            format: eps
            media_type: image
            size: vector
          id: s8906043X
          license: standard
          metadata: {}
        page: 1
        per_page: 5
        total_count: 123455
      x-konfig-is-used-in-successful-response: true
    SubscriptionMetadata:
      description: Subscription metadata; different for each customer
      example:
        client:
          is_required: false
          name: purchase_order
        job:
          is_required: true
          name: client_name
        other:
          is_required: false
          name: custom_value
      type: object
      x-konfig-original-example:
        client:
          is_required: false
          name: purchase_order
        job:
          is_required: true
          name: client_name
        other:
          is_required: false
          name: custom_value
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubscriptionMetadata
    Suggestions:
      description: List of search suggestions
      example:
        data:
        - cat scan
        - cats and dogs
        - cats playing
        - catsuit
        - cat silhouette
        - catskills
        - cats eyes
        - cat sitting
        - cat sleeping
        - cats eye
      properties:
        data:
          description: Search suggestions
          items:
            type: string
          type: array
      type: object
      x-konfig-original-example:
        data:
        - cat scan
        - cats and dogs
        - cats playing
        - catsuit
        - cat silhouette
        - catskills
        - cats eyes
        - cat sitting
        - cat sleeping
        - cats eye
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Suggestions
      x-konfig-is-used-in-successful-response: true
    TestEcho:
      description: Text to echo in the response
      example:
        text: Test string
      properties:
        text:
          example: Test string
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestEcho-properties-text
      type: object
      x-konfig-original-example:
        text: Test string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestEcho
      x-konfig-is-used-in-successful-response: true
    TestValidate:
      description: Validation results
      example:
        header:
          user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML,\
            \ like Gecko) Chrome/51.0.2704.103 Safari/537.36"
        query:
          id: 123456
          tag:
          - Test string
      properties:
        header:
          $ref: '#/components/schemas/TestValidateHeader'
        query:
          $ref: '#/components/schemas/TestValidateQuery'
      type: object
      x-konfig-original-example:
        header:
          user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML,\
            \ like Gecko) Chrome/51.0.2704.103 Safari/537.36"
        query:
          id: 123456
          tag:
          - Test string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestValidate
      x-konfig-is-used-in-successful-response: true
    TestValidateHeader:
      description: Validation results
      example:
        user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
          \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
      properties:
        user-agent:
          description: User agent to expect in the response
          example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestValidateHeader-properties-user-agent
      type: object
      x-konfig-original-example:
        user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
          \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestValidateHeader
    TestValidateQuery:
      description: Validation results
      example:
        id: 123456
        tag:
        - string
      properties:
        id:
          description: Integer ID that was passed in the request
          example: 123456
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestValidateQuery-properties-id
        tag:
          description: List of tags that were passed in the request
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-konfig-original-example:
        id: 123456
        tag:
        - string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TestValidateQuery
    Thumbnail:
      description: Image thumbnail information
      example:
        height: 100
        url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
        width: 150
      properties:
        height:
          description: Height in pixels of the image thumbnail
          example: 105
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Thumbnail-properties-height
        url:
          description: Direct URL to the image
          example: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Thumbnail-properties-url
        width:
          description: Width in pixels of the image thumbnail
          example: 170
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Thumbnail-properties-width
      required:
      - height
      - url
      - width
      type: object
      x-konfig-original-example:
        height: 100
        url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
        width: 150
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Thumbnail
    UpdateCatalogCollection:
      example:
        cover_asset:
          id: 123X
        name: My Collection
        visibility: public
      properties:
        cover_asset:
          $ref: '#/components/schemas/UpdateCatalogCollection_cover_asset'
        name:
          example: My Collection
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-name
        visibility:
          enum:
          - private
          - public
          example: public
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-visibility
      type: object
      x-konfig-original-example:
        cover_asset:
          id: 123X
        name: My Collection
        visibility: public
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection
    UpdatedMedia:
      description: Information about a piece of updated media
      example:
        id: 123456789X
        updated_time: 2020-05-29T17:10:22.000Z
        updates:
        - addition
        - edit
      properties:
        id:
          description: ID of the media
          example: 123456789X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdatedMedia-properties-id
        updated_time:
          description: Date that the media was updated
          example: 2020-05-29T17:10:22Z
          format: date-time
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdatedMedia-properties-updated_time
        updates:
          description: Types of updates that were made to the piece of media
          items:
            type: string
          type: array
      required:
      - id
      - updated_time
      - updates
      type: object
      x-konfig-original-example:
        id: 123456789X
        updated_time: 2020-05-29T17:10:22.000Z
        updates:
        - addition
        - edit
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdatedMedia
    UpdatedMediaDataList:
      description: List of updated media
      example:
        data:
        - id: 123456789X
          updated_time: 2020-05-29T17:10:22.000Z
          updates:
          - addition
          - edit
        page: 1
        per_page: 5
        total_count: 13
      properties:
        data:
          description: Updated media items
          items:
            $ref: '#/components/schemas/UpdatedMedia'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - id: 123456789X
          updated_time: 2020-05-29T17:10:22.000Z
          updates:
          - addition
          - edit
        page: 1
        per_page: 5
        total_count: 13
      x-konfig-is-used-in-successful-response: true
    Url:
      description: URL object
      example:
        url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
      properties:
        url:
          description: "URL that can be used to download the unwatermarked, licensed\
            \ asset"
          example: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Url-properties-url
      required:
      - url
      type: object
      x-konfig-original-example:
        url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Url
      x-konfig-is-used-in-successful-response: true
    Urls:
      description: List of URLs
      example:
        urls:
        - string
      properties:
        urls:
          description: URLs
          items:
            type: string
          type: array
      required:
      - urls
      type: object
      x-konfig-original-example:
        urls:
        - string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Urls
    UserDetails:
      description: User details
      example:
        contributor_id: "212"
        first_name: John
        full_name: John Doe
        id: "101782699"
        language: es
        last_name: Doe
        username: jdoe
      properties:
        contributor_id:
          description: "Unique internal identifier of the user, as a contributor"
          example: "212"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-contributor_id
        customer_id:
          description: "Unique internal identifier of the user, as a purchaser"
          type: string
        email:
          description: Email address of the user
          type: string
        first_name:
          description: First name of the user
          example: John
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-first_name
        full_name:
          description: "Full name including first, middle, and last name of the user"
          example: John Doe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-full_name
        id:
          description: "Unique internal identifier for the user, not tied to contributor\
            \ or purchasing customer"
          example: "101782699"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-id
        is_premier:
          description: "True if the user has access to the Premier collection, false\
            \ otherwise"
          type: boolean
        is_premier_parent:
          description: True if the user has access to the Premier collection and also
            has child users
          type: boolean
        language:
          description: Main language of the user account
          example: es
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-language
        last_name:
          description: Last name of the user
          example: Doe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-last_name
        only_enhanced_license:
          description: "True if the user has an enterprise license, false otherwise"
          type: boolean
        only_sensitive_use:
          description: "True if the user has access to sensitive use only, false otherwise"
          type: boolean
        organization_id:
          description: "Unique internal identifier for the user's organization, specific\
            \ to Premier users"
          type: string
        premier_permissions:
          description: List of permissions allowed through the Premier client
          items:
            type: string
          type: array
        username:
          description: User name associated to the user
          example: jdoe
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails-properties-username
      type: object
      x-konfig-original-example:
        contributor_id: "212"
        first_name: John
        full_name: John Doe
        id: "101782699"
        language: es
        last_name: Doe
        username: jdoe
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserDetails
      x-konfig-is-used-in-successful-response: true
    Video:
      description: Information about a video
      example:
        description: "Camera follows hipster millennial young woman in orange jacket\
          \ running up on top of mountain summit at sunset, jumps on top of rocks,\
          \ raises arms into air, happy and drunk on life, youth and happiness"
        added_date: 2019-07-13T00:00:00.000Z
        aspect: 1.778
        aspect_ratio: 969
        assets:
          hd:
            display_name: Original HD
            file_size: 110359552
            format: avc1
            fps: 29.97
            height: 1080
            is_licensable: true
            width: 1920
          preview_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          preview_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          preview_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          sd:
            display_name: Standard Definition MPEG
            file_size: 4577280
            format: mov
            fps: 29.97
            height: 480
            is_licensable: true
            width: 852
          thumb_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_jpgs:
            urls:
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          thumb_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          web:
            display_name: Low Resolution MPEG
            file_size: 1291264
            format: mov
            fps: 29.97
            height: 240
            is_licensable: true
            width: 426
        categories:
        - id: "12"
          name: Nature
        - id: "13"
          name: People
        contributor:
          id: "4411978"
        duration: 14.081
        has_model_release: true
        has_property_release: false
        id: "1033184651"
        is_adult: false
        is_editorial: false
        keywords:
        - active
        - activity
        - adventure
        - arms
        - backpacker
        - carefree
        - celebrating
        - cliff
        - climate
        - cloud
        - discovery
        - escape
        - explore
        - extreme
        - free
        - freedom
        - girl
        - happy
        - high
        - hiker
        - hiking
        - hill
        - independent
        - inspiration
        - landscape
        - leisure
        - lifestyle
        - mountain
        - mountains
        - nature
        - outdoor
        - peak
        - person
        - rock
        - scenic
        - sky
        - sport
        - success
        - summer
        - summit
        - sun
        - sunset
        - top
        - tourism
        - travel
        - trekking
        - vacation
        - view
        - winning
        - woman
        media_type: video
        models:
        - id: "33233810"
        - id: "25487168"
      properties:
        description:
          description: Description of this video
          example: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-description
        added_date:
          description: Date this video was added to the Shutterstock library
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-added_date
        affiliate_url:
          description: Affiliate referral link; appears only for registered affiliate
            partners
          format: uri
          type: string
        aspect:
          description: "Aspect ratio of this video in decimal format, such as 0.6667"
          example: 1.778
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-aspect
        aspect_ratio:
          description: "Aspect ratio of the video as a ratio, such as 16:9"
          example: "969"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-aspect_ratio
        assets:
          $ref: '#/components/schemas/VideoAssets'
        categories:
          description: List of categories
          items:
            $ref: '#/components/schemas/Category'
          type: array
        contributor:
          $ref: '#/components/schemas/Contributor'
        duration:
          description: "Duration of this video, in seconds"
          example: 14.081
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-duration
        has_model_release:
          description: Whether or not this video has been released for use by the
            model appearing in it
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-has_model_release
        has_property_release:
          description: Whether or not this video has received a release to show the
            landmark or property appearing in it
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-has_property_release
        id:
          description: ID of the video
          example: "1033184651"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-id
        is_adult:
          description: Whether or not this video contains adult content
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-is_adult
        is_editorial:
          description: Whether or not this video is editorial content
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-is_editorial
        keywords:
          description: Keywords associated with the content of this video
          items:
            type: string
          type: array
        media_type:
          description: "Media type of this video, should always be \"video\""
          example: video
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video-properties-media_type
        models:
          description: List of models in this video
          items:
            $ref: '#/components/schemas/Model'
          type: array
        url:
          description: Link to video information page; included only for certain accounts
          type: string
      required:
      - contributor
      - id
      - media_type
      type: object
      x-konfig-original-example:
        description: "Camera follows hipster millennial young woman in orange jacket\
          \ running up on top of mountain summit at sunset, jumps on top of rocks,\
          \ raises arms into air, happy and drunk on life, youth and happiness"
        added_date: 2019-07-13T00:00:00.000Z
        aspect: 1.778
        aspect_ratio: 969
        assets:
          hd:
            display_name: Original HD
            file_size: 110359552
            format: avc1
            fps: 29.97
            height: 1080
            is_licensable: true
            width: 1920
          preview_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          preview_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          preview_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          sd:
            display_name: Standard Definition MPEG
            file_size: 4577280
            format: mov
            fps: 29.97
            height: 480
            is_licensable: true
            width: 852
          thumb_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_jpgs:
            urls:
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          thumb_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          web:
            display_name: Low Resolution MPEG
            file_size: 1291264
            format: mov
            fps: 29.97
            height: 240
            is_licensable: true
            width: 426
        categories:
        - id: "12"
          name: Nature
        - id: "13"
          name: People
        contributor:
          id: "4411978"
        duration: 14.081
        has_model_release: true
        has_property_release: false
        id: "1033184651"
        is_adult: false
        is_editorial: false
        keywords:
        - active
        - activity
        - adventure
        - arms
        - backpacker
        - carefree
        - celebrating
        - cliff
        - climate
        - cloud
        - discovery
        - escape
        - explore
        - extreme
        - free
        - freedom
        - girl
        - happy
        - high
        - hiker
        - hiking
        - hill
        - independent
        - inspiration
        - landscape
        - leisure
        - lifestyle
        - mountain
        - mountains
        - nature
        - outdoor
        - peak
        - person
        - rock
        - scenic
        - sky
        - sport
        - success
        - summer
        - summit
        - sun
        - sunset
        - top
        - tourism
        - travel
        - trekking
        - vacation
        - view
        - winning
        - woman
        media_type: video
        models:
        - id: "33233810"
        - id: "25487168"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Video
      x-konfig-is-used-in-successful-response: true
    VideoAssets:
      description: Video asset information
      example:
        hd:
          display_name: Original HD
          file_size: 110359552
          format: avc1
          fps: 29.97
          height: 1080
          is_licensable: true
          width: 1920
        original_filename: 123.mp4
        preview_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        preview_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        preview_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        sd:
          display_name: Standard Definition MPEG
          file_size: 4577280
          format: mov
          fps: 29.97
          height: 480
          is_licensable: true
          width: 852
        thumb_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_jpgs:
          urls:
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        thumb_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        web:
          display_name: Low Resolution MPEG
          file_size: 1291264
          format: mov
          fps: 29.97
          height: 240
          is_licensable: true
          width: 426
      properties:
        "4k":
          $ref: '#/components/schemas/VideoSizeDetails'
        hd:
          $ref: '#/components/schemas/VideoSizeDetails'
        preview_jpg:
          $ref: '#/components/schemas/Url'
        preview_mp4:
          $ref: '#/components/schemas/Url'
        preview_webm:
          $ref: '#/components/schemas/Url'
        sd:
          $ref: '#/components/schemas/VideoSizeDetails'
        thumb_jpg:
          $ref: '#/components/schemas/Url'
        thumb_jpgs:
          $ref: '#/components/schemas/Urls'
        thumb_mp4:
          $ref: '#/components/schemas/Url'
        thumb_webm:
          $ref: '#/components/schemas/Url'
        web:
          $ref: '#/components/schemas/VideoSizeDetails'
      type: object
      x-konfig-original-example:
        hd:
          display_name: Original HD
          file_size: 110359552
          format: avc1
          fps: 29.97
          height: 1080
          is_licensable: true
          width: 1920
        original_filename: 123.mp4
        preview_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        preview_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        preview_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        sd:
          display_name: Standard Definition MPEG
          file_size: 4577280
          format: mov
          fps: 29.97
          height: 480
          is_licensable: true
          width: 852
        thumb_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_jpgs:
          urls:
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        thumb_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        web:
          display_name: Low Resolution MPEG
          file_size: 1291264
          format: mov
          fps: 29.97
          height: 240
          is_licensable: true
          width: 426
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoAssets
    VideoCollectionItemDataList:
      description: List of items in a collection
      example:
        data:
        - added_time: 2016-08-18T22:52:59.000Z
          id: 76688182X
          media_type: video
        - added_time: 2016-08-18T22:52:59.000Z
          id: 40005859X
          media_type: video
        page: 1
        per_page: 100
      properties:
        data:
          description: Assets in the collection
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: The current page of results
          type: integer
        per_page:
          description: The number of results per page
          type: integer
        total_count:
          description: The total number of results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - added_time: 2016-08-18T22:52:59.000Z
          id: 76688182X
          media_type: video
        - added_time: 2016-08-18T22:52:59.000Z
          id: 40005859X
          media_type: video
        page: 1
        per_page: 100
      x-konfig-is-used-in-successful-response: true
    VideoDataList:
      description: List of videos
      example:
        data:
        - description: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          added_date: 2019-07-13T00:00:00.000Z
          aspect: 1.778
          aspect_ratio: 969
          assets:
            hd:
              display_name: Original HD
              file_size: 110359552
              format: avc1
              fps: 29.97
              height: 1080
              is_licensable: true
              width: 1920
            preview_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            preview_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            preview_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            sd:
              display_name: Standard Definition MPEG
              file_size: 4577280
              format: mov
              fps: 29.97
              height: 480
              is_licensable: true
              width: 852
            thumb_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_jpgs:
              urls:
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            thumb_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            web:
              display_name: Low Resolution MPEG
              file_size: 1291264
              format: mov
              fps: 29.97
              height: 240
              is_licensable: true
              width: 426
          categories:
          - id: 12X
            name: Nature
          - id: 13X
            name: People
          contributor:
            id: 4411978X
          duration: 14.081
          has_model_release: true
          has_property_release: false
          id: 1033184651X
          is_adult: false
          is_editorial: false
          keywords:
          - active
          - activity
          - adventure
          - arms
          - backpacker
          - carefree
          - celebrating
          - cliff
          - climate
          - cloud
          - discovery
          - escape
          - explore
          - extreme
          - free
          - freedom
          - girl
          - happy
          - high
          - hiker
          - hiking
          - hill
          - independent
          - inspiration
          - landscape
          - leisure
          - lifestyle
          - mountain
          - mountains
          - nature
          - outdoor
          - peak
          - person
          - rock
          - scenic
          - sky
          - sport
          - success
          - summer
          - summit
          - sun
          - sunset
          - top
          - tourism
          - travel
          - trekking
          - vacation
          - view
          - winning
          - woman
          media_type: video
          models:
          - id: 33233810X
          - id: 25487168X
        page: 1
        per_page: 5
        total_count: 25
      properties:
        data:
          description: Videos
          items:
            $ref: '#/components/schemas/Video'
          type: array
        errors:
          description: Error list; appears only if there was an error
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          type: integer
        per_page:
          description: Number of results per page
          type: integer
        total_count:
          description: Total count of all results across all pages
          type: integer
      x-konfig-original-example:
        data:
        - description: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          added_date: 2019-07-13T00:00:00.000Z
          aspect: 1.778
          aspect_ratio: 969
          assets:
            hd:
              display_name: Original HD
              file_size: 110359552
              format: avc1
              fps: 29.97
              height: 1080
              is_licensable: true
              width: 1920
            preview_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            preview_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            preview_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            sd:
              display_name: Standard Definition MPEG
              file_size: 4577280
              format: mov
              fps: 29.97
              height: 480
              is_licensable: true
              width: 852
            thumb_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_jpgs:
              urls:
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
              - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            thumb_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            web:
              display_name: Low Resolution MPEG
              file_size: 1291264
              format: mov
              fps: 29.97
              height: 240
              is_licensable: true
              width: 426
          categories:
          - id: 12X
            name: Nature
          - id: 13X
            name: People
          contributor:
            id: 4411978X
          duration: 14.081
          has_model_release: true
          has_property_release: false
          id: 1033184651X
          is_adult: false
          is_editorial: false
          keywords:
          - active
          - activity
          - adventure
          - arms
          - backpacker
          - carefree
          - celebrating
          - cliff
          - climate
          - cloud
          - discovery
          - escape
          - explore
          - extreme
          - free
          - freedom
          - girl
          - happy
          - high
          - hiker
          - hiking
          - hill
          - independent
          - inspiration
          - landscape
          - leisure
          - lifestyle
          - mountain
          - mountains
          - nature
          - outdoor
          - peak
          - person
          - rock
          - scenic
          - sky
          - sport
          - success
          - summer
          - summit
          - sun
          - sunset
          - top
          - tourism
          - travel
          - trekking
          - vacation
          - view
          - winning
          - woman
          media_type: video
          models:
          - id: 33233810X
          - id: 25487168X
        page: 1
        per_page: 5
        total_count: 25
      x-konfig-is-used-in-successful-response: true
    VideoPreviewUrl:
      description: Video preview information
      example:
        url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
      properties:
        url:
          description: Direct URL to the image
          example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoPreviewUrl-properties-url
      required:
      - url
      type: object
      x-konfig-original-example:
        url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoPreviewUrl
    VideoSearchResults:
      description: Video search results
      example:
        data:
        - description: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          aspect: 1.778
          aspect_ratio: 969
          assets:
            preview_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            preview_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            preview_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            thumb_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            thumb_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          contributor:
            id: 4411978X
          duration: 14.081
          has_model_release: true
          id: 1033184651X
          media_type: video
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123
      properties:
        data:
          description: List of videos
          items:
            $ref: '#/components/schemas/Video'
          type: array
        message:
          description: "Server-generated message, if any"
          type: string
        page:
          description: Current page that is returned
          example: 1
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSearchResults-properties-page
        per_page:
          description: Number of results per page
          example: 5
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSearchResults-properties-per_page
        search_id:
          description: Unique identifier for the search request
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSearchResults-properties-search_id
        total_count:
          description: Total count of all results across all pages
          example: 123
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSearchResults-properties-total_count
      required:
      - data
      - search_id
      - total_count
      type: object
      x-konfig-original-example:
        data:
        - description: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          aspect: 1.778
          aspect_ratio: 969
          assets:
            preview_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            preview_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            preview_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            thumb_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            thumb_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          contributor:
            id: 4411978X
          duration: 14.081
          has_model_release: true
          id: 1033184651X
          media_type: video
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSearchResults
      x-konfig-is-used-in-successful-response: true
    VideoSizeDetails:
      description: Video asset information
      example:
        display_name: Original HD
        file_size: 110359552
        format: avc1
        fps: 29.97
        height: 1080
        is_licensable: true
        width: 1920
      properties:
        display_name:
          description: Display name of this video size
          example: HD
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-display_name
        file_size:
          description: File size (in bytes) of this video size
          example: 82233387
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-file_size
        format:
          description: Format of this video size
          example: avc1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-format
        fps:
          description: Frames per second of this video size
          example: 30
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-fps
        height:
          description: Height of this video size
          example: 1080
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-height
        is_licensable:
          description: Whether or not videos can be licensed in this video size
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-is_licensable
        width:
          description: Width of this video size
          example: 1080
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails-properties-width
      type: object
      x-konfig-original-example:
        display_name: Original HD
        file_size: 110359552
        format: avc1
        fps: 29.97
        height: 1080
        is_licensable: true
        width: 1920
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-VideoSizeDetails
    OauthGetUserAccessTokenRequest:
      example:
        refresh_token: refresh_token
        expires: false
        code: code
        grant_type: authorization_code
        realm: customer
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          description: Client ID (Consumer Key) of your application
          type: string
        client_secret:
          description: Client Secret (Consumer Secret) of your application
          type: string
        code:
          description: Response code from the /oauth/authorize flow; required if grant_type=authorization_code
          type: string
        expires:
          default: false
          description: "Whether or not the token expires, expiring tokens come with\
            \ a refresh_token to renew the access_token"
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-expires
        grant_type:
          description: "Grant type: authorization_code generates user tokens, client_credentials\
            \ generates short-lived client grants"
          enum:
          - authorization_code
          - client_credentials
          - refresh_token
          type: string
        realm:
          default: customer
          description: User type to be authorized (usually 'customer')
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-original-example: customer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-realm
        refresh_token:
          description: Pass this along with grant_type=refresh_token to get a fresh
            access token
          type: string
      required:
      - client_id
      - grant_type
      type: object
    OauthGetUserAccessTokenRequest1:
      properties:
        client_id:
          description: Client ID (Consumer Key) of your application
          type: string
        client_secret:
          description: Client Secret (Consumer Secret) of your application
          type: string
        code:
          description: Response code from the /oauth/authorize flow; required if grant_type=authorization_code
          type: string
        expires:
          default: "false"
          description: "Whether or not the token expires, expiring tokens come with\
            \ a refresh_token to renew the access_token"
          enum:
          - "true"
          - "false"
          example: "false"
          type: string
          x-konfig-original-example: "false"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest1-properties-expires
        grant_type:
          description: "Grant type: authorization_code generates user tokens, client_credentials\
            \ generates short-lived client grants"
          enum:
          - authorization_code
          - client_credentials
          - refresh_token
          type: string
        realm:
          default: customer
          description: User type to be authorized (usually 'customer')
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-original-example: customer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest1-properties-realm
        refresh_token:
          description: Pass this along with grant_type=refresh_token to get a fresh
            access token
          type: string
      required:
      - client_id
      - grant_type
      type: object
    konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-3-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-4-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-1-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-get-parameters-1-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-collections-get-parameters-0-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-collections-get-parameters-1-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-4-schema:
      example: oldest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-licenses-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-licenses-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-search-get-parameters-11-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-search-get-parameters-12-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-search-get-parameters-15-schema:
      example: desc
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-search-get-parameters-17-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-search-get-parameters-19-schema:
      example: premier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-audio-id-get-parameters-1-schema:
      example: full
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-15-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-17-schema-items:
      example: commercial
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-20-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-21-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-28-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-29-schema:
      example: popular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-30-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-bulk_search-images-post-parameters-31-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-collections-get-parameters-0-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-collections-get-parameters-1-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-collections-get-parameters-2-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-collections-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-search-get-parameters-0-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-search-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-search-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-search-get-parameters-4-schema:
      example:
      - "123456"
      - "456789"
      - "13579"
      items:
        example: "123456"
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-catalog-search-get-parameters-5-schema:
      example:
      - image
      - editorial-image
      items:
        example: image
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-1-schema:
      example:
      - commercial
      items:
        example: commercial
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-2-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-4-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-5-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-6-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-1-schema:
      example:
      - commercial
      items:
        example: commercial
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-2-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-4-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-5-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-6-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-1-schema:
      example: relevant
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-7-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-6-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-9-schema:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-search-get-parameters-1-schema:
      example: relevant
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-search-get-parameters-7-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-updated-get-parameters-6-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-updated-get-parameters-9-schema:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-1-schema:
      example: relevant
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-9-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-get-parameters-1-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-featured-get-parameters-2-schema:
      example: 1x
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-featured-id-get-parameters-2-schema:
      example: 1x
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-4-schema:
      example: oldest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-licenses-post-parameters-2-schema:
      example: huge
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-recommendations-get-parameters-1-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-recommendations-get-parameters-2-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-6-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-19-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-21-schema-items:
      example: commercial
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-24-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-25-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-33-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-34-schema:
      example: popular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-35-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-get-parameters-36-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-search-suggestions-get-parameters-1-schema:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-updated-get-parameters-3-schema:
      example: 1 HOUR
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-updated-get-parameters-4-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-updated-get-parameters-5-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-updated-get-parameters-6-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-id-get-parameters-2-schema:
      example: full
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-id-similar-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-id-similar-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-images-id-similar-get-parameters-4-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-1-schema:
      example: customer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-4-schema:
      example: user.view
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-get-parameters-1-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-9-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-10-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-search-get-parameters-6-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-search-get-parameters-7-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-search-get-parameters-9-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-search-get-parameters-10-schema:
      example: popular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-search-get-parameters-11-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-sfx-id-get-parameters-2-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-test-get-parameters-0-schema:
      example: ok
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-get-parameters-1-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-get-parameters-0-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-get-parameters-1-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-1-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-4-schema:
      example: oldest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-get-parameters-4-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-licenses-post-parameters-1-schema:
      example: web
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-13-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-15-schema-items:
      example: commercial
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-17-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-18-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-26-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-27-schema:
      example: popular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-get-parameters-28-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-search-suggestions-get-parameters-1-schema:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-updated-get-parameters-2-schema:
      example: 1 HOUR
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-updated-get-parameters-3-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-updated-get-parameters-4-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-updated-get-parameters-5-schema:
      example: newest
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-id-get-parameters-2-schema:
      example: full
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-4-schema:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails:
      example:
        client_id: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
        customer_id: "123456789"
        expires_in: 3600
        realm: customer
        scopes:
        - collections.edit
        - collections.view
        - licenses.create
        - licenses.view
        - purchases.view
        - user.view
        user_id: "123456789"
        username: jdoe
      properties:
        client_id:
          example: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
          type: string
        customer_id:
          example: "123456789"
          type: string
        expires_in:
          example: 3600
          type: number
        realm:
          example: customer
          type: string
        scopes:
          items:
            example: collections.edit
            type: string
          type: array
        user_id:
          example: "123456789"
          type: string
        username:
          example: jdoe
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-client_id:
      example: c456b-26230-fa8ed-d19ab-05ce2-bf0aa
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-customer_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-expires_in:
      example: 3600
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-realm:
      example: customer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-user_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccessTokenDetails-properties-username:
      example: jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Album:
      example:
        title: Happy Music
        id: "1234567"
      properties:
        title:
          example: Happy Music
          type: string
        id:
          example: "1234567"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Album-properties-title:
      example: Happy Music
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Album-properties-id:
      example: "1234567"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Allotment:
      example:
        downloads_left: 5
        downloads_limit: 10
        end_time: 2020-05-29T17:10:22.000Z
        start_time: 2020-05-29T17:10:22.000Z
      properties:
        downloads_left:
          example: 5
          type: number
        downloads_limit:
          example: 10
          type: number
        end_time:
          example: 2020-05-29T17:10:22.000Z
          type: string
        start_time:
          example: 2020-05-29T17:10:22.000Z
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Allotment-properties-downloads_left:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Allotment-properties-downloads_limit:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Allotment-properties-end_time:
      example: 2020-05-29T17:10:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Allotment-properties-start_time:
      example: 2020-05-29T17:10:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Artist:
      example:
        name: The Happy Tunes Band
      properties:
        name:
          example: The Happy Tunes Band
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Artist-properties-name:
      example: The Happy Tunes Band
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio:
      example:
        title: Another Tomorrow
        description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
          \ synth bass drums and synth drums that create a euphoric, upbeat mood."
        added_date: 2016-08-16T00:00:00.000Z
        artists:
        - name: Klimenko Music
        assets:
          clean_audio:
            file_size: 35188408
          preview_mp3:
            file_size: 4400203
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
          preview_ogg:
            file_size: 4453197
            url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
          waveform:
            file_size: 18778
            url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
        bpm: 110
        contributor:
          id: "2847971"
        duration: 183
        genres:
        - Dance/Electronic
        - Electro Pop
        - Pop/Rock
        id: 442583X
        instruments:
        - Piano
        - Synth bass
        - Synth drums
        - Synthesizer
        is_adult: false
        is_instrumental: true
        isrc: ""
        keywords:
        - celebratory
        - chic
        - euphoric
        - good times
        - hip
        - optimistic
        - party
        - soaring
        - upbeat
        language: en
        lyrics: ""
        media_type: audio
        moods:
        - Bright
        - Confident
        - Fun
        - Happy
        - Inspiring
        - Optimistic
        - Playful
        - Sophisticated
        - Stylish
        - Uplifting
        published_time: 2016-08-16T18:30:03.000Z
        recording_version: ""
        releases: []
        similar_artists: []
        updated_time: 2016-08-18T21:59:33.000Z
        url: ""
        vocal_description: ""
      properties:
        title:
          example: Another Tomorrow
          type: string
        description:
          example: "Pulsing and feel-good, featuring soaring synthesizer, groovy synth\
            \ bass drums and synth drums that create a euphoric, upbeat mood."
          type: string
        added_date:
          example: 2016-08-16T00:00:00.000Z
          type: string
        artists:
          items:
            properties:
              name:
                example: Klimenko Music
                type: string
            type: object
          type: array
        assets:
          properties:
            clean_audio:
              properties:
                file_size:
                  example: 35188408
                  type: number
              type: object
            preview_mp3:
              properties:
                file_size:
                  example: 4400203
                  type: number
                url:
                  example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
                  type: string
              type: object
            preview_ogg:
              properties:
                file_size:
                  example: 4453197
                  type: number
                url:
                  example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
                  type: string
              type: object
            waveform:
              properties:
                file_size:
                  example: 18778
                  type: number
                url:
                  example: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
                  type: string
              type: object
          type: object
        bpm:
          example: 110
          type: number
        contributor:
          properties:
            id:
              example: "2847971"
              type: string
          type: object
        duration:
          example: 183
          type: number
        genres:
          items:
            example: Dance/Electronic
            type: string
          type: array
        id:
          example: 442583X
          type: string
        instruments:
          items:
            example: Piano
            type: string
          type: array
        is_adult:
          example: false
          type: boolean
        is_instrumental:
          example: true
          type: boolean
        isrc:
          example: ""
          type: string
        keywords:
          items:
            example: celebratory
            type: string
          type: array
        language:
          example: en
          type: string
        lyrics:
          example: ""
          type: string
        media_type:
          example: audio
          type: string
        moods:
          items:
            example: Bright
            type: string
          type: array
        published_time:
          example: 2016-08-16T18:30:03.000Z
          type: string
        recording_version:
          example: ""
          type: string
        releases:
          items:
            type: string
          type: array
        similar_artists:
          items:
            type: string
          type: array
        updated_time:
          example: 2016-08-18T21:59:33.000Z
          type: string
        url:
          example: ""
          type: string
        vocal_description:
          example: ""
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-title:
      example: Another Tomorrow
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-description:
      example: "Pulsing and feel-good, featuring soaring synthesizer, groovy synth\
        \ bass drums and synth drums that create a euphoric, upbeat mood."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-added_date:
      example: 2016-08-16T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-bpm:
      example: 110
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-duration:
      example: 183
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-id:
      example: 442583X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-is_adult:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-is_instrumental:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-isrc:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-language:
      example: en
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-lyrics:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-media_type:
      example: audio
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-published_time:
      example: 2016-08-16T18:30:03.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-recording_version:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-updated_time:
      example: 2016-08-18T21:59:33.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-url:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Audio-properties-vocal_description:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioAssetDetails:
      example:
        file_size: 4453197
        url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
      properties:
        file_size:
          example: 4453197
          type: number
        url:
          example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioAssetDetails-properties-file_size:
      example: 35188408
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioAssetDetails-properties-url:
      example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioAssets:
      example:
        clean_audio:
          file_size: 35188408
        preview_mp3:
          file_size: 4400203
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
        preview_ogg:
          file_size: 4453197
          url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
        waveform:
          file_size: 18778
          url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
      properties:
        clean_audio:
          properties:
            file_size:
              example: 35188408
              type: number
          type: object
        preview_mp3:
          properties:
            file_size:
              example: 4400203
              type: number
            url:
              example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
              type: string
          type: object
        preview_ogg:
          properties:
            file_size:
              example: 4453197
              type: number
            url:
              example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
              type: string
          type: object
        waveform:
          properties:
            file_size:
              example: 18778
              type: number
            url:
              example: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult:
      example:
        created_date: 2021-07-13T20:19:30.000Z
        files: []
        id: 2yZp13IhLqnjfh2KquDTOHUHzTiP
        preset: MASTER_MP3
        progress_percent: 0
        status: WAITING_COMPOSE
        timeline: {}
        updated_date: 2021-07-13T20:19:30.000Z
      properties:
        created_date:
          example: 2021-07-13T20:19:30.000Z
          type: string
        files:
          items:
            type: string
          type: array
        id:
          example: 2yZp13IhLqnjfh2KquDTOHUHzTiP
          type: string
        preset:
          example: MASTER_MP3
          type: string
        progress_percent:
          example: 0
          type: number
        status:
          example: WAITING_COMPOSE
          type: string
        timeline:
          properties: {}
          type: object
        updated_date:
          example: 2021-07-13T20:19:30.000Z
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-created_date:
      example: 2021-07-13T20:19:30.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-id:
      example: 2yZp13IhLqnjfh2KquDTOHUHzTiP
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-preset:
      example: MASTER_MP3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-progress_percent:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-status:
      example: WAITING_COMPOSE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderResult-properties-updated_date:
      example: 2021-07-13T20:19:30.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimeline:
      example:
        spans:
        - id: 123456
          instrument_groups:
          - instrument_group: The instrument ID
            statuses:
            - beat: 12
              status: active
          regions:
          - beat: 12
            descriptor: The descriptor ID needed to compose the music
            end_type:
              beat: 12
              event: ending
              type: ringout
            id: 123456
            key:
              tonic_accidental: double flat
              tonic_note: c
              tonic_quality: major
            region: music
          span_type: metered
          tempo: 12345
          tempo_changes:
          - tempo: 12345
            time: 5
          time: 5
      properties:
        spans:
          items:
            properties:
              id:
                example: 123456
                type: number
              instrument_groups:
                items:
                  properties:
                    instrument_group:
                      example: The instrument ID
                      type: string
                    statuses:
                      items:
                        properties:
                          beat:
                            example: 12
                            type: number
                          status:
                            example: active
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              regions:
                items:
                  properties:
                    beat:
                      example: 12
                      type: number
                    descriptor:
                      example: The descriptor ID needed to compose the music
                      type: string
                    end_type:
                      properties:
                        beat:
                          example: 12
                          type: number
                        event:
                          example: ending
                          type: string
                        type:
                          example: ringout
                          type: string
                      type: object
                    id:
                      example: 123456
                      type: number
                    key:
                      properties:
                        tonic_accidental:
                          example: double flat
                          type: string
                        tonic_note:
                          example: c
                          type: string
                        tonic_quality:
                          example: major
                          type: string
                      type: object
                    region:
                      example: music
                      type: string
                  type: object
                type: array
              span_type:
                example: metered
                type: string
              tempo:
                example: 12345
                type: number
              tempo_changes:
                items:
                  properties:
                    tempo:
                      example: 12345
                      type: number
                    time:
                      example: 5
                      type: number
                  type: object
                type: array
              time:
                example: 5
                type: number
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpan:
      example:
        id: 111
        regions:
        - beat: 12
          descriptor: cinematic_minimal_tense
          end_type:
            beat: 24
            event: ending
            type: ringout
          id: 222
          key:
            tonic_note: c
            tonic_quality: major
          region: music
        span_type: metered
        tempo: 76
        time: 0
      properties:
        id:
          example: 111
          type: number
        regions:
          items:
            properties:
              beat:
                example: 12
                type: number
              descriptor:
                example: cinematic_minimal_tense
                type: string
              end_type:
                properties:
                  beat:
                    example: 24
                    type: number
                  event:
                    example: ending
                    type: string
                  type:
                    example: ringout
                    type: string
                type: object
              id:
                example: 222
                type: number
              key:
                properties:
                  tonic_note:
                    example: c
                    type: string
                  tonic_quality:
                    example: major
                    type: string
                type: object
              region:
                example: music
                type: string
            type: object
          type: array
        span_type:
          example: metered
          type: string
        tempo:
          example: 76
          type: number
        time:
          example: 0
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-id:
      example: 111
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-span_type:
      example: metered
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-tempo:
      example: 76
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpan-properties-time:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroup:
      example:
        instrument_group: bright_roomy_kit
        statuses:
        - beat: 12
          status: active
      properties:
        instrument_group:
          example: bright_roomy_kit
          type: string
        statuses:
          items:
            properties:
              beat:
                example: 12
                type: number
              status:
                example: active
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroup-properties-instrument_group:
      example: bright_roomy_kit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus:
      example:
        beat: 12
        status: active
      properties:
        beat:
          example: 12
          type: number
        status:
          example: active
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus-properties-beat:
      example: 12
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanInstrumentGroupStatus-properties-status:
      example: active
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion:
      example:
        beat: 12
        descriptor: cinematic_minimal_tense
        end_type:
          beat: 24
          event: ending
          type: ringout
        id: 222
        key:
          tonic_note: c
          tonic_quality: major
        region: music
      properties:
        beat:
          example: 12
          type: number
        descriptor:
          example: cinematic_minimal_tense
          type: string
        end_type:
          properties:
            beat:
              example: 24
              type: number
            event:
              example: ending
              type: string
            type:
              example: ringout
              type: string
          type: object
        id:
          example: 222
          type: number
        key:
          properties:
            tonic_note:
              example: c
              type: string
            tonic_quality:
              example: major
              type: string
          type: object
        region:
          example: music
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-beat:
      example: 12
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-descriptor:
      example: cinematic_minimal_tense
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-beat:
      example: 24
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-event:
      example: ending
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-type:
      example: ringout
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-id:
      example: 222
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-key-properties-tonic_note:
      example: c
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-key-properties-tonic_quality:
      example: major
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-region:
      example: music
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges:
      example:
        tempo: 86
        time: 5
      properties:
        tempo:
          example: 86
          type: number
        time:
          example: 5
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges-properties-tempo:
      example: 86
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRenderTimelineSpanTempoChanges-properties-time:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList:
      example:
        bits_sample: 16
        content_type: audio/mp3
        download_url: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
        filename: My_audio_ai.mp3
        frequency_hz: 44100
        kbits_second: 192
        size_bytes: 481556
        tracks:
        - master
      properties:
        bits_sample:
          example: 16
          type: number
        content_type:
          example: audio/mp3
          type: string
        download_url:
          example: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
          type: string
        filename:
          example: My_audio_ai.mp3
          type: string
        frequency_hz:
          example: 44100
          type: number
        kbits_second:
          example: 192
          type: number
        size_bytes:
          example: 481556
          type: number
        tracks:
          items:
            example: master
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-bits_sample:
      example: 16
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-content_type:
      example: audio/mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-download_url:
      example: https://s3.amazonaws.com/prod-amper-inferno-ephemeral/renders/2021/07/13/amper-api-QwAgKqXQAzr622KuXYZ25C9WRH3a/0.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-filename:
      example: My_audio_ai.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-frequency_hz:
      example: 44100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-kbits_second:
      example: 192
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioRendersFilesList-properties-size_bytes:
      example: 481556
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioSearchResults:
      example:
        data:
        - title: Another Tomorrow
          description: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
            \ synth bass drums and synth drums that create a euphoric, upbeat mood."
          added_date: 2016-08-16T00:00:00.000Z
          artists:
          - name: Klimenko Music
          assets:
            clean_audio:
              file_size: 35188408
            preview_mp3:
              file_size: 4400203
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
            preview_ogg:
              file_size: 4453197
              url: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
            waveform:
              file_size: 18778
              url: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
          bpm: 110
          contributor:
            id: 2847971X
          duration: 183
          genres:
          - Dance/Electronic
          - Electro Pop
          - Pop/Rock
          id: 442583X
          instruments:
          - Piano
          - Synth bass
          - Synth drums
          - Synthesizer
          is_adult: false
          is_instrumental: true
          isrc: ""
          keywords:
          - celebratory
          - chic
          - euphoric
          - good times
          - hip
          - optimistic
          - party
          - soaring
          - upbeat
          language: en
          lyrics: ""
          media_type: audio
          moods:
          - Bright
          - Confident
          - Fun
          - Happy
          - Inspiring
          - Optimistic
          - Playful
          - Sophisticated
          - Stylish
          - Uplifting
          published_time: 2016-08-16T18:30:03.000Z
          recording_version: ""
          releases: []
          similar_artists: []
          updated_time: 2016-08-18T21:59:33.000Z
          url: ""
          vocal_description: ""
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123455
      properties:
        data:
          items:
            properties:
              title:
                example: Another Tomorrow
                type: string
              description:
                example: "Pulsing and feel-good, featuring soaring synthesizer, groovy\
                  \ synth bass drums and synth drums that create a euphoric, upbeat\
                  \ mood."
                type: string
              added_date:
                example: 2016-08-16T00:00:00.000Z
                type: string
              artists:
                items:
                  properties:
                    name:
                      example: Klimenko Music
                      type: string
                  type: object
                type: array
              assets:
                properties:
                  clean_audio:
                    properties:
                      file_size:
                        example: 35188408
                        type: number
                    type: object
                  preview_mp3:
                    properties:
                      file_size:
                        example: 4400203
                        type: number
                      url:
                        example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3
                        type: string
                    type: object
                  preview_ogg:
                    properties:
                      file_size:
                        example: 4453197
                        type: number
                      url:
                        example: https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg
                        type: string
                    type: object
                  waveform:
                    properties:
                      file_size:
                        example: 18778
                        type: number
                      url:
                        example: https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png
                        type: string
                    type: object
                type: object
              bpm:
                example: 110
                type: number
              contributor:
                properties:
                  id:
                    example: 2847971X
                    type: string
                type: object
              duration:
                example: 183
                type: number
              genres:
                items:
                  example: Dance/Electronic
                  type: string
                type: array
              id:
                example: 442583X
                type: string
              instruments:
                items:
                  example: Piano
                  type: string
                type: array
              is_adult:
                example: false
                type: boolean
              is_instrumental:
                example: true
                type: boolean
              isrc:
                example: ""
                type: string
              keywords:
                items:
                  example: celebratory
                  type: string
                type: array
              language:
                example: en
                type: string
              lyrics:
                example: ""
                type: string
              media_type:
                example: audio
                type: string
              moods:
                items:
                  example: Bright
                  type: string
                type: array
              published_time:
                example: 2016-08-16T18:30:03.000Z
                type: string
              recording_version:
                example: ""
                type: string
              releases:
                items:
                  type: string
                type: array
              similar_artists:
                items:
                  type: string
                type: array
              updated_time:
                example: 2016-08-18T21:59:33.000Z
                type: string
              url:
                example: ""
                type: string
              vocal_description:
                example: ""
                type: string
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 5
          type: number
        search_id:
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
        total_count:
          example: 123455
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioSearchResults-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioSearchResults-properties-per_page:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioSearchResults-properties-search_id:
      example: 749090bb-2967-4a20-b22e-c800dc845e10
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioSearchResults-properties-total_count:
      example: 123455
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioUrl:
      example:
        $ref: '#/components/schemas/Url/example'
      properties:
        $ref:
          example: '#/components/schemas/Url/example'
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AudioUrl-properties-url:
      example: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthorizeResponse:
      example: Moved temporarily. Redirecting to https://accounts.shutterstock.com/login?next=%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26state%3D1539619928633%26scope%3Dlicenses.create%20licenses.view%20purchases.view%26client_id%3D6d097450b209c6dcd859%26redirect_uri%3Dhttp%3A%2F%2Flocalhost%3A3000%2Fmyapp%2Fauth%2Fcallback%26realm%3Dcustomer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Bands:
      example:
        id: 1234567X
        name: The Happy Tunes Band
      properties:
        id:
          example: 1234567X
          type: string
        name:
          example: The Happy Tunes Band
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Bands-properties-id:
      example: 1234567X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Bands-properties-name:
      example: The Happy Tunes Band
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BulkImageSearchRequest:
      example:
      - license:
        - editorial
        query: cat
        sort: popular
      - orientation: horizontal
        query: dog
      items:
        properties:
          license:
            items:
              example: editorial
              type: string
            type: array
          query:
            example: cat
            type: string
          sort:
            example: popular
            type: string
          orientation:
            example: horizontal
            type: string
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BulkImageSearchResults:
      example:
        results:
        - data:
          - description: cropped image of woman gardening
            aspect: 1.5
            assets:
              huge_thumb:
                height: 260
                url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
                width: 390
              large_thumb:
                height: 100
                url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 150
              preview:
                height: 300
                url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 450
              preview_1000:
                height: 667
                url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
                width: 1000
              preview_1500:
                height: 1000
                url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 1500
              small_thumb:
                height: 67
                url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                width: 100
            contributor:
              id: "250738318"
            has_model_release: true
            id: "1572478477"
            image_type: photo
            media_type: image
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e10
          spellcheck_info: {}
          total_count: 45
        - data: []
          page: 1
          per_page: 5
          search_id: 749090bb-2967-4a20-b22e-c800dc845e11
          spellcheck_info: {}
          total_count: 0
      properties:
        results:
          items:
            properties:
              data:
                items: {}
                type: array
              page:
                example: 1
                type: number
              per_page:
                example: 5
                type: number
              search_id:
                example: 749090bb-2967-4a20-b22e-c800dc845e10
                type: string
              spellcheck_info:
                properties: {}
                type: object
              total_count:
                example: 45
                type: number
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection:
      example:
        cover_asset:
          asset:
            id: "1690105108"
            name: Young couple playing tennis at the court
            type: image
          created_time: 2021-06-10T17:26:09.000Z
          id: "123"
        created_time: 2021-05-20T20:15:22.000Z
        id: "126351028"
        name: My collection
        role_assignments:
          collection_id: "126351028"
          roles:
            editors:
            - email: userTwo@org.com
              id: "987"
              type: USER
            owners:
            - email: userOne@org.com
              id: "321"
              type: USER
            viewers: []
        total_item_count: 2
        updated_time: 2021-06-10T17:26:09.000Z
        visibility: public
      properties:
        cover_asset:
          properties:
            asset:
              properties:
                id:
                  example: "1690105108"
                  type: string
                name:
                  example: Young couple playing tennis at the court
                  type: string
                type:
                  example: image
                  type: string
              type: object
            created_time:
              example: 2021-06-10T17:26:09.000Z
              type: string
            id:
              example: "123"
              type: string
          type: object
        created_time:
          example: 2021-05-20T20:15:22.000Z
          type: string
        id:
          example: "126351028"
          type: string
        name:
          example: My collection
          type: string
        role_assignments:
          properties:
            collection_id:
              example: "126351028"
              type: string
            roles:
              properties:
                editors:
                  items:
                    properties:
                      email:
                        example: userTwo@org.com
                        type: string
                      id:
                        example: "987"
                        type: string
                      type:
                        example: USER
                        type: string
                    type: object
                  type: array
                owners:
                  items:
                    properties:
                      email:
                        example: userOne@org.com
                        type: string
                      id:
                        example: "321"
                        type: string
                      type:
                        example: USER
                        type: string
                    type: object
                  type: array
                viewers:
                  items:
                    type: string
                  type: array
              type: object
          type: object
        total_item_count:
          example: 2
          type: number
        updated_time:
          example: 2021-06-10T17:26:09.000Z
          type: string
        visibility:
          example: public
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-created_time:
      example: 2021-05-20T20:15:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-id:
      example: "126351028"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-name:
      example: My collection
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-total_item_count:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-updated_time:
      example: 2021-06-10T17:26:09.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollection-properties-visibility:
      example: public
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionDataList:
      example:
        data:
        - cover_asset:
            asset:
              id: 1690105108X
              name: Young couple playing tennis at the court
              type: image
            created_time: 2021-06-10T17:26:09.000Z
            id: 123X
          created_time: 2021-05-20T20:15:22.000Z
          id: 126351028X
          name: My collection
          role_assignments:
            collection_id: "126351028"
            roles:
              editors:
              - email: userTwo@org.com
                id: 987X
                type: USER
              owners:
              - email: userOne@org.com
                id: 321X
                type: USER
              viewers: []
          total_item_count: 2
          updated_time: 2021-06-10T17:26:09.000Z
          visibility: public
        page: 1
        per_page: 20
        total_count: 1
      properties:
        data:
          items:
            properties:
              cover_asset:
                properties:
                  asset:
                    properties:
                      id:
                        example: 1690105108X
                        type: string
                      name:
                        example: Young couple playing tennis at the court
                        type: string
                      type:
                        example: image
                        type: string
                    type: object
                  created_time:
                    example: 2021-06-10T17:26:09.000Z
                    type: string
                  id:
                    example: 123X
                    type: string
                type: object
              created_time:
                example: 2021-05-20T20:15:22.000Z
                type: string
              id:
                example: 126351028X
                type: string
              name:
                example: My collection
                type: string
              role_assignments:
                properties:
                  collection_id:
                    example: "126351028"
                    type: string
                  roles:
                    properties:
                      editors:
                        items:
                          properties:
                            email:
                              example: userTwo@org.com
                              type: string
                            id:
                              example: 987X
                              type: string
                            type:
                              example: USER
                              type: string
                          type: object
                        type: array
                      owners:
                        items:
                          properties:
                            email:
                              example: userOne@org.com
                              type: string
                            id:
                              example: 321X
                              type: string
                            type:
                              example: USER
                              type: string
                          type: object
                        type: array
                      viewers:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              total_item_count:
                example: 2
                type: number
              updated_time:
                example: 2021-06-10T17:26:09.000Z
                type: string
              visibility:
                example: public
                type: string
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 20
          type: number
        total_count:
          example: 1
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-per_page:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionDataList-properties-total_count:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem:
      example:
        asset:
          id: 1690105108X
          name: Young couple playing tennis at the court
          type: image
        collection_ids:
        - "126351028"
        created_time: 2021-06-10T17:26:09.000Z
        id: 123X
      properties:
        asset:
          properties:
            id:
              example: 1690105108X
              type: string
            name:
              example: Young couple playing tennis at the court
              type: string
            type:
              example: image
              type: string
          type: object
        collection_ids:
          items:
            example: "126351028"
            type: string
          type: array
        created_time:
          example: 2021-06-10T17:26:09.000Z
          type: string
        id:
          example: 123X
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-id:
      example: "1690105108"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-name:
      example: Young couple playing tennis at the court
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-type:
      example: image
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-created_time:
      example: 2021-06-10T17:26:09.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-id:
      example: "123"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItemDataList:
      example:
        data:
        - asset:
            id: 1690105108X
            name: Young couple playing tennis at the court
            type: image
          collection_ids:
          - "126351028"
          created_time: 2021-06-10T17:26:09.000Z
          id: 123X
        page: 1
        per_page: 1
        total_count: 82
      properties:
        data:
          items:
            properties:
              asset:
                properties:
                  id:
                    example: 1690105108X
                    type: string
                  name:
                    example: Young couple playing tennis at the court
                    type: string
                  type:
                    example: image
                    type: string
                type: object
              collection_ids:
                items:
                  example: "126351028"
                  type: string
                type: array
              created_time:
                example: 2021-06-10T17:26:09.000Z
                type: string
              id:
                example: 123X
                type: string
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 1
          type: number
        total_count:
          example: 82
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionItemDataList-properties-total_count:
      example: 82
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRole:
      example:
        email: user123@org.com
        id: 123X
        type: USER
      properties:
        email:
          example: user123@org.com
          type: string
        id:
          example: 123X
          type: string
        type:
          example: USER
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-email:
      example: user123@org.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-id:
      example: 123X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRole-properties-type:
      example: USER
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRoleAssignments:
      example:
        collection_id: "126351028"
        roles:
          editors:
          - email: userTwo@org.com
            id: 987X
            type: USER
          owners:
          - email: userOne@org.com
            id: 321X
            type: USER
          viewers: []
      properties:
        collection_id:
          example: "126351028"
          type: string
        roles:
          properties:
            editors:
              items:
                properties:
                  email:
                    example: userTwo@org.com
                    type: string
                  id:
                    example: 987X
                    type: string
                  type:
                    example: USER
                    type: string
                type: object
              type: array
            owners:
              items:
                properties:
                  email:
                    example: userOne@org.com
                    type: string
                  id:
                    example: 321X
                    type: string
                  type:
                    example: USER
                    type: string
                type: object
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CatalogCollectionRoleAssignments-properties-collection_id:
      example: "126351028"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Category:
      example:
        id: "1"
        name: Animals/Wildlife
      properties:
        id:
          example: "1"
          type: string
        name:
          example: Animals/Wildlife
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Category-properties-id:
      example: "1"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Category-properties-name:
      example: Animals/Wildlife
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Collection:
      example:
        cover_item:
          id: "297886754"
        id: "293542904"
        items_updated_time: 2021-05-20T20:15:22.000Z
        name: My collection
        total_item_count: 85
      properties:
        cover_item:
          properties:
            id:
              example: "297886754"
              type: string
          type: object
        id:
          example: "293542904"
          type: string
        items_updated_time:
          example: 2021-05-20T20:15:22.000Z
          type: string
        name:
          example: My collection
          type: string
        total_item_count:
          example: 85
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Collection-properties-id:
      example: "293542904"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Collection-properties-items_updated_time:
      example: 2021-05-20T20:15:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Collection-properties-name:
      example: My collection
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Collection-properties-total_item_count:
      example: 85
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionCreateRequest:
      example:
        name: Test Collection 19cf
      properties:
        name:
          example: Test Collection 19cf
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionCreateRequest-properties-name:
      example: Test Collection 19cf
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionCreateResponse:
      example:
        id: "48433105"
      properties:
        id:
          example: "48433105"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionCreateResponse-properties-id:
      example: "48433105"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionItem:
      example:
        added_time: 2020-05-29T17:10:22.000Z
        id: 1690105108X
        media_type: image
      properties:
        added_time:
          example: 2020-05-29T17:10:22.000Z
          type: string
        id:
          example: 1690105108X
          type: string
        media_type:
          example: image
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionItem-properties-added_time:
      example: 2020-05-29T17:10:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionItem-properties-id:
      example: "297886754"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionItem-properties-media_type:
      example: image
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionItemRequest:
      example:
        items:
        - added_time: 2020-05-29T17:10:22.000Z
          id: 1690105108X
          media_type: image
      properties:
        items:
          items:
            properties:
              added_time:
                example: 2020-05-29T17:10:22.000Z
                type: string
              id:
                example: 1690105108X
                type: string
              media_type:
                example: image
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionUpdateRequest:
      example:
        name: My collection with a new name
      properties:
        name:
          example: My collection with a new name
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CollectionUpdateRequest-properties-name:
      example: My collection with a new name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ComputerVisionImageCreateResponse:
      example:
        upload_id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      properties:
        upload_id:
          example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ComputerVisionImageCreateResponse-properties-upload_id:
      example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contributor:
      example:
        id: "12345678"
      properties:
        id:
          example: "12345678"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contributor-properties-id:
      example: "2847971"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile:
      example:
        about: John Doe's photographs
        contributor_type:
        - photographer
        display_name: John Doe
        equipment:
        - Nikon
        - Fuji
        id: 12345678X
        location: US
        portfolio_url: https://www.shutterstock.com/g/jdoe
        social_media:
          facebook: http://example.com/jdoe
          google_plus: http://example.com/jdoe
          linkedin: http://example.com/jdoe
          pinterest: http://example.com/jdoe
          tumblr: http://example.com/jdoe
          twitter: http://example.com/jdoe
        styles:
        - landscape
        - nature
        - footage_travel
        subjects:
        - animals
        - landmarks
        - nature
        - objects
        - recreation
        website: http://example.com/profiles/jdoe
      properties:
        about:
          example: John Doe's photographs
          type: string
        contributor_type:
          items:
            example: photographer
            type: string
          type: array
        display_name:
          example: John Doe
          type: string
        equipment:
          items:
            example: Nikon
            type: string
          type: array
        id:
          example: 12345678X
          type: string
        location:
          example: US
          type: string
        portfolio_url:
          example: https://www.shutterstock.com/g/jdoe
          type: string
        social_media:
          properties:
            facebook:
              example: http://example.com/jdoe
              type: string
            google_plus:
              example: http://example.com/jdoe
              type: string
            linkedin:
              example: http://example.com/jdoe
              type: string
            pinterest:
              example: http://example.com/jdoe
              type: string
            tumblr:
              example: http://example.com/jdoe
              type: string
            twitter:
              example: http://example.com/jdoe
              type: string
          type: object
        styles:
          items:
            example: landscape
            type: string
          type: array
        subjects:
          items:
            example: animals
            type: string
          type: array
        website:
          example: http://example.com/profiles/jdoe
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-about:
      example: John Doe's photographs
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-display_name:
      example: John Doe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-id:
      example: 12345678X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-location:
      example: US
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-portfolio_url:
      example: https://www.shutterstock.com/g/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfile-properties-website:
      example: http://example.com/profiles/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia:
      example:
        facebook: http://example.com/jdoe
        google_plus: http://example.com/jdoe
        linkedin: http://example.com/jdoe
        pinterest: http://example.com/jdoe
        tumblr: http://example.com/jdoe
        twitter: http://example.com/jdoe
      properties:
        facebook:
          example: http://example.com/jdoe
          type: string
        google_plus:
          example: http://example.com/jdoe
          type: string
        linkedin:
          example: http://example.com/jdoe
          type: string
        pinterest:
          example: http://example.com/jdoe
          type: string
        tumblr:
          example: http://example.com/jdoe
          type: string
        twitter:
          example: http://example.com/jdoe
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-facebook:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-google_plus:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-linkedin:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-pinterest:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-tumblr:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContributorProfileSocialMedia-properties-twitter:
      example: http://example.com/jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Cookie:
      example:
        name: The name of the cookie
        value: The value of the cookie
      properties:
        name:
          example: The name of the cookie
          type: string
        value:
          example: The value of the cookie
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Cookie-properties-name:
      example: The name of the cookie
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Cookie-properties-value:
      example: The value of the cookie
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAudioRender:
      example:
        filename: My Project.mp3
        preset: MASTER_MP3
        timeline:
          spans:
          - id: 111
            instrument_groups:
            - instrument_group: roomy_kit
              statuses:
              - beat: 12
                status: active
            regions:
            - beat: 12
              descriptor: cinematic_minimal_tense
              end_type:
                beat: 24
                event: ending
                type: ringout
              id: 222
              key:
                tonic_note: c
                tonic_quality: major
              region: music
            span_type: metered
            tempo: 76
            tempo_changes:
            - tempo: 86
              time: 5
            time: 5
          - span_type: unmetered
            time: 20
      properties:
        filename:
          example: My Project.mp3
          type: string
        preset:
          example: MASTER_MP3
          type: string
        timeline:
          properties:
            spans:
              items:
                properties:
                  id:
                    example: 111
                    type: number
                  instrument_groups:
                    items:
                      properties:
                        instrument_group:
                          example: roomy_kit
                          type: string
                        statuses:
                          items:
                            properties:
                              beat:
                                example: 12
                                type: number
                              status:
                                example: active
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  regions:
                    items:
                      properties:
                        beat:
                          example: 12
                          type: number
                        descriptor:
                          example: cinematic_minimal_tense
                          type: string
                        end_type:
                          properties:
                            beat:
                              example: 24
                              type: number
                            event:
                              example: ending
                              type: string
                            type:
                              example: ringout
                              type: string
                          type: object
                        id:
                          example: 222
                          type: number
                        key:
                          properties:
                            tonic_note:
                              example: c
                              type: string
                            tonic_quality:
                              example: major
                              type: string
                          type: object
                        region:
                          example: music
                          type: string
                      type: object
                    type: array
                  span_type:
                    example: metered
                    type: string
                  tempo:
                    example: 76
                    type: number
                  tempo_changes:
                    items:
                      properties:
                        tempo:
                          example: 86
                          type: number
                        time:
                          example: 5
                          type: number
                      type: object
                    type: array
                  time:
                    example: 5
                    type: number
                type: object
              type: array
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAudioRender-properties-filename:
      example: My Project.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAudioRender-properties-preset:
      example: MASTER_MP3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAudioRendersRequest:
      example:
        audio_renders:
        - filename: My Project.mp3
          preset: MASTER_MP3
          timeline:
            spans:
            - id: 111
              instrument_groups:
              - instrument_group: roomy_kit
                statuses:
                - beat: 12
                  status: active
              regions:
              - beat: 12
                descriptor: cinematic_minimal_tense
                end_type:
                  beat: 24
                  event: ending
                  type: ringout
                id: 222
                key:
                  tonic_note: c
                  tonic_quality: major
                region: music
              span_type: metered
              tempo: 76
              tempo_changes:
              - tempo: 86
                time: 5
              time: 5
            - span_type: unmetered
              time: 20
      properties:
        audio_renders:
          items:
            properties:
              filename:
                example: My Project.mp3
                type: string
              preset:
                example: MASTER_MP3
                type: string
              timeline:
                properties:
                  spans:
                    items:
                      properties:
                        id:
                          example: 111
                          type: number
                        instrument_groups:
                          items:
                            properties:
                              instrument_group:
                                example: roomy_kit
                                type: string
                              statuses:
                                items:
                                  properties:
                                    beat:
                                      example: 12
                                      type: number
                                    status:
                                      example: active
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        regions:
                          items:
                            properties:
                              beat:
                                example: 12
                                type: number
                              descriptor:
                                example: cinematic_minimal_tense
                                type: string
                              end_type:
                                properties:
                                  beat:
                                    example: 24
                                    type: number
                                  event:
                                    example: ending
                                    type: string
                                  type:
                                    example: ringout
                                    type: string
                                type: object
                              id:
                                example: 222
                                type: number
                              key:
                                properties:
                                  tonic_note:
                                    example: c
                                    type: string
                                  tonic_quality:
                                    example: major
                                    type: string
                                type: object
                              region:
                                example: music
                                type: string
                            type: object
                          type: array
                        span_type:
                          example: metered
                          type: string
                        tempo:
                          example: 76
                          type: number
                        tempo_changes:
                          items:
                            properties:
                              tempo:
                                example: 86
                                type: number
                              time:
                                example: 5
                                type: number
                            type: object
                          type: array
                        time:
                          example: 5
                          type: number
                      type: object
                    type: array
                type: object
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollection:
      example:
        items:
        - asset:
            id: 1690105108X
            type: image
        name: New Collection
        visibility: public
      properties:
        items:
          items:
            properties:
              asset:
                properties:
                  id:
                    example: 1690105108X
                    type: string
                  type:
                    example: image
                    type: string
                type: object
            type: object
          type: array
        name:
          example: New Collection
          type: string
        visibility:
          example: public
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-name:
      example: New Collection
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-visibility:
      example: private
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollectionItem:
      example:
        asset:
          id: 1690105108X
          type: image
      properties:
        asset:
          properties:
            id:
              example: 1690105108X
              type: string
            type:
              example: image
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollectionItem-properties-asset-properties-id:
      example: 1690105108X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollectionItem-properties-asset-properties-type:
      example: image
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCatalogCollectionItems:
      example:
        items:
        - asset:
            id: 1690105108X
            type: image
      properties:
        items:
          items:
            properties:
              asset:
                properties:
                  id:
                    example: 1690105108X
                    type: string
                  type:
                    example: image
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CustomSizeDimensions:
      example:
        height: 600
        width: 800
      properties:
        height:
          example: 600
          type: number
        width:
          example: 800
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CustomSizeDimensions-properties-height:
      example: 600
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CustomSizeDimensions-properties-width:
      example: 800
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors:
      example:
        tags:
        - Tense
        - Cinematic
        - Negative
        - Simple Meter
        - 4/4
        - Natural Minor
        - Dorian
        - Minimal
        - Adagio
        - Single Region
        - Main
        - Entertainment
        - Politics
        - Keys
        - Mid Pads
        - Fast
        - Slow
        - Slow
        - Voice
        - Medium Bright
        - Non Noisy
        - Medium Thick
        - Angelic
        - Direct
        - Percussion
        - Perc FX
        - Misc
        - Acoustic Pianos
        - Grand
        - Nice
        - Roomy
        - Pop
        - Upright
        - Clean
        - Classic
        - Keyboards
        - Digital Keyboard
        - Strings
        - Synth Basses
        - Fast
        - Dark
        - Thick
        - Sub
        - Synth Mallets
        - Dull
        - Mid Synth Beds
        - Slow
        - None
        - Medium Noisy
        - Harsh
        - Fast
        - Airy
        - Long Textures
        - Ambience
        - Synth Texture
        - Ethereal
        - Set Kicks
        - Processed
        - Hubcap Mallet
        - Wide
        - Tickie
        - Airy
        - Chamber
        - Thin
        - Organ
        - Cello Ensemble
        - Sweet
        - Big
        - Di
        - Raw
        - Bright
        - Tight
        - Chorus
        - Buzzy
        - Huge
        - Warm
        - Jazz
        - Brass
        - String
        - Hollow
        - Woodwind
        - Breathy
        - Crystal
        - Rhodes
        - Synth Piano
        - Noisy
        - Woody
        - Metallic
        - Reverse Piano
        - Full
        - Foley
        - Piano
        - Clean
        - Delayed
        - Reverb
        - Low Passed
        - Large
        - Medium
        - Small
        average_render_speed: 8.242664029014177
        bands:
        - id: cinematic_minimal_tense_band_1
          name: Cinematic Minimal Tense Band 1
        - id: cinematic_minimal_tense_band_2
          name: Cinematic Minimal Tense Band 2
        id: cinematic_minimal_tense
        instruments:
        - id: blue_synth_pad
          name: Warm Pad - Lush
        - id: direct_round_1_synth_bass
          name: Direct Round 1 Synth Bass
        - id: direct_crystal_breath_mid_pad
          name: Direct Crystal Breath Mid Pad
        max_tempo: 76
        min_tempo: 58
        name: Cinematic Minimal Tense
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
      properties:
        tags:
          items:
            example: Tense
            type: string
          type: array
        average_render_speed:
          example: 8.242664029014177
          type: number
        bands:
          items:
            properties:
              id:
                example: cinematic_minimal_tense_band_1
                type: string
              name:
                example: Cinematic Minimal Tense Band 1
                type: string
            type: object
          type: array
        id:
          example: cinematic_minimal_tense
          type: string
        instruments:
          items:
            properties:
              id:
                example: blue_synth_pad
                type: string
              name:
                example: Warm Pad - Lush
                type: string
            type: object
          type: array
        max_tempo:
          example: 76
          type: number
        min_tempo:
          example: 58
          type: number
        name:
          example: Cinematic Minimal Tense
          type: string
        previews:
          items:
            properties:
              content_type:
                example: audio/mp3
                type: string
              url:
                example: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors-properties-average_render_speed:
      example: 8.242664029014177
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors-properties-id:
      example: cinematic_minimal_tense
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors-properties-max_tempo:
      example: 76
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors-properties-min_tempo:
      example: 58
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Descriptors-properties-name:
      example: Cinematic Minimal Tense
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DescriptorsListResult:
      example:
        data:
        - tags:
          - Tense
          - Cinematic
          - Negative
          - Simple Meter
          - 4/4
          - Natural Minor
          - Dorian
          - Minimal
          - Adagio
          - Single Region
          - Main
          - Entertainment
          - Politics
          - Keys
          - Mid Pads
          - Fast
          - Slow
          - Slow
          - Voice
          - Medium Bright
          - Non Noisy
          - Medium Thick
          - Angelic
          - Direct
          - Percussion
          - Perc FX
          - Misc
          - Acoustic Pianos
          - Grand
          - Nice
          - Roomy
          - Pop
          - Upright
          - Clean
          - Classic
          - Keyboards
          - Digital Keyboard
          - Strings
          - Synth Basses
          - Fast
          - Dark
          - Thick
          - Sub
          - Synth Mallets
          - Dull
          - Mid Synth Beds
          - Slow
          - None
          - Medium Noisy
          - Harsh
          - Fast
          - Airy
          - Long Textures
          - Ambience
          - Synth Texture
          - Ethereal
          - Set Kicks
          - Processed
          - Hubcap Mallet
          - Wide
          - Tickie
          - Airy
          - Chamber
          - Thin
          - Organ
          - Cello Ensemble
          - Sweet
          - Big
          - Di
          - Raw
          - Bright
          - Tight
          - Chorus
          - Buzzy
          - Huge
          - Warm
          - Jazz
          - Brass
          - String
          - Hollow
          - Woodwind
          - Breathy
          - Crystal
          - Rhodes
          - Synth Piano
          - Noisy
          - Woody
          - Metallic
          - Reverse Piano
          - Full
          - Foley
          - Piano
          - Clean
          - Delayed
          - Reverb
          - Low Passed
          - Large
          - Medium
          - Small
          average_render_speed: 8.242664029014177
          bands:
          - id: cinematic_minimal_tense_band_1X
            name: Cinematic Minimal Tense Band 1
          - id: cinematic_minimal_tense_band_2X
            name: Cinematic Minimal Tense Band 2
          id: cinematic_minimal_tenseX
          instruments:
          - id: blue_synth_padX
            name: Warm Pad - Lush
          - id: direct_round_1_synth_bassX
            name: Direct Round 1 Synth Bass
          - id: direct_crystal_breath_mid_padX
            name: Direct Crystal Breath Mid Pad
          max_tempo: 76
          min_tempo: 58
          name: Cinematic Minimal Tense
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_2_v1.mp3
        page: 1
        per_page: 1
      properties:
        data:
          items:
            properties:
              tags:
                items:
                  example: Tense
                  type: string
                type: array
              average_render_speed:
                example: 8.242664029014177
                type: number
              bands:
                items:
                  properties:
                    id:
                      example: cinematic_minimal_tense_band_1X
                      type: string
                    name:
                      example: Cinematic Minimal Tense Band 1
                      type: string
                  type: object
                type: array
              id:
                example: cinematic_minimal_tenseX
                type: string
              instruments:
                items:
                  properties:
                    id:
                      example: blue_synth_padX
                      type: string
                    name:
                      example: Warm Pad - Lush
                      type: string
                  type: object
                type: array
              max_tempo:
                example: 76
                type: number
              min_tempo:
                example: 58
                type: number
              name:
                example: Cinematic Minimal Tense
                type: string
              previews:
                items:
                  properties:
                    content_type:
                      example: audio/mp3
                      type: string
                    url:
                      example: https://public-cdn.ampermusic.com/bands/previews/cinematic_minimal_tense_band_1_v1.mp3
                      type: string
                  type: object
                type: array
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 1
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DescriptorsListResult-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DescriptorsListResult-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory:
      example:
        download_time: 2021-05-20T20:31:46.000Z
        id: a24499ca3ccd912a6d8316d45f953ef092
        image:
          format:
            size: medium
          id: 1234567X
        is_downloadable: true
        license: standard
        subscription_id: s12345678
        user:
          username: jdoe
      properties:
        download_time:
          example: 2021-05-20T20:31:46.000Z
          type: string
        id:
          example: a24499ca3ccd912a6d8316d45f953ef092
          type: string
        image:
          properties:
            format:
              properties:
                size:
                  example: medium
                  type: string
              type: object
            id:
              example: 1234567X
              type: string
          type: object
        is_downloadable:
          example: true
          type: boolean
        license:
          example: standard
          type: string
        subscription_id:
          example: s12345678
          type: string
        user:
          properties:
            username:
              example: jdoe
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory-properties-download_time:
      example: 2021-05-20T20:31:46.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory-properties-id:
      example: a24499ca3ccd912a6d8316d45f953ef092
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory-properties-is_downloadable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory-properties-license:
      example: standard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistory-properties-subscription_id:
      example: s12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails:
      example:
        format: jpg
        size: medium
      properties:
        format:
          example: jpg
          type: string
        size:
          example: medium
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails-properties-format:
      example: jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryFormatDetails-properties-size:
      example: medium
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryMediaDetails:
      example:
        format:
          format: jpg
          size: medium
        id: 1234567X
      properties:
        format:
          properties:
            format:
              example: jpg
              type: string
            size:
              example: medium
              type: string
          type: object
        id:
          example: 1234567X
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryMediaDetails-properties-id:
      example: 1234567X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails:
      example:
        purchase_amount: "8.65"
        purchase_currency: USD
      properties:
        purchase_amount:
          example: "8.65"
          type: string
        purchase_currency:
          example: USD
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails-properties-purchase_amount:
      example: "8.65"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryRevshareDetails-properties-purchase_currency:
      example: USD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryUserDetails:
      example:
        username: jdoe
      properties:
        username:
          example: jdoe
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DownloadHistoryUserDetails-properties-username:
      example: jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialAssets:
      example:
        medium_jpg:
          display_name: Med
          height: 617
          is_licensable: true
          width: 1000
        original:
          display_name: Original
          height: 3693
          is_licensable: true
          width: 5985
        small_jpg:
          display_name: Small
          height: 309
          is_licensable: true
          width: 500
        thumb_170:
          height: 105
          url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
          width: 170
        thumb_220:
          height: 136
          url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
          width: 220
        watermark_1500:
          height: 926
          url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
          width: 1500
        watermark_450:
          height: 278
          url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
          width: 450
      properties:
        medium_jpg:
          properties:
            display_name:
              example: Med
              type: string
            height:
              example: 617
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 1000
              type: number
          type: object
        original:
          properties:
            display_name:
              example: Original
              type: string
            height:
              example: 3693
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 5985
              type: number
          type: object
        small_jpg:
          properties:
            display_name:
              example: Small
              type: string
            height:
              example: 309
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 500
              type: number
          type: object
        thumb_170:
          properties:
            height:
              example: 105
              type: number
            url:
              example: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              type: string
            width:
              example: 170
              type: number
          type: object
        thumb_220:
          properties:
            height:
              example: 136
              type: number
            url:
              example: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              type: string
            width:
              example: 220
              type: number
          type: object
        watermark_1500:
          properties:
            height:
              example: 926
              type: number
            url:
              example: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              type: string
            width:
              example: 1500
              type: number
          type: object
        watermark_450:
          properties:
            height:
              example: 278
              type: number
            url:
              example: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              type: string
            width:
              example: 450
              type: number
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCategory:
      example:
        name: Awards
      properties:
        name:
          example: Awards
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCategory-properties-name:
      example: Awards
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCategoryResults:
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
      properties:
        data:
          items:
            properties:
              name:
                example: Animal
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent:
      example:
        title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
        description: "Security and stewards stand outside the Old Trafford stadium\
          \ in Manchester, England, ahead of the English Premier League soccer match\
          \ between Manchester United and Leicester City. This is the first Manchester\
          \ United home match since fans protested against American owner Joel Glazer,\
          \ forcing the postponement of the team's Premier League game against Liverpool.\
          \ The protests prompted Glazer to publish a letter in which he pledged to\
          \ accelerate discussions with fans about supporters being able to have a\
          \ greater say at the club"
        aspect: 1.621
        assets:
          medium_jpg:
            display_name: Med
            height: 617
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3693
            is_licensable: true
            width: 5985
          small_jpg:
            display_name: Small
            height: 309
            is_licensable: true
            width: 500
          thumb_170:
            height: 105
            url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
            width: 170
          thumb_220:
            height: 136
            url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
            width: 220
          watermark_1500:
            height: 926
            url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
            width: 1500
          watermark_450:
            height: 278
            url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
            width: 450
        byline: Jon Super/AP/Shutterstock
        caption: ""
        categories:
        - name: Sport
        date_taken: 2021-05-11T00:00:00.000Z
        id: 10687730b
        keywords:
        - england
        - europe
        - leicester city fc
        - manchester
        - manchester united fc
        - men's soccer
        - men's sports
        - premier league
        - professional soccer
        - soccer
        - sports
        - united kingdom
        - western europe
        - wsoc
      properties:
        title:
          example: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          type: string
        description:
          example: "Security and stewards stand outside the Old Trafford stadium in\
            \ Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          type: string
        aspect:
          example: 1.621
          type: number
        assets:
          properties:
            medium_jpg:
              properties:
                display_name:
                  example: Med
                  type: string
                height:
                  example: 617
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 1000
                  type: number
              type: object
            original:
              properties:
                display_name:
                  example: Original
                  type: string
                height:
                  example: 3693
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 5985
                  type: number
              type: object
            small_jpg:
              properties:
                display_name:
                  example: Small
                  type: string
                height:
                  example: 309
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 500
                  type: number
              type: object
            thumb_170:
              properties:
                height:
                  example: 105
                  type: number
                url:
                  example: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
                  type: string
                width:
                  example: 170
                  type: number
              type: object
            thumb_220:
              properties:
                height:
                  example: 136
                  type: number
                url:
                  example: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
                  type: string
                width:
                  example: 220
                  type: number
              type: object
            watermark_1500:
              properties:
                height:
                  example: 926
                  type: number
                url:
                  example: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
                  type: string
                width:
                  example: 1500
                  type: number
              type: object
            watermark_450:
              properties:
                height:
                  example: 278
                  type: number
                url:
                  example: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
                  type: string
                width:
                  example: 450
                  type: number
              type: object
          type: object
        byline:
          example: Jon Super/AP/Shutterstock
          type: string
        caption:
          example: ""
          type: string
        categories:
          items:
            properties:
              name:
                example: Sport
                type: string
            type: object
          type: array
        date_taken:
          example: 2021-05-11T00:00:00.000Z
          type: string
        id:
          example: 10687730b
          type: string
        keywords:
          items:
            example: england
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-title:
      example: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-description:
      example: "Security and stewards stand outside the Old Trafford stadium in Manchester,\
        \ England, ahead of the English Premier League soccer match between Manchester\
        \ United and Leicester City. This is the first Manchester United home match\
        \ since fans protested against American owner Joel Glazer, forcing the postponement\
        \ of the team's Premier League game against Liverpool. The protests prompted\
        \ Glazer to publish a letter in which he pledged to accelerate discussions\
        \ with fans about supporters being able to have a greater say at the club"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-aspect:
      example: 1.621
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-byline:
      example: Jon Super/AP/Shutterstock
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-caption:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-date_taken:
      example: 2021-05-11T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialContent-properties-id:
      example: 10687730b
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCoverItem:
      example:
        height: 117
        id: 9763363q
        url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
        width: 170
      properties:
        height:
          example: 117
          type: number
        id:
          example: 9763363q
          type: string
        url:
          example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          type: string
        width:
          example: 170
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCoverItem-properties-height:
      example: 117
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCoverItem-properties-id:
      example: 9763363q
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCoverItem-properties-url:
      example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialCoverItem-properties-width:
      example: 170
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageCategoryResults:
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      properties:
        data:
          items:
            properties:
              name:
                example: Animal
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeed:
      example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      properties:
        cover_item:
          properties:
            height:
              example: 117
              type: number
            id:
              example: 9763363qX
              type: string
            url:
              example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
              type: string
            width:
              example: 170
              type: number
          type: object
        created_time:
          example: 2018-07-17T12:42:03.000Z
          type: string
        id:
          example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
          type: string
        name:
          example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          type: string
        total_item_count:
          example: 38
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-created_time:
      example: 2018-07-17T12:42:03.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-id:
      example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-name:
      example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
        \ Day 2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeed-properties-total_item_count:
      example: 38
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeedList:
      example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 5300
      properties:
        data:
          items:
            properties:
              cover_item:
                properties:
                  height:
                    example: 117
                    type: number
                  id:
                    example: 9763363qX
                    type: string
                  url:
                    example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
                    type: string
                  width:
                    example: 170
                    type: number
                type: object
              created_time:
                example: 2018-07-17T12:42:03.000Z
                type: string
              id:
                example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
                type: string
              name:
                example: "Prince Charles and Camilla Duchess of Cornwall visit to\
                  \ Cornwall, Day 2"
                type: string
              total_item_count:
                example: 38
                type: number
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 1
          type: number
        total_count:
          example: 5300
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialImageLivefeedList-properties-total_count:
      example: 5300
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeed:
      example:
        cover_item:
          height: 117
          id: 9763363qX
          url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
          width: 170
        created_time: 2018-07-17T12:42:03.000Z
        id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
        name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall, Day\
          \ 2"
        total_item_count: 38
      properties:
        cover_item:
          properties:
            height:
              example: 117
              type: number
            id:
              example: 9763363qX
              type: string
            url:
              example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
              type: string
            width:
              example: 170
              type: number
          type: object
        created_time:
          example: 2018-07-17T12:42:03.000Z
          type: string
        id:
          example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          type: string
        name:
          example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          type: string
        total_item_count:
          example: 38
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeed-properties-created_time:
      example: 2018-07-17T12:42:03.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeed-properties-id:
      example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeed-properties-name:
      example: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
        \ Day 2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeed-properties-total_item_count:
      example: 38
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeedList:
      example:
        data:
        - cover_item:
            height: 117
            id: 9763363qX
            url: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
            width: 170
          created_time: 2018-07-17T12:42:03.000Z
          id: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
          name: "Prince Charles and Camilla Duchess of Cornwall visit to Cornwall,\
            \ Day 2"
          total_item_count: 38
        page: 1
        per_page: 1
        total_count: 56
      properties:
        data:
          items:
            properties:
              cover_item:
                properties:
                  height:
                    example: 117
                    type: number
                  id:
                    example: 9763363qX
                    type: string
                  url:
                    example: https://editorial01.qa.shuttercorp.net/thumb/9763363q/51e28f39/Shutterstock_9763363q.jpg
                    type: string
                  width:
                    example: 170
                    type: number
                type: object
              created_time:
                example: 2018-07-17T12:42:03.000Z
                type: string
              id:
                example: 2018%2F07%2F17%2FPrince%20Charles%20and%20Camilla%20Duchess%20of%20Cornwall%20visit%20to%20Cornwall%2C%20Day%202X
                type: string
              name:
                example: "Prince Charles and Camilla Duchess of Cornwall visit to\
                  \ Cornwall, Day 2"
                type: string
              total_item_count:
                example: 38
                type: number
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 1
          type: number
        total_count:
          example: 56
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialLivefeedList-properties-total_count:
      example: 56
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults:
      example:
        data:
        - title: "Soccer Premier League, Manchester, United Kingdom - 11 May 2021"
          description: "Security and stewards stand outside the Old Trafford stadium\
            \ in Manchester, England, ahead of the English Premier League soccer match\
            \ between Manchester United and Leicester City. This is the first Manchester\
            \ United home match since fans protested against American owner Joel Glazer,\
            \ forcing the postponement of the team's Premier League game against Liverpool.\
            \ The protests prompted Glazer to publish a letter in which he pledged\
            \ to accelerate discussions with fans about supporters being able to have\
            \ a greater say at the club"
          aspect: 1.621
          assets:
            medium_jpg:
              display_name: Med
              height: 617
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3693
              is_licensable: true
              width: 5985
            small_jpg:
              display_name: Small
              height: 309
              is_licensable: true
              width: 500
            thumb_170:
              height: 105
              url: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
              width: 170
            thumb_220:
              height: 136
              url: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
              width: 220
            watermark_1500:
              height: 926
              url: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
              width: 1500
            watermark_450:
              height: 278
              url: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
              width: 450
          byline: Jon Super/AP/Shutterstock
          caption: ""
          categories:
          - name: Sport
          date_taken: 2021-05-11T00:00:00.000Z
          id: 10687730bX
          keywords:
          - england
          - europe
          - leicester city fc
          - manchester
          - manchester united fc
          - men's soccer
          - men's sports
          - premier league
          - professional soccer
          - soccer
          - sports
          - united kingdom
          - western europe
          - wsoc
        next: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
        per_page: 1
        prev: ""
        search_id: BaMzOAkpHIvfnuWVRFs1ag
        total_count: 46845
      properties:
        data:
          items:
            properties:
              title:
                example: "Soccer Premier League, Manchester, United Kingdom - 11 May\
                  \ 2021"
                type: string
              description:
                example: "Security and stewards stand outside the Old Trafford stadium\
                  \ in Manchester, England, ahead of the English Premier League soccer\
                  \ match between Manchester United and Leicester City. This is the\
                  \ first Manchester United home match since fans protested against\
                  \ American owner Joel Glazer, forcing the postponement of the team's\
                  \ Premier League game against Liverpool. The protests prompted Glazer\
                  \ to publish a letter in which he pledged to accelerate discussions\
                  \ with fans about supporters being able to have a greater say at\
                  \ the club"
                type: string
              aspect:
                example: 1.621
                type: number
              assets:
                properties:
                  medium_jpg:
                    properties:
                      display_name:
                        example: Med
                        type: string
                      height:
                        example: 617
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 1000
                        type: number
                    type: object
                  original:
                    properties:
                      display_name:
                        example: Original
                        type: string
                      height:
                        example: 3693
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 5985
                        type: number
                    type: object
                  small_jpg:
                    properties:
                      display_name:
                        example: Small
                        type: string
                      height:
                        example: 309
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 500
                        type: number
                    type: object
                  thumb_170:
                    properties:
                      height:
                        example: 105
                        type: number
                      url:
                        example: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
                        type: string
                      width:
                        example: 170
                        type: number
                    type: object
                  thumb_220:
                    properties:
                      height:
                        example: 136
                        type: number
                      url:
                        example: https://editorial01.qa.shuttercorp.net/thumb-220/10687730b/927a6ebe/Shutterstock_10687730b.jpg
                        type: string
                      width:
                        example: 220
                        type: number
                    type: object
                  watermark_1500:
                    properties:
                      height:
                        example: 926
                        type: number
                      url:
                        example: https://editorial01.qa.shuttercorp.net/wm-preview-1500/10687730b/ee2d7ae1/Shutterstock_10687730b.jpg
                        type: string
                      width:
                        example: 1500
                        type: number
                    type: object
                  watermark_450:
                    properties:
                      height:
                        example: 278
                        type: number
                      url:
                        example: https://editorial01.qa.shuttercorp.net/wm-preview-450/10687730b/ff2443ad/Shutterstock_10687730b.jpg
                        type: string
                      width:
                        example: 450
                        type: number
                    type: object
                type: object
              byline:
                example: Jon Super/AP/Shutterstock
                type: string
              caption:
                example: ""
                type: string
              categories:
                items:
                  properties:
                    name:
                      example: Sport
                      type: string
                  type: object
                type: array
              date_taken:
                example: 2021-05-11T00:00:00.000Z
                type: string
              id:
                example: 10687730bX
                type: string
              keywords:
                items:
                  example: england
                  type: string
                type: array
            type: object
          type: array
        next:
          example: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
          type: string
        per_page:
          example: 1
          type: number
        prev:
          example: ""
          type: string
        search_id:
          example: BaMzOAkpHIvfnuWVRFs1ag
          type: string
        total_count:
          example: 46845
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults-properties-next:
      example: eyJ2IjoyLCJzIjoxLCJwIjpbMF19
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults-properties-prev:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults-properties-search_id:
      example: BaMzOAkpHIvfnuWVRFs1ag
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialSearchResults-properties-total_count:
      example: 46845
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent:
      example:
        title: "Hong Kong kicks off international e-Sports competition, China - 24\
          \ Aug 2018"
        description: "Members of the TyLoo e-Sports team from China prepare to face\
          \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia) e-Sports\
          \ and Music Festival Hong Kong 2018, Hong Kong, China, 24 August 2018. The\
          \ festival runs from 24 to 26 August with professional gamers from around\
          \ the world competing in international e-sports tournaments."
        aspect: 1.481
        assets:
          medium_jpg:
            display_name: Med
            height: 675
            is_licensable: true
            width: 1000
          original:
            display_name: Original
            height: 3263
            is_licensable: true
            width: 4831
          small_jpg:
            display_name: Small
            height: 337
            is_licensable: true
            width: 500
          thumb_170:
            height: 115
            url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
            width: 170
          thumb_220:
            height: 149
            url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
            width: 220
          watermark_1500:
            height: 1500
            url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
            width: 1040
          watermark_450:
            height: 304
            url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
            width: 450
        byline: ALEX HOFFORD/EPA-EFE/Shutterstock
        caption: ""
        categories: []
        commercial_status:
          status: available
        date_taken: 2018-08-24T00:00:00.000Z
        id: 9804979n
        keywords: []
        rights:
          countries: "CAN,+DEU,+GBR,+USA,-*"
        supplier_code: EPA
        updated_time: 2019-07-16T00:04:44.000Z
        updates:
        - addition
      properties:
        title:
          example: "Hong Kong kicks off international e-Sports competition, China\
            \ - 24 Aug 2018"
          type: string
        description:
          example: "Members of the TyLoo e-Sports team from China prepare to face\
            \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia)\
            \ e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August\
            \ 2018. The festival runs from 24 to 26 August with professional gamers\
            \ from around the world competing in international e-sports tournaments."
          type: string
        aspect:
          example: 1.481
          type: number
        assets:
          properties:
            medium_jpg:
              properties:
                display_name:
                  example: Med
                  type: string
                height:
                  example: 675
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 1000
                  type: number
              type: object
            original:
              properties:
                display_name:
                  example: Original
                  type: string
                height:
                  example: 3263
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 4831
                  type: number
              type: object
            small_jpg:
              properties:
                display_name:
                  example: Small
                  type: string
                height:
                  example: 337
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 500
                  type: number
              type: object
            thumb_170:
              properties:
                height:
                  example: 115
                  type: number
                url:
                  example: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
                  type: string
                width:
                  example: 170
                  type: number
              type: object
            thumb_220:
              properties:
                height:
                  example: 149
                  type: number
                url:
                  example: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
                  type: string
                width:
                  example: 220
                  type: number
              type: object
            watermark_1500:
              properties:
                height:
                  example: 1500
                  type: number
                url:
                  example: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
                  type: string
                width:
                  example: 1040
                  type: number
              type: object
            watermark_450:
              properties:
                height:
                  example: 304
                  type: number
                url:
                  example: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
                  type: string
                width:
                  example: 450
                  type: number
              type: object
          type: object
        byline:
          example: ALEX HOFFORD/EPA-EFE/Shutterstock
          type: string
        caption:
          example: ""
          type: string
        categories:
          items:
            type: string
          type: array
        commercial_status:
          properties:
            status:
              example: available
              type: string
          type: object
        date_taken:
          example: 2018-08-24T00:00:00.000Z
          type: string
        id:
          example: 9804979n
          type: string
        keywords:
          items:
            type: string
          type: array
        rights:
          properties:
            countries:
              example: "CAN,+DEU,+GBR,+USA,-*"
              type: string
          type: object
        supplier_code:
          example: EPA
          type: string
        updated_time:
          example: 2019-07-16T00:04:44.000Z
          type: string
        updates:
          items:
            example: addition
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-title:
      example: "Hong Kong kicks off international e-Sports competition, China - 24\
        \ Aug 2018"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-description:
      example: "Members of the TyLoo e-Sports team from China prepare to face off\
        \ against the Kinguin e-Sports team from Poland at the ICBC (Asia) e-Sports\
        \ and Music Festival Hong Kong 2018, Hong Kong, China, 24 August 2018. The\
        \ festival runs from 24 to 26 August with professional gamers from around\
        \ the world competing in international e-sports tournaments."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-aspect:
      example: 1.481
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-byline:
      example: ALEX HOFFORD/EPA-EFE/Shutterstock
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-caption:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-date_taken:
      example: 2018-08-24T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-id:
      example: 9804979n
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-rights-properties-countries:
      example: "CAN,+DEU,+GBR,+USA,-*"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-supplier_code:
      example: EPA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-updated_time:
      example: 2019-07-16T00:04:44.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedResults:
      example:
        data:
        - title: "Hong Kong kicks off international e-Sports competition, China -\
            \ 24 Aug 2018"
          description: "Members of the TyLoo e-Sports team from China prepare to face\
            \ off against the Kinguin e-Sports team from Poland at the ICBC (Asia)\
            \ e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August\
            \ 2018. The festival runs from 24 to 26 August with professional gamers\
            \ from around the world competing in international e-sports tournaments."
          aspect: 1.481
          assets:
            medium_jpg:
              display_name: Med
              height: 675
              is_licensable: true
              width: 1000
            original:
              display_name: Original
              height: 3263
              is_licensable: true
              width: 4831
            small_jpg:
              display_name: Small
              height: 337
              is_licensable: true
              width: 500
            thumb_170:
              height: 115
              url: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
              width: 170
            thumb_220:
              height: 149
              url: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
              width: 220
            watermark_1500:
              height: 1500
              url: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
              width: 1040
            watermark_450:
              height: 304
              url: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
              width: 450
          byline: ALEX HOFFORD/EPA-EFE/Shutterstock
          caption: ""
          categories: []
          commercial_status:
            status: available
          date_taken: 2018-08-24T00:00:00.000Z
          id: 9804979nX
          keywords: []
          rights:
            countries: "CAN,+DEU,+GBR,+USA,-*"
          supplier_code: EPA
          updated_time: 2019-07-16T00:04:44.000Z
          updates:
          - addition
        next: eyJ2IjoxLCJzIjoxfQ==
        per_page: 1
        prev: ""
      properties:
        data:
          items:
            properties:
              title:
                example: "Hong Kong kicks off international e-Sports competition,\
                  \ China - 24 Aug 2018"
                type: string
              description:
                example: "Members of the TyLoo e-Sports team from China prepare to\
                  \ face off against the Kinguin e-Sports team from Poland at the\
                  \ ICBC (Asia) e-Sports and Music Festival Hong Kong 2018, Hong Kong,\
                  \ China, 24 August 2018. The festival runs from 24 to 26 August\
                  \ with professional gamers from around the world competing in international\
                  \ e-sports tournaments."
                type: string
              aspect:
                example: 1.481
                type: number
              assets:
                properties:
                  medium_jpg:
                    properties:
                      display_name:
                        example: Med
                        type: string
                      height:
                        example: 675
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 1000
                        type: number
                    type: object
                  original:
                    properties:
                      display_name:
                        example: Original
                        type: string
                      height:
                        example: 3263
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 4831
                        type: number
                    type: object
                  small_jpg:
                    properties:
                      display_name:
                        example: Small
                        type: string
                      height:
                        example: 337
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 500
                        type: number
                    type: object
                  thumb_170:
                    properties:
                      height:
                        example: 115
                        type: number
                      url:
                        example: https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg
                        type: string
                      width:
                        example: 170
                        type: number
                    type: object
                  thumb_220:
                    properties:
                      height:
                        example: 149
                        type: number
                      url:
                        example: https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg
                        type: string
                      width:
                        example: 220
                        type: number
                    type: object
                  watermark_1500:
                    properties:
                      height:
                        example: 1500
                        type: number
                      url:
                        example: https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg
                        type: string
                      width:
                        example: 1040
                        type: number
                    type: object
                  watermark_450:
                    properties:
                      height:
                        example: 304
                        type: number
                      url:
                        example: https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg
                        type: string
                      width:
                        example: 450
                        type: number
                    type: object
                type: object
              byline:
                example: ALEX HOFFORD/EPA-EFE/Shutterstock
                type: string
              caption:
                example: ""
                type: string
              categories:
                items:
                  type: string
                type: array
              commercial_status:
                properties:
                  status:
                    example: available
                    type: string
                type: object
              date_taken:
                example: 2018-08-24T00:00:00.000Z
                type: string
              id:
                example: 9804979nX
                type: string
              keywords:
                items:
                  type: string
                type: array
              rights:
                properties:
                  countries:
                    example: "CAN,+DEU,+GBR,+USA,-*"
                    type: string
                type: object
              supplier_code:
                example: EPA
                type: string
              updated_time:
                example: 2019-07-16T00:04:44.000Z
                type: string
              updates:
                items:
                  example: addition
                  type: string
                type: array
            type: object
          type: array
        next:
          example: eyJ2IjoxLCJzIjoxfQ==
          type: string
        per_page:
          example: 1
          type: number
        prev:
          example: ""
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-next:
      example: eyJ2IjoxLCJzIjoxfQ==
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialUpdatedResults-properties-prev:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoAssets:
      example:
        original:
          display_name: HD
          file_size: 82233387
          format: avc1
          fps: 30
          height: 1080
          is_licensable: true
          width: 1080
        preview_mp4:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
        preview_webm:
          url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
        thumb_jpg:
          url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
      properties:
        original:
          properties:
            display_name:
              example: HD
              type: string
            file_size:
              example: 82233387
              type: number
            format:
              example: avc1
              type: string
            fps:
              example: 30
              type: number
            height:
              example: 1080
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 1080
              type: number
          type: object
        preview_mp4:
          properties:
            url:
              example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
              type: string
          type: object
        preview_webm:
          properties:
            url:
              example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
              type: string
          type: object
        thumb_jpg:
          properties:
            url:
              example: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoCategoryResults:
      example:
        data:
        - name: Animal
        - name: Awards
        - name: Art
        - name: Film Stills
      properties:
        data:
          items:
            properties:
              name:
                example: Animal
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent:
      example:
        title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota, USA\
          \ - 13 Nov 2020"
        description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
          \ with our family since a gosling. Peeps has made appearances on our local\
          \ news channels, TV shows, and local newspapers. He has been trained to\
          \ fly next to four wheelers, jet ski's, and boats. He has brought joy to\
          \ many people during the pandemic including those with cancer.\""
        aspect: 1
        assets:
          original:
            display_name: HD
            file_size: 82233387
            format: avc1
            fps: 30
            height: 1080
            is_licensable: true
            width: 1080
          preview_mp4:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
          preview_webm:
            url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
          thumb_jpg:
            url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
        byline: ViralHog/Shutterstock
        caption: ""
        categories: []
        date_taken: 2020-11-13T00:00:00.000Z
        id: 10679854a
        keywords:
        - "2020"
        - adorable
        - birds
        - bizarre
        - canadian goose
        - cute
        - domesticated animals
        - entertainment
        - feel good
        - flew
        - flies
        - fly
        - flying
        - fun
        - goose
        - jet skis
        - nature
        - odd
        - pets
        - played
        - playing
        - plays
        - prior lake
        - sports
        - strange
        - sweet
        - usa
        - viralhog
        - virals
        - water sports
        - weird
      properties:
        title:
          example: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
            \ USA - 13 Nov 2020"
          type: string
        description:
          example: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
            \ with our family since a gosling. Peeps has made appearances on our local\
            \ news channels, TV shows, and local newspapers. He has been trained to\
            \ fly next to four wheelers, jet ski's, and boats. He has brought joy\
            \ to many people during the pandemic including those with cancer.\""
          type: string
        aspect:
          example: 1
          type: number
        assets:
          properties:
            original:
              properties:
                display_name:
                  example: HD
                  type: string
                file_size:
                  example: 82233387
                  type: number
                format:
                  example: avc1
                  type: string
                fps:
                  example: 30
                  type: number
                height:
                  example: 1080
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 1080
                  type: number
              type: object
            preview_mp4:
              properties:
                url:
                  example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
                  type: string
              type: object
            preview_webm:
              properties:
                url:
                  example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
                  type: string
              type: object
            thumb_jpg:
              properties:
                url:
                  example: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
                  type: string
              type: object
          type: object
        byline:
          example: ViralHog/Shutterstock
          type: string
        caption:
          example: ""
          type: string
        categories:
          items:
            type: string
          type: array
        date_taken:
          example: 2020-11-13T00:00:00.000Z
          type: string
        id:
          example: 10679854a
          type: string
        keywords:
          items:
            example: "2020"
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-title:
      example: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota, USA\
        \ - 13 Nov 2020"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-description:
      example: "Info from Licensor: \"Peeps the Canadian Goose has been raised with\
        \ our family since a gosling. Peeps has made appearances on our local news\
        \ channels, TV shows, and local newspapers. He has been trained to fly next\
        \ to four wheelers, jet ski's, and boats. He has brought joy to many people\
        \ during the pandemic including those with cancer.\""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-aspect:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-byline:
      example: ViralHog/Shutterstock
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-caption:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-date_taken:
      example: 2020-11-13T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoContent-properties-id:
      example: 10679854a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults:
      example:
        data:
        - title: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
            \ USA - 13 Nov 2020"
          description: "Info from Licensor: \"Peeps the Canadian Goose has been raised\
            \ with our family since a gosling. Peeps has made appearances on our local\
            \ news channels, TV shows, and local newspapers. He has been trained to\
            \ fly next to four wheelers, jet ski's, and boats. He has brought joy\
            \ to many people during the pandemic including those with cancer.\""
          aspect: 1
          assets:
            original:
              display_name: HD
              file_size: 82233387
              format: avc1
              fps: 30
              height: 1080
              is_licensable: true
              width: 1080
            preview_mp4:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
            preview_webm:
              url: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
            thumb_jpg:
              url: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
          byline: ViralHog/Shutterstock
          caption: ""
          categories: []
          date_taken: 2020-11-13T00:00:00.000Z
          id: 10679854aX
          keywords:
          - "2020"
          - adorable
          - birds
          - bizarre
          - canadian goose
          - cute
          - domesticated animals
          - entertainment
          - feel good
          - flew
          - flies
          - fly
          - flying
          - fun
          - goose
          - jet skis
          - nature
          - odd
          - pets
          - played
          - playing
          - plays
          - prior lake
          - sports
          - strange
          - sweet
          - usa
          - viralhog
          - virals
          - water sports
          - weird
        next: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
        per_page: 1
        prev: ""
        search_id: zhmz9zLmpQehdTPvg8cacQ
        total_count: 331
      properties:
        data:
          items:
            properties:
              title:
                example: "Peeps the Goose Has a Blast on a Jet Ski, Prior Lake, Minnesota,\
                  \ USA - 13 Nov 2020"
                type: string
              description:
                example: "Info from Licensor: \"Peeps the Canadian Goose has been\
                  \ raised with our family since a gosling. Peeps has made appearances\
                  \ on our local news channels, TV shows, and local newspapers. He\
                  \ has been trained to fly next to four wheelers, jet ski's, and\
                  \ boats. He has brought joy to many people during the pandemic including\
                  \ those with cancer.\""
                type: string
              aspect:
                example: 1
                type: number
              assets:
                properties:
                  original:
                    properties:
                      display_name:
                        example: HD
                        type: string
                      file_size:
                        example: 82233387
                        type: number
                      format:
                        example: avc1
                        type: string
                      fps:
                        example: 30
                        type: number
                      height:
                        example: 1080
                        type: number
                      is_licensable:
                        example: true
                        type: boolean
                      width:
                        example: 1080
                        type: number
                    type: object
                  preview_mp4:
                    properties:
                      url:
                        example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
                        type: string
                    type: object
                  preview_webm:
                    properties:
                      url:
                        example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-webm/10679854a/M4T6A63fN2j5g929MTI4NjY=/Shutterstock_10679854a.webm
                        type: string
                    type: object
                  thumb_jpg:
                    properties:
                      url:
                        example: https://qa.editorial-cdn.shuttercorp.net/thumb-1/10679854a/M5TcAf30Ncjcge2eMTI4NjY=/Shutterstock_10679854a.jpg
                        type: string
                    type: object
                type: object
              byline:
                example: ViralHog/Shutterstock
                type: string
              caption:
                example: ""
                type: string
              categories:
                items:
                  type: string
                type: array
              date_taken:
                example: 2020-11-13T00:00:00.000Z
                type: string
              id:
                example: 10679854aX
                type: string
              keywords:
                items:
                  example: "2020"
                  type: string
                type: array
            type: object
          type: array
        next:
          example: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
          type: string
        per_page:
          example: 1
          type: number
        prev:
          example: ""
          type: string
        search_id:
          example: zhmz9zLmpQehdTPvg8cacQ
          type: string
        total_count:
          example: 331
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-next:
      example: eyJ2IjoyLCJzIjoyMCwicCI6WzBdfQ==
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-per_page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-prev:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-search_id:
      example: zhmz9zLmpQehdTPvg8cacQ
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EditorialVideoSearchResults-properties-total_count:
      example: 331
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Error:
      example:
        code: VALIDATION_INVALID_TYPE
        data: '''10'''
        message: "Invalid type: string should be integer"
        path: $.query.page
      properties:
        code:
          example: VALIDATION_INVALID_TYPE
          type: string
        data:
          example: '''10'''
          type: string
        message:
          example: "Invalid type: string should be integer"
          type: string
        path:
          example: $.query.page
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Error-properties-code:
      example: VALIDATION_INVALID_TYPE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Error-properties-data:
      example: '''10'''
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Error-properties-message:
      example: "Invalid type: string should be integer"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Error-properties-path:
      example: $.query.page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection:
      example:
        cover_item:
          url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
        created_time: 2021-07-07T13:10:24.000Z
        id: "19853"
        items_updated_time: 2021-07-08T12:33:37.000Z
        name: Exercise & Fitness
        total_item_count: 82
        updated_time: 2021-07-07T13:10:24.000Z
      properties:
        cover_item:
          properties:
            url:
              example: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
              type: string
          type: object
        created_time:
          example: 2021-07-07T13:10:24.000Z
          type: string
        id:
          example: "19853"
          type: string
        items_updated_time:
          example: 2021-07-08T12:33:37.000Z
          type: string
        name:
          example: Exercise & Fitness
          type: string
        total_item_count:
          example: 82
          type: number
        updated_time:
          example: 2021-07-07T13:10:24.000Z
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-created_time:
      example: 2021-07-07T13:10:24.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-id:
      example: "19853"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-items_updated_time:
      example: 2021-07-08T12:33:37.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-name:
      example: Exercise & Fitness
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-total_item_count:
      example: 82
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollection-properties-updated_time:
      example: 2021-07-07T13:10:24.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollectionCoverItem:
      example:
        url: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
      properties:
        url:
          example: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FeaturedCollectionCoverItem-properties-url:
      example: https://ak.picdn.net/assets/cms/b467415246debdab45825d915a548f8f79b57882-Collection_1_Thumnail.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GenreList:
      example:
        data:
        - Rock
        - Pop > Singer-Songwriter
        - Pop > Synth Pop
        - Production / Film Scores
      properties:
        data:
          items:
            example: Rock
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image:
      example:
        description: cropped image of woman gardening
        aspect: 1.5
        assets:
          huge_thumb:
            height: 260
            url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
            width: 390
          large_thumb:
            height: 100
            url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 150
          mosaic:
            height: 167
            url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
            width: 250
          preview:
            height: 300
            url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 450
          preview_1000:
            height: 667
            url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
            width: 1000
          preview_1500:
            height: 1000
            url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 1500
          small_thumb:
            height: 67
            url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
            width: 100
        contributor:
          id: 250738318X
        has_model_release: true
        id: 1572478477X
        image_type: photo
        media_type: image
        original_filename: 123.jpg
      properties:
        description:
          example: cropped image of woman gardening
          type: string
        aspect:
          example: 1.5
          type: number
        assets:
          properties:
            huge_thumb:
              properties:
                height:
                  example: 260
                  type: number
                url:
                  example: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
                  type: string
                width:
                  example: 390
                  type: number
              type: object
            large_thumb:
              properties:
                height:
                  example: 100
                  type: number
                url:
                  example: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                  type: string
                width:
                  example: 150
                  type: number
              type: object
            mosaic:
              properties:
                height:
                  example: 167
                  type: number
                url:
                  example: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
                  type: string
                width:
                  example: 250
                  type: number
              type: object
            preview:
              properties:
                height:
                  example: 300
                  type: number
                url:
                  example: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                  type: string
                width:
                  example: 450
                  type: number
              type: object
            preview_1000:
              properties:
                height:
                  example: 667
                  type: number
                url:
                  example: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
                  type: string
                width:
                  example: 1000
                  type: number
              type: object
            preview_1500:
              properties:
                height:
                  example: 1000
                  type: number
                url:
                  example: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                  type: string
                width:
                  example: 1500
                  type: number
              type: object
            small_thumb:
              properties:
                height:
                  example: 67
                  type: number
                url:
                  example: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                  type: string
                width:
                  example: 100
                  type: number
              type: object
          type: object
        contributor:
          properties:
            id:
              example: 250738318X
              type: string
          type: object
        has_model_release:
          example: true
          type: boolean
        id:
          example: 1572478477X
          type: string
        image_type:
          example: photo
          type: string
        media_type:
          example: image
          type: string
        original_filename:
          example: 123.jpg
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-description:
      example: cropped image of woman gardening
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-aspect:
      example: 1.5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-has_model_release:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-id:
      example: 1572478477X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-image_type:
      example: photo
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Image-properties-media_type:
      example: image
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageAssets:
      example:
        huge_thumb:
          height: 260
          url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
          width: 390
        large_thumb:
          height: 100
          url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 150
        preview:
          height: 300
          url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 450
        preview_1000:
          height: 667
          url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
          width: 1000
        preview_1500:
          height: 1000
          url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 1500
        small_thumb:
          height: 67
          url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          width: 100
      properties:
        huge_thumb:
          properties:
            height:
              example: 260
              type: number
            url:
              example: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              type: string
            width:
              example: 390
              type: number
          type: object
        large_thumb:
          properties:
            height:
              example: 100
              type: number
            url:
              example: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              type: string
            width:
              example: 150
              type: number
          type: object
        preview:
          properties:
            height:
              example: 300
              type: number
            url:
              example: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              type: string
            width:
              example: 450
              type: number
          type: object
        preview_1000:
          properties:
            height:
              example: 667
              type: number
            url:
              example: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              type: string
            width:
              example: 1000
              type: number
          type: object
        preview_1500:
          properties:
            height:
              example: 1000
              type: number
            url:
              example: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              type: string
            width:
              example: 1500
              type: number
          type: object
        small_thumb:
          properties:
            height:
              example: 67
              type: number
            url:
              example: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              type: string
            width:
              example: 100
              type: number
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageCreateRequest:
      example:
        base64_image: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
      properties:
        base64_image:
          example: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageCreateRequest-properties-base64_image:
      example: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageCreateResponse:
      example:
        id: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      properties:
        id:
          example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageCreateResponse-properties-id:
      example: Udb14e1c3540bdbf82b4b3fe12d3a44f2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSearchResults:
      example:
        data:
        - description: cropped image of woman gardening
          aspect: 1.5
          assets:
            huge_thumb:
              height: 260
              url: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
              width: 390
            large_thumb:
              height: 100
              url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 150
            mosaic:
              height: 167
              url: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
              width: 250
            preview:
              height: 300
              url: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 450
            preview_1000:
              height: 667
              url: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
              width: 1000
            preview_1500:
              height: 1000
              url: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 1500
            small_thumb:
              height: 67
              url: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
              width: 100
          contributor:
            id: 250738318X
          has_model_release: true
          id: 1572478477X
          image_type: photo
          media_type: image
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        spellcheck_info: {}
        total_count: 45
      properties:
        data:
          items:
            properties:
              description:
                example: cropped image of woman gardening
                type: string
              aspect:
                example: 1.5
                type: number
              assets:
                properties:
                  huge_thumb:
                    properties:
                      height:
                        example: 260
                        type: number
                      url:
                        example: https://image.shutterstock.com/image-photo/cropped-image-woman-gardening-260nw-1572478477.jpg
                        type: string
                      width:
                        example: 390
                        type: number
                    type: object
                  large_thumb:
                    properties:
                      height:
                        example: 100
                        type: number
                      url:
                        example: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                        type: string
                      width:
                        example: 150
                        type: number
                    type: object
                  mosaic:
                    properties:
                      height:
                        example: 167
                        type: number
                      url:
                        example: https://image.shutterstock.com/image-photo/stock-photo-cropped-image-of-woman-gardening-250nw-1572478477.jpg
                        type: string
                      width:
                        example: 250
                        type: number
                    type: object
                  preview:
                    properties:
                      height:
                        example: 300
                        type: number
                      url:
                        example: https://image.shutterstock.com/display_pic_with_logo/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                        type: string
                      width:
                        example: 450
                        type: number
                    type: object
                  preview_1000:
                    properties:
                      height:
                        example: 667
                        type: number
                      url:
                        example: https://ak.picdn.net/shutterstock/photos/1572478477/watermark_1000/1706028c641ea2f443057287c67d9b91/preview_1000-1572478477.jpg
                        type: string
                      width:
                        example: 1000
                        type: number
                    type: object
                  preview_1500:
                    properties:
                      height:
                        example: 1000
                        type: number
                      url:
                        example: https://image.shutterstock.com/z/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                        type: string
                      width:
                        example: 1500
                        type: number
                    type: object
                  small_thumb:
                    properties:
                      height:
                        example: 67
                        type: number
                      url:
                        example: https://thumb7.shutterstock.com/thumb_small/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
                        type: string
                      width:
                        example: 100
                        type: number
                    type: object
                type: object
              contributor:
                properties:
                  id:
                    example: 250738318X
                    type: string
                type: object
              has_model_release:
                example: true
                type: boolean
              id:
                example: 1572478477X
                type: string
              image_type:
                example: photo
                type: string
              media_type:
                example: image
                type: string
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 5
          type: number
        search_id:
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
        spellcheck_info:
          properties: {}
          type: object
        total_count:
          example: 45
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSearchResults-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSearchResults-properties-per_page:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSearchResults-properties-search_id:
      example: 749090bb-2967-4a20-b22e-c800dc845e10
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSearchResults-properties-total_count:
      example: 45
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails:
      example:
        display_name: Med
        dpi: 300
        file_size: 860200
        format: jpg
        height: 667
        is_licensable: true
        width: 1000
      properties:
        display_name:
          example: Med
          type: string
        dpi:
          example: 300
          type: number
        file_size:
          example: 860200
          type: number
        format:
          example: jpg
          type: string
        height:
          example: 667
          type: number
        is_licensable:
          example: true
          type: boolean
        width:
          example: 1000
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-display_name:
      example: Med
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-dpi:
      example: 300
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-file_size:
      example: 860200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-format:
      example: jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-height:
      example: 617
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-is_licensable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImageSizeDetails-properties-width:
      example: 1000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Insights:
      example:
        label_performance:
        - name: Nature
          percentile_performance: 98.82123565673828
        - name: Outdoors
          percentile_performance: 98.63294982910156
      properties:
        label_performance:
          items:
            properties:
              name:
                example: Nature
                type: string
              percentile_performance:
                example: 98.82123565673828
                type: number
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instrument:
      example:
        tags:
        - Percussion
        - Aux Percs
        - Set Cymbals
        - Crash
        - Open
        - Ride
        - Set Hi-Hat
        - Set Kicks
        - Stick Snare
        - Quad Toms
        - Roto Toms
        id: bright_roomy_kit
        name: Bright Roomy Kit
        previews:
        - content_type: audio/mp3
          url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
      properties:
        tags:
          items:
            example: Percussion
            type: string
          type: array
        id:
          example: bright_roomy_kit
          type: string
        name:
          example: Bright Roomy Kit
          type: string
        previews:
          items:
            properties:
              content_type:
                example: audio/mp3
                type: string
              url:
                example: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instrument-properties-id:
      example: bright_roomy_kit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instrument-properties-name:
      example: Bright Roomy Kit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InstrumentList:
      example:
        data:
        - Orchestra
        - Organ
        - Oud
        - Pads
        - Electric Guitar
      properties:
        data:
          items:
            example: Orchestra
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instruments:
      example:
        id: bright_roomy_kitX
        name: Bright Roomy Kit
      properties:
        id:
          example: bright_roomy_kitX
          type: string
        name:
          example: Bright Roomy Kit
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instruments-properties-id:
      example: bright_roomy_kitX
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Instruments-properties-name:
      example: Bright Roomy Kit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InstrumentsListResult:
      example:
        data:
        - tags:
          - Percussion
          - Aux Percs
          - Set Cymbals
          - Crash
          - Open
          - Ride
          - Set Hi-Hat
          - Set Kicks
          - Stick Snare
          - Quad Toms
          - Roto Toms
          id: bright_roomy_kitX
          name: Bright Roomy Kit
          previews:
          - content_type: audio/mp3
            url: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
        page: 1
        per_page: 5
      properties:
        data:
          items:
            properties:
              tags:
                items:
                  example: Percussion
                  type: string
                type: array
              id:
                example: bright_roomy_kitX
                type: string
              name:
                example: Bright Roomy Kit
                type: string
              previews:
                items:
                  properties:
                    content_type:
                      example: audio/mp3
                      type: string
                    url:
                      example: https://public-cdn.ampermusic.com/instruments/previews/bright_roomy_kit_v1.mp3
                      type: string
                  type: object
                type: array
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 5
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InstrumentsListResult-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InstrumentsListResult-properties-per_page:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Language:
      example: cs
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudio:
      example:
        audio_id: "123456789"
        license: audio_platform
        search_id: "987654321"
      properties:
        audio_id:
          example: "123456789"
          type: string
        license:
          example: audio_platform
          type: string
        search_id:
          example: "987654321"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudio-properties-audio_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudio-properties-license:
      example: audio_platform
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudio-properties-search_id:
      example: "987654321"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudioRequest:
      example:
        audio:
        - audio_id: "591623"
          license: audio_platform
          metadata:
            customer_id: "12345"
      properties:
        audio:
          items:
            properties:
              audio_id:
                example: "591623"
                type: string
              license:
                example: audio_platform
                type: string
              metadata:
                properties:
                  customer_id:
                    example: "12345"
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudioResult:
      example:
        allotment_charge: 1
        audio_id: "123456789"
        download:
          url: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
        license_id: abcdef123456789ghijklmn
      properties:
        allotment_charge:
          example: 1
          type: number
        audio_id:
          example: "123456789"
          type: string
        download:
          properties:
            url:
              example: http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav
              type: string
          type: object
        license_id:
          example: abcdef123456789ghijklmn
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudioResult-properties-allotment_charge:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudioResult-properties-audio_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseAudioResult-properties-license_id:
      example: abcdef123456789ghijklmn
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContent:
      example:
        editorial_id: 10687730b
        license: premier_editorial_comp
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        size: original
      properties:
        editorial_id:
          example: 10687730b
          type: string
        license:
          example: premier_editorial_comp
          type: string
        metadata:
          properties:
            customer_id:
              example: "12345"
              type: string
            geo_location:
              example: US
              type: string
            number_viewed:
              example: "15"
              type: string
            search_term:
              example: dog
              type: string
          type: object
        size:
          example: original
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-editorial_id:
      example: 10687730b
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-license:
      example: premier_editorial_comp
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContent-properties-size:
      example: original
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContentRequest:
      example:
        country: USA
        editorial:
        - editorial_id: 10687730b
          license: premier_editorial_comp
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          size: original
      properties:
        country:
          example: USA
          type: string
        editorial:
          items:
            properties:
              editorial_id:
                example: 10687730b
                type: string
              license:
                example: premier_editorial_comp
                type: string
              metadata:
                properties:
                  customer_id:
                    example: "12345"
                    type: string
                  geo_location:
                    example: US
                    type: string
                  number_viewed:
                    example: "15"
                    type: string
                  search_term:
                    example: dog
                    type: string
                type: object
              size:
                example: original
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContentResult:
      example:
        allotment_charge: 1
        download:
          url: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
        editorial_id: "69656358"
      properties:
        allotment_charge:
          example: 1
          type: number
        download:
          properties:
            url:
              example: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
              type: string
          type: object
        editorial_id:
          example: "69656358"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContentResult-properties-allotment_charge:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialContentResult-properties-editorial_id:
      example: "69656358"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialVideoContent:
      example:
        editorial_id: 10679854a
        license: premier_editorial_video_digital_only
        metadata:
          purchase_order: "12345"
        size: original
      properties:
        editorial_id:
          example: 10679854a
          type: string
        license:
          example: premier_editorial_video_digital_only
          type: string
        metadata:
          properties:
            purchase_order:
              example: "12345"
              type: string
          type: object
        size:
          example: original
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-editorial_id:
      example: 10679854a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-license:
      example: premier_editorial_video_digital_only
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialVideoContent-properties-size:
      example: original
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseEditorialVideoContentRequest:
      example:
        country: USA
        editorial:
        - editorial_id: 10679854a
          license: premier_editorial_video_digital_only
          metadata:
            purchase_order: "12345"
          size: original
      properties:
        country:
          example: USA
          type: string
        editorial:
          items:
            properties:
              editorial_id:
                example: 10679854a
                type: string
              license:
                example: premier_editorial_video_digital_only
                type: string
              metadata:
                properties:
                  purchase_order:
                    example: "12345"
                    type: string
                type: object
              size:
                example: original
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat:
      example:
        description: Med
        format: jpg
        media_type: image
        min_resolution: 1000
        size: medium
      properties:
        description:
          example: Med
          type: string
        format:
          example: jpg
          type: string
        media_type:
          example: image
          type: string
        min_resolution:
          example: 1000
          type: number
        size:
          example: medium
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat-properties-description:
      example: Med
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat-properties-format:
      example: jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat-properties-media_type:
      example: image
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat-properties-min_resolution:
      example: 1000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseFormat-properties-size:
      example: medium
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage:
      example:
        editorial_acknowledgement: true
        format: jpg
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: small
        subscription_id: s12345678
      properties:
        editorial_acknowledgement:
          example: true
          type: boolean
        format:
          example: jpg
          type: string
        image_id:
          example: "123456789"
          type: string
        metadata:
          properties:
            customer_id:
              example: "12345"
              type: string
            geo_location:
              example: US
              type: string
            number_viewed:
              example: "15"
              type: string
            search_term:
              example: dog
              type: string
          type: object
        price:
          example: 12.34
          type: number
        show_modal:
          example: true
          type: boolean
        size:
          example: small
          type: string
        subscription_id:
          example: s12345678
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-editorial_acknowledgement:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-format:
      example: jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-image_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-price:
      example: 12.34
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-show_modal:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-size:
      example: small
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImage-properties-subscription_id:
      example: s12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageRequest:
      example:
        images:
        - editorial_acknowledgement: true
          format: jpg
          image_id: "123456789"
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          price: 12.34
          show_modal: true
          size: small
          subscription_id: s12345678
      properties:
        images:
          items:
            properties:
              editorial_acknowledgement:
                example: true
                type: boolean
              format:
                example: jpg
                type: string
              image_id:
                example: "123456789"
                type: string
              metadata:
                properties:
                  customer_id:
                    example: "12345"
                    type: string
                  geo_location:
                    example: US
                    type: string
                  number_viewed:
                    example: "15"
                    type: string
                  search_term:
                    example: dog
                    type: string
                type: object
              price:
                example: 12.34
                type: number
              show_modal:
                example: true
                type: boolean
              size:
                example: small
                type: string
              subscription_id:
                example: s12345678
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageResult:
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
        image_id: "59656357"
        price:
          local_amount: 12.34
          local_currency: EUR
      properties:
        allotment_charge:
          example: 1
          type: number
        download:
          properties:
            url:
              example: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
              type: string
          type: object
        image_id:
          example: "59656357"
          type: string
        price:
          properties:
            local_amount:
              example: 12.34
              type: number
            local_currency:
              example: EUR
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageResult-properties-allotment_charge:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageResult-properties-image_id:
      example: "59656357"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector:
      example:
        editorial_acknowledgement: true
        format: eps
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: vector
        subscription_id: s12345678
      properties:
        editorial_acknowledgement:
          example: true
          type: boolean
        format:
          example: eps
          type: string
        image_id:
          example: "123456789"
          type: string
        metadata:
          properties:
            customer_id:
              example: "12345"
              type: string
            geo_location:
              example: US
              type: string
            number_viewed:
              example: "15"
              type: string
            search_term:
              example: dog
              type: string
          type: object
        price:
          example: 12.34
          type: number
        show_modal:
          example: true
          type: boolean
        size:
          example: vector
          type: string
        subscription_id:
          example: s12345678
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-editorial_acknowledgement:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-format:
      example: eps
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-image_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-price:
      example: 12.34
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-show_modal:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-size:
      example: vector
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseImageVector-properties-subscription_id:
      example: s12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseRequestMetadata:
      example:
        customer_id: "12345"
        geo_location: US
        number_viewed: "15"
        search_term: dog
      properties:
        customer_id:
          example: "12345"
          type: string
        geo_location:
          example: US
          type: string
        number_viewed:
          example: "15"
          type: string
        search_term:
          example: dog
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFX:
      example:
        format: wav
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        sfx_id: "123456789"
        show_modal: true
        size: ambisonic
        subscription_id: s12345678
      properties:
        format:
          example: wav
          type: string
        metadata:
          properties:
            customer_id:
              example: "12345"
              type: string
            geo_location:
              example: US
              type: string
            number_viewed:
              example: "15"
              type: string
            search_term:
              example: dog
              type: string
          type: object
        sfx_id:
          example: "123456789"
          type: string
        show_modal:
          example: true
          type: boolean
        size:
          example: ambisonic
          type: string
        subscription_id:
          example: s12345678
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFX-properties-format:
      example: wav
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFX-properties-sfx_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFX-properties-subscription_id:
      example: s12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFXRequest:
      example:
        sound_effects:
        - format: wav
          metadata:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          sfx_id: "123456789"
          show_modal: true
          size: ambisonic
          subscription_id: s12345678
      properties:
        sound_effects:
          items:
            properties:
              format:
                example: wav
                type: string
              metadata:
                properties:
                  customer_id:
                    example: "12345"
                    type: string
                  geo_location:
                    example: US
                    type: string
                  number_viewed:
                    example: "15"
                    type: string
                  search_term:
                    example: dog
                    type: string
                type: object
              sfx_id:
                example: "123456789"
                type: string
              show_modal:
                example: true
                type: boolean
              size:
                example: ambisonic
                type: string
              subscription_id:
                example: s12345678
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFXResult:
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.wav"
        sfx_id: "59656357"
      properties:
        allotment_charge:
          example: 1
          type: number
        download:
          properties:
            url:
              example: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.wav"
              type: string
          type: object
        sfx_id:
          example: "59656357"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFXResult-properties-allotment_charge:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseSFXResult-properties-sfx_id:
      example: "59656357"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideo:
      example:
        size: hd
        subscription_id: s12345678
        video_id: "2140697"
      properties:
        size:
          example: hd
          type: string
        subscription_id:
          example: s12345678
          type: string
        video_id:
          example: "2140697"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideo-properties-size:
      example: hd
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideo-properties-subscription_id:
      example: s12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideo-properties-video_id:
      example: "2140697"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideoRequest:
      example:
        videos:
        - size: hd
          subscription_id: s12345678
          video_id: "2140697"
      properties:
        videos:
          items:
            properties:
              size:
                example: hd
                type: string
              subscription_id:
                example: s12345678
                type: string
              video_id:
                example: "2140697"
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideoResult:
      example:
        allotment_charge: 1
        download:
          url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
        price:
          local_amount: 12.34
          local_currency: EUR
        video_id: "123456789"
      properties:
        allotment_charge:
          example: 1
          type: number
        download:
          properties:
            url:
              example: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.mp4"
              type: string
          type: object
        price:
          properties:
            local_amount:
              example: 12.34
              type: number
            local_currency:
              example: EUR
              type: string
          type: object
        video_id:
          example: "123456789"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideoResult-properties-allotment_charge:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LicenseVideoResult-properties-video_id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Model:
      example:
        id: "123456789"
      properties:
        id:
          example: "123456789"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Model-properties-id:
      example: "123456789"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ModelRelease:
      example:
        id: 123456789X
      properties:
        id:
          example: 123456789X
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ModelRelease-properties-id:
      example: 123456789X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MoodList:
      example:
        data:
        - Action / Sports
        - Adventure / Discovery
        - Aerobics / Workout
        - Aggressive
      properties:
        data:
          items:
            example: Action / Sports
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthAccessTokenResponse:
      example:
        access_token: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
        token_type: Bearer
      properties:
        access_token:
          example: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
          type: string
        token_type:
          example: Bearer
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthAccessTokenResponse-properties-access_token:
      example: v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthAccessTokenResponse-properties-token_type:
      example: Bearer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Preview:
      example:
        content_type: audio/mp3
        url: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
      properties:
        content_type:
          example: audio/mp3
          type: string
        url:
          example: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Preview-properties-content_type:
      example: audio/mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Preview-properties-url:
      example: https://public-cdn.ampermusic.com/instruments/previews/roomy_kit_v1.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Price:
      example:
        local_amount: 12.34
        local_currency: EUR
      properties:
        local_amount:
          example: 12.34
          type: number
        local_currency:
          example: EUR
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Price-properties-local_amount:
      example: 12.34
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Price-properties-local_currency:
      example: EUR
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recommendation:
      example:
        id: 123456789X
      properties:
        id:
          example: 123456789X
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recommendation-properties-id:
      example: 123456789X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RedownloadImage:
      example:
        size: small
      properties:
        size:
          example: small
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RedownloadImage-properties-size:
      example: small
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RedownloadVideo:
      example:
        size: web
      properties:
        size:
          example: web
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RedownloadVideo-properties-size:
      example: web
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RemoveCatalogCollectionItem:
      example:
        id: 123X
      properties:
        id:
          example: 123X
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RemoveCatalogCollectionItem-properties-id:
      example: 123X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RemoveCatalogCollectionItems:
      example:
        items:
        - id: 123X
      properties:
        items:
          items:
            properties:
              id:
                example: 123X
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFX:
      example:
        contributor:
          id: "1234"
        id: 123X
        media_type: sfx
      properties:
        contributor:
          properties:
            id:
              example: "1234"
              type: string
          type: object
        id:
          example: 123X
          type: string
        media_type:
          example: sfx
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFX-properties-id:
      example: 123X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFX-properties-media_type:
      example: sfx
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXAssetDetails:
      example:
        file_size: 123
        url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      properties:
        file_size:
          example: 123
          type: number
        url:
          example: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXAssetDetails-properties-file_size:
      example: 123
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXAssetDetails-properties-url:
      example: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXAssets:
      example:
        preview_mp3:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
        waveform:
          file_size: 123
          url: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
      properties:
        preview_mp3:
          properties:
            file_size:
              example: 123
              type: number
            url:
              example: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
              type: string
          type: object
        waveform:
          properties:
            file_size:
              example: 123
              type: number
            url:
              example: https://cdn.shutterstock.com/shutterstock/sfx/11222/preview_ecom_ster/hand-throw-catch-cellphone.mp3
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXSearchResults:
      example:
        data:
        - title: Heavy Duty Interface Feedback
          description: "User interface calculations, scanning, thinking, text displayed\
            \ on screen. Screen gak or garble."
          added_date: 2022-07-29T00:00:00.000Z
          assets:
            preview_mp3:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/preview_ecom_ster/heavy-duty-interface-feedback.mp3
            waveform:
              url: https://cdn.shutterstock.com/shutterstock/sfx/21230/wvfm_img/heavy-duty-interface-feedback.png
          contributor:
            id: "321402911"
          id: 123X
          media_type: sfx
          updated_time: 2022-08-04T15:11:15.711Z
        search_id: e6f84c4c-ffdd-499b-ad89-72c65a896ead
        total_count: 14881
      properties:
        data:
          items:
            properties:
              title:
                example: Heavy Duty Interface Feedback
                type: string
              description:
                example: "User interface calculations, scanning, thinking, text displayed\
                  \ on screen. Screen gak or garble."
                type: string
              added_date:
                example: 2022-07-29T00:00:00.000Z
                type: string
              assets:
                properties:
                  preview_mp3:
                    properties:
                      url:
                        example: https://cdn.shutterstock.com/shutterstock/sfx/21230/preview_ecom_ster/heavy-duty-interface-feedback.mp3
                        type: string
                    type: object
                  waveform:
                    properties:
                      url:
                        example: https://cdn.shutterstock.com/shutterstock/sfx/21230/wvfm_img/heavy-duty-interface-feedback.png
                        type: string
                    type: object
                type: object
              contributor:
                properties:
                  id:
                    example: "321402911"
                    type: string
                type: object
              id:
                example: 123X
                type: string
              media_type:
                example: sfx
                type: string
              updated_time:
                example: 2022-08-04T15:11:15.711Z
                type: string
            type: object
          type: array
        search_id:
          example: e6f84c4c-ffdd-499b-ad89-72c65a896ead
          type: string
        total_count:
          example: 14881
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXSearchResults-properties-search_id:
      example: e6f84c4c-ffdd-499b-ad89-72c65a896ead
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SFXSearchResults-properties-total_count:
      example: 14881
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchEntitiesRequest:
      example:
        text: Planting flowers is a great way to make springtime more beautiful.
      properties:
        text:
          example: Planting flowers is a great way to make springtime more beautiful.
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchEntitiesRequest-properties-text:
      example: Planting flowers is a great way to make springtime more beautiful.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage:
      example:
        license:
        - editorial
        query: cat
        sort: popular
      properties:
        license:
          items:
            example: editorial
            type: string
          type: array
        query:
          example: cat
          type: string
        sort:
          example: popular
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-keyword_safe_search:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-license:
      example:
      - commercial
      items:
        example: commercial
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-per_page:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-query:
      example: cat
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-safe:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-sort:
      example: popular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-spellcheck_query:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SearchImage-properties-view:
      example: minimal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SfxUrl:
      example:
        $ref: '#/components/schemas/Url/example'
      properties:
        $ref:
          example: '#/components/schemas/Url/example'
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ShortsLoopsStems:
      example:
        loops:
          loop_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_1/loop_preview_1.mp3
          loop_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_2/loop_preview_2.mp3
        shorts:
          short_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_1/short_preview_1.mp3
          short_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_2/short_preview_2.mp3
        stems:
          stem_preview_1:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
          stem_preview_2:
            url: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
      properties:
        loops:
          properties:
            loop_preview_1:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_1/loop_preview_1.mp3
                  type: string
              type: object
            loop_preview_2:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/loop_preview_2/loop_preview_2.mp3
                  type: string
              type: object
          type: object
        shorts:
          properties:
            short_preview_1:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_1/short_preview_1.mp3
                  type: string
              type: object
            short_preview_2:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/short_preview_2/short_preview_2.mp3
                  type: string
              type: object
          type: object
        stems:
          properties:
            stem_preview_1:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
                  type: string
              type: object
            stem_preview_2:
              properties:
                url:
                  example: http://picdn.shuttercorp.net/shutterstock/audio/464947/stem_preview_1/stem_preview_1.mp3
                  type: string
              type: object
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription:
      example:
        description: Annual Subscription
        allotment:
          downloads_left: 5
          downloads_limit: 10
          end_time: 2020-05-29T17:10:22.000Z
          start_time: 2020-05-29T17:10:22.000Z
        asset_type: images
        expiration_time: 2020-05-29T17:10:22.000Z
        formats:
        - description: Small
          format: jpg
          media_type: image
          min_resolution: 500
          size: small
        - description: Med
          format: jpg
          media_type: image
          min_resolution: 1000
          size: medium
        - description: Vector
          format: eps
          media_type: image
          size: vector
        id: s8906043
        license: standard
        metadata: {}
      properties:
        description:
          example: Annual Subscription
          type: string
        allotment:
          properties:
            downloads_left:
              example: 5
              type: number
            downloads_limit:
              example: 10
              type: number
            end_time:
              example: 2020-05-29T17:10:22.000Z
              type: string
            start_time:
              example: 2020-05-29T17:10:22.000Z
              type: string
          type: object
        asset_type:
          example: images
          type: string
        expiration_time:
          example: 2020-05-29T17:10:22.000Z
          type: string
        formats:
          items:
            properties:
              description:
                example: Small
                type: string
              format:
                example: jpg
                type: string
              media_type:
                example: image
                type: string
              min_resolution:
                example: 500
                type: number
              size:
                example: small
                type: string
            type: object
          type: array
        id:
          example: s8906043
          type: string
        license:
          example: standard
          type: string
        metadata:
          properties: {}
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription-properties-description:
      example: Annual Subscription
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription-properties-asset_type:
      example: images
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription-properties-expiration_time:
      example: 2020-05-29T17:10:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription-properties-id:
      example: s8906043
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Subscription-properties-license:
      example: standard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubscriptionMetadata:
      example:
        client:
          is_required: false
          name: purchase_order
        job:
          is_required: true
          name: client_name
        other:
          is_required: false
          name: custom_value
      properties:
        client:
          properties:
            is_required:
              example: false
              type: boolean
            name:
              example: purchase_order
              type: string
          type: object
        job:
          properties:
            is_required:
              example: true
              type: boolean
            name:
              example: client_name
              type: string
          type: object
        other:
          properties:
            is_required:
              example: false
              type: boolean
            name:
              example: custom_value
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Suggestions:
      example:
        data:
        - cat scan
        - cats and dogs
        - cats playing
        - catsuit
        - cat silhouette
        - catskills
        - cats eyes
        - cat sitting
        - cat sleeping
        - cats eye
      properties:
        data:
          items:
            example: cat scan
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestEcho:
      example:
        text: Test string
      properties:
        text:
          example: Test string
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestEcho-properties-text:
      example: Test string
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestValidate:
      example:
        header:
          user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML,\
            \ like Gecko) Chrome/51.0.2704.103 Safari/537.36"
        query:
          id: 123456
          tag:
          - Test string
      properties:
        header:
          properties:
            user-agent:
              example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML,\
                \ like Gecko) Chrome/51.0.2704.103 Safari/537.36"
              type: string
          type: object
        query:
          properties:
            id:
              example: 123456
              type: number
            tag:
              items:
                example: Test string
                type: string
              type: array
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestValidateHeader:
      example:
        user-agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
          \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
      properties:
        user-agent:
          example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/51.0.2704.103 Safari/537.36"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestValidateHeader-properties-user-agent:
      example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko)\
        \ Chrome/51.0.2704.103 Safari/537.36"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestValidateQuery:
      example:
        id: 123456
        tag:
        - string
      properties:
        id:
          example: 123456
          type: number
        tag:
          items:
            example: string
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TestValidateQuery-properties-id:
      example: 123456
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Thumbnail:
      example:
        height: 100
        url: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
        width: 150
      properties:
        height:
          example: 100
          type: number
        url:
          example: https://thumb7.shutterstock.com/thumb_large/250738318/1572478477/stock-photo-cropped-image-of-woman-gardening-1572478477.jpg
          type: string
        width:
          example: 150
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Thumbnail-properties-height:
      example: 105
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Thumbnail-properties-url:
      example: https://editorial01.qa.shuttercorp.net/thumb/10687730b/272a999e/Shutterstock_10687730b.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Thumbnail-properties-width:
      example: 170
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCatalogCollection:
      example:
        cover_asset:
          id: 123X
        name: My Collection
        visibility: public
      properties:
        cover_asset:
          properties:
            id:
              example: 123X
              type: string
          type: object
        name:
          example: My Collection
          type: string
        visibility:
          example: public
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-cover_asset-properties-id:
      example: 123X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-name:
      example: My Collection
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-visibility:
      example: public
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdatedMedia:
      example:
        id: 123456789X
        updated_time: 2020-05-29T17:10:22.000Z
        updates:
        - addition
        - edit
      properties:
        id:
          example: 123456789X
          type: string
        updated_time:
          example: 2020-05-29T17:10:22.000Z
          type: string
        updates:
          items:
            example: addition
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdatedMedia-properties-id:
      example: 123456789X
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdatedMedia-properties-updated_time:
      example: 2020-05-29T17:10:22.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Url:
      example:
        url: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
      properties:
        url:
          example: "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_59656357.jpg"
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Url-properties-url:
      example: "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Urls:
      example:
        urls:
        - string
      properties:
        urls:
          items:
            example: string
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails:
      example:
        contributor_id: "212"
        first_name: John
        full_name: John Doe
        id: "101782699"
        language: es
        last_name: Doe
        username: jdoe
      properties:
        contributor_id:
          example: "212"
          type: string
        first_name:
          example: John
          type: string
        full_name:
          example: John Doe
          type: string
        id:
          example: "101782699"
          type: string
        language:
          example: es
          type: string
        last_name:
          example: Doe
          type: string
        username:
          example: jdoe
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-contributor_id:
      example: "212"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-first_name:
      example: John
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-full_name:
      example: John Doe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-id:
      example: "101782699"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-language:
      example: es
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-last_name:
      example: Doe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserDetails-properties-username:
      example: jdoe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video:
      example:
        description: "Camera follows hipster millennial young woman in orange jacket\
          \ running up on top of mountain summit at sunset, jumps on top of rocks,\
          \ raises arms into air, happy and drunk on life, youth and happiness"
        added_date: 2019-07-13T00:00:00.000Z
        aspect: 1.778
        aspect_ratio: 969
        assets:
          hd:
            display_name: Original HD
            file_size: 110359552
            format: avc1
            fps: 29.97
            height: 1080
            is_licensable: true
            width: 1920
          preview_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          preview_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          preview_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          sd:
            display_name: Standard Definition MPEG
            file_size: 4577280
            format: mov
            fps: 29.97
            height: 480
            is_licensable: true
            width: 852
          thumb_jpg:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_jpgs:
            urls:
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
            - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
          thumb_mp4:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          thumb_webm:
            url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          web:
            display_name: Low Resolution MPEG
            file_size: 1291264
            format: mov
            fps: 29.97
            height: 240
            is_licensable: true
            width: 426
        categories:
        - id: "12"
          name: Nature
        - id: "13"
          name: People
        contributor:
          id: "4411978"
        duration: 14.081
        has_model_release: true
        has_property_release: false
        id: "1033184651"
        is_adult: false
        is_editorial: false
        keywords:
        - active
        - activity
        - adventure
        - arms
        - backpacker
        - carefree
        - celebrating
        - cliff
        - climate
        - cloud
        - discovery
        - escape
        - explore
        - extreme
        - free
        - freedom
        - girl
        - happy
        - high
        - hiker
        - hiking
        - hill
        - independent
        - inspiration
        - landscape
        - leisure
        - lifestyle
        - mountain
        - mountains
        - nature
        - outdoor
        - peak
        - person
        - rock
        - scenic
        - sky
        - sport
        - success
        - summer
        - summit
        - sun
        - sunset
        - top
        - tourism
        - travel
        - trekking
        - vacation
        - view
        - winning
        - woman
        media_type: video
        models:
        - id: "33233810"
        - id: "25487168"
      properties:
        description:
          example: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          type: string
        added_date:
          example: 2019-07-13T00:00:00.000Z
          type: string
        aspect:
          example: 1.778
          type: number
        aspect_ratio:
          example: "969"
          type: string
        assets:
          properties:
            hd:
              properties:
                display_name:
                  example: Original HD
                  type: string
                file_size:
                  example: 110359552
                  type: number
                format:
                  example: avc1
                  type: string
                fps:
                  example: 29.97
                  type: number
                height:
                  example: 1080
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 1920
                  type: number
              type: object
            preview_jpg:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
                  type: string
              type: object
            preview_mp4:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
                  type: string
              type: object
            preview_webm:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
                  type: string
              type: object
            sd:
              properties:
                display_name:
                  example: Standard Definition MPEG
                  type: string
                file_size:
                  example: 4577280
                  type: number
                format:
                  example: mov
                  type: string
                fps:
                  example: 29.97
                  type: number
                height:
                  example: 480
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 852
                  type: number
              type: object
            thumb_jpg:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
                  type: string
              type: object
            thumb_jpgs:
              properties:
                urls:
                  items:
                    example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
                    type: string
                  type: array
              type: object
            thumb_mp4:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
                  type: string
              type: object
            thumb_webm:
              properties:
                url:
                  example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
                  type: string
              type: object
            web:
              properties:
                display_name:
                  example: Low Resolution MPEG
                  type: string
                file_size:
                  example: 1291264
                  type: number
                format:
                  example: mov
                  type: string
                fps:
                  example: 29.97
                  type: number
                height:
                  example: 240
                  type: number
                is_licensable:
                  example: true
                  type: boolean
                width:
                  example: 426
                  type: number
              type: object
          type: object
        categories:
          items:
            properties:
              id:
                example: "12"
                type: string
              name:
                example: Nature
                type: string
            type: object
          type: array
        contributor:
          properties:
            id:
              example: "4411978"
              type: string
          type: object
        duration:
          example: 14.081
          type: number
        has_model_release:
          example: true
          type: boolean
        has_property_release:
          example: false
          type: boolean
        id:
          example: "1033184651"
          type: string
        is_adult:
          example: false
          type: boolean
        is_editorial:
          example: false
          type: boolean
        keywords:
          items:
            example: active
            type: string
          type: array
        media_type:
          example: video
          type: string
        models:
          items:
            properties:
              id:
                example: "33233810"
                type: string
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-description:
      example: "Camera follows hipster millennial young woman in orange jacket running\
        \ up on top of mountain summit at sunset, jumps on top of rocks, raises arms\
        \ into air, happy and drunk on life, youth and happiness"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-added_date:
      example: 2019-07-13T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-aspect:
      example: 1.778
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-aspect_ratio:
      example: "969"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-duration:
      example: 14.081
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-has_model_release:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-has_property_release:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-id:
      example: "1033184651"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-is_adult:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-is_editorial:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Video-properties-media_type:
      example: video
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoAssets:
      example:
        hd:
          display_name: Original HD
          file_size: 110359552
          format: avc1
          fps: 29.97
          height: 1080
          is_licensable: true
          width: 1920
        original_filename: 123.mp4
        preview_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        preview_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        preview_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        sd:
          display_name: Standard Definition MPEG
          file_size: 4577280
          format: mov
          fps: 29.97
          height: 480
          is_licensable: true
          width: 852
        thumb_jpg:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_jpgs:
          urls:
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/2.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/3.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/4.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/5.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/6.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/7.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/8.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/9.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/10.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/11.jpg
          - https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
        thumb_mp4:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
        thumb_webm:
          url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
        web:
          display_name: Low Resolution MPEG
          file_size: 1291264
          format: mov
          fps: 29.97
          height: 240
          is_licensable: true
          width: 426
      properties:
        hd:
          properties:
            display_name:
              example: Original HD
              type: string
            file_size:
              example: 110359552
              type: number
            format:
              example: avc1
              type: string
            fps:
              example: 29.97
              type: number
            height:
              example: 1080
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 1920
              type: number
          type: object
        original_filename:
          example: 123.mp4
          type: string
        preview_jpg:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
              type: string
          type: object
        preview_mp4:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
              type: string
          type: object
        preview_webm:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
              type: string
          type: object
        sd:
          properties:
            display_name:
              example: Standard Definition MPEG
              type: string
            file_size:
              example: 4577280
              type: number
            format:
              example: mov
              type: string
            fps:
              example: 29.97
              type: number
            height:
              example: 480
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 852
              type: number
          type: object
        thumb_jpg:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
              type: string
          type: object
        thumb_jpgs:
          properties:
            urls:
              items:
                example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/1.jpg
                type: string
              type: array
          type: object
        thumb_mp4:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
              type: string
          type: object
        thumb_webm:
          properties:
            url:
              example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
              type: string
          type: object
        web:
          properties:
            display_name:
              example: Low Resolution MPEG
              type: string
            file_size:
              example: 1291264
              type: number
            format:
              example: mov
              type: string
            fps:
              example: 29.97
              type: number
            height:
              example: 240
              type: number
            is_licensable:
              example: true
              type: boolean
            width:
              example: 426
              type: number
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoPreviewUrl:
      example:
        url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
      properties:
        url:
          example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoPreviewUrl-properties-url:
      example: https://qa.editorial-cdn.shuttercorp.net/wm-preview-mp4/10679854a/M0T7A13aNej2g82bMTI4NjY=/Shutterstock_10679854a.mp4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSearchResults:
      example:
        data:
        - description: "Camera follows hipster millennial young woman in orange jacket\
            \ running up on top of mountain summit at sunset, jumps on top of rocks,\
            \ raises arms into air, happy and drunk on life, youth and happiness"
          aspect: 1.778
          aspect_ratio: 969
          assets:
            preview_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            preview_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            preview_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
            thumb_jpg:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
            thumb_mp4:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
            thumb_webm:
              url: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
          contributor:
            id: 4411978X
          duration: 14.081
          has_model_release: true
          id: 1033184651X
          media_type: video
        page: 1
        per_page: 5
        search_id: 749090bb-2967-4a20-b22e-c800dc845e10
        total_count: 123
      properties:
        data:
          items:
            properties:
              description:
                example: "Camera follows hipster millennial young woman in orange\
                  \ jacket running up on top of mountain summit at sunset, jumps on\
                  \ top of rocks, raises arms into air, happy and drunk on life, youth\
                  \ and happiness"
                type: string
              aspect:
                example: 1.778
                type: number
              aspect_ratio:
                example: "969"
                type: string
              assets:
                properties:
                  preview_jpg:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
                        type: string
                    type: object
                  preview_mp4:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
                        type: string
                    type: object
                  preview_webm:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/preview/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
                        type: string
                    type: object
                  thumb_jpg:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/12.jpg
                        type: string
                    type: object
                  thumb_mp4:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.mp4
                        type: string
                    type: object
                  thumb_webm:
                    properties:
                      url:
                        example: https://ak.picdn.net/shutterstock/videos/1033184651/thumb/stock-footage-camera-follows-hipster-millennial-young-woman-in-orange-jacket-running-up-on-top-of-mountain-summit.webm
                        type: string
                    type: object
                type: object
              contributor:
                properties:
                  id:
                    example: 4411978X
                    type: string
                type: object
              duration:
                example: 14.081
                type: number
              has_model_release:
                example: true
                type: boolean
              id:
                example: 1033184651X
                type: string
              media_type:
                example: video
                type: string
            type: object
          type: array
        page:
          example: 1
          type: number
        per_page:
          example: 5
          type: number
        search_id:
          example: 749090bb-2967-4a20-b22e-c800dc845e10
          type: string
        total_count:
          example: 123
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSearchResults-properties-page:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSearchResults-properties-per_page:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSearchResults-properties-search_id:
      example: 749090bb-2967-4a20-b22e-c800dc845e10
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSearchResults-properties-total_count:
      example: 123
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails:
      example:
        display_name: Original HD
        file_size: 110359552
        format: avc1
        fps: 29.97
        height: 1080
        is_licensable: true
        width: 1920
      properties:
        display_name:
          example: Original HD
          type: string
        file_size:
          example: 110359552
          type: number
        format:
          example: avc1
          type: string
        fps:
          example: 29.97
          type: number
        height:
          example: 1080
          type: number
        is_licensable:
          example: true
          type: boolean
        width:
          example: 1920
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-display_name:
      example: HD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-file_size:
      example: 82233387
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-format:
      example: avc1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-fps:
      example: 30
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-height:
      example: 1080
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-is_licensable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-VideoSizeDetails-properties-width:
      example: 1080
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-expires:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-realm:
      example: customer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest1-properties-expires:
      example: "false"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest1-properties-realm:
      example: customer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-descriptors:
      properties:
        render_speed_over:
          type: number
        band_id:
          type: string
        band_name:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-3-schema
        per_page:
          default: 20
          example: 20
          maximum: 100
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-descriptors-get-parameters-4-schema
        id:
          items:
            type: string
          maxItems: 20
          type: array
        instrument_name:
          type: string
        instrument_id:
          type: string
        tempo:
          type: number
        tempo_to:
          type: number
        tempo_from:
          type: number
        name:
          type: string
        tag:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - render_speed_over
      - band_id
      - band_name
      - page
      - per_page
      - id
      - instrument_name
      - instrument_id
      - tempo
      - tempo_to
      - tempo_from
      - name
      - tag
    konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-instruments:
      properties:
        id:
          items:
            type: string
          type: array
        per_page:
          default: 20
          example: 20
          maximum: 100
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-1-schema
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-ai-audio-instruments-get-parameters-2-schema
        name:
          type: string
        tag:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - per_page
      - page
      - name
      - tag
    konfig-generated-schema-single-parameter-schema-get--v2-ai-audio-renders:
      properties:
        id:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--v2-ai-audio-renders:
      properties:
        audio_renders:
          description: Parameters to create computer audio renders
          items:
            $ref: '#/components/schemas/CreateAudioRender'
          type: array
      required:
      - audio_renders
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-audio:
      properties:
        id:
          items:
            pattern: "^[1-9]\\d*$"
            type: string
            x-pattern-description: A number that does not start with 0
          maxItems: 500
          minItems: 1
          type: array
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-get-parameters-1-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-audio-collections:
      properties:
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-get-parameters-0-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-get-parameters-1-schema
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - embed
    konfig-generated-schema-single-parameter-schema-post--v2-audio-collections:
      properties:
        name:
          description: The name of the collection
          example: Test Collection 19cf
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateRequest-properties-name
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--v2-audio-collections-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-audio-collections-id:
      properties:
        id:
          type: string
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        share_code:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - embed
      - share_code
    konfig-generated-schema-single-parameter-schema-post--v2-audio-collections-id:
      properties:
        id:
          type: string
        name:
          description: The new name of the collection
          example: My collection with a new name
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionUpdateRequest-properties-name
      required:
      - id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--v2-audio-collections-id-items:
      properties:
        id:
          type: string
        item_id:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - item_id
    konfig-generated-schema-single-parameter-schema-get--v2-audio-collections-id-items:
      properties:
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-2-schema
        share_code:
          type: string
        sort:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-collections-id-items-get-parameters-4-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - page
      - per_page
      - share_code
      - sort
    konfig-generated-schema-single-parameter-schema-post--v2-audio-collections-id-items:
      properties:
        id:
          type: string
        items:
          description: List of items
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - id
      - items
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-audio-genres:
      properties:
        language:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-audio-instruments:
      properties:
        language:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-audio-licenses:
      properties:
        audio_id:
          type: string
        license:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-4-schema
        username:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-8-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-licenses-get-parameters-9-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - audio_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-audio-licenses:
      properties:
        license:
          enum:
          - audio_platform
          - premier_music_basic
          - premier_music_extended
          - premier_music_pro
          - premier_music_comp
          - asset_all_music
          type: string
        search_id:
          type: string
        audio:
          description: List of audio tracks to license
          items:
            $ref: '#/components/schemas/LicenseAudio'
          maxItems: 50
          type: array
      required:
      - audio
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - license
      - search_id
    konfig-generated-schema-single-parameter-schema-post--v2-audio-licenses-id-downloads:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-audio-moods:
      properties:
        language:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-audio-search:
      properties:
        artists:
          items:
            type: string
          type: array
          uniqueItems: false
        bpm:
          type: integer
          uniqueItems: true
        bpm_from:
          type: integer
          uniqueItems: true
        bpm_to:
          type: integer
          uniqueItems: true
        duration:
          type: integer
          uniqueItems: true
        duration_from:
          type: integer
          uniqueItems: true
        duration_to:
          type: integer
          uniqueItems: true
        genre:
          items:
            type: string
          type: array
          uniqueItems: false
        is_instrumental:
          type: boolean
          uniqueItems: true
        instruments:
          items:
            type: string
          type: array
          uniqueItems: false
        moods:
          items:
            type: string
          type: array
          uniqueItems: false
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-11-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          uniqueItems: true
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-12-schema
        query:
          type: string
          uniqueItems: true
        sort:
          enum:
          - score
          - ranking_all
          - artist
          - title
          - bpm
          - freshness
          - duration
          type: string
          uniqueItems: true
        sort_order:
          default: desc
          enum:
          - asc
          - desc
          example: desc
          type: string
          uniqueItems: true
          x-konfig-original-example: desc
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-15-schema
        vocal_description:
          type: string
          uniqueItems: true
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          uniqueItems: true
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-17-schema
        fields:
          type: string
          uniqueItems: true
        library:
          default: premier
          enum:
          - shutterstock
          - premier
          example: premier
          type: string
          uniqueItems: true
          x-konfig-original-example: premier
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-search-get-parameters-19-schema
        language:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - artists
      - bpm
      - bpm_from
      - bpm_to
      - duration
      - duration_from
      - duration_to
      - genre
      - is_instrumental
      - instruments
      - moods
      - page
      - per_page
      - query
      - sort
      - sort_order
      - vocal_description
      - view
      - fields
      - library
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-audio-id:
      properties:
        id:
          type: integer
        view:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-audio-id-get-parameters-1-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-catalog-collections:
      properties:
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-0-schema
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 2
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-1-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-2-schema
        shared:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-collections-get-parameters-3-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - sort
      - shared
    konfig-generated-schema-single-parameter-schema-post--v2-catalog-collections:
      properties:
        items:
          items:
            $ref: '#/components/schemas/CreateCatalogCollectionItem'
          maxItems: 50
          type: array
        name:
          example: New Collection
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-name
        visibility:
          default: private
          enum:
          - private
          - public
          example: private
          type: string
          x-konfig-original-example: private
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollection-properties-visibility
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--v2-catalog-collections-collection_id:
      properties:
        collection_id:
          type: string
      required:
      - collection_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - collection_id
    konfig-generated-schema-single-parameter-schema-patch--v2-catalog-collections-collection_id:
      properties:
        collection_id:
          type: string
        cover_asset:
          properties:
            id:
              example: 123X
              type: string
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-cover_asset-properties-id
          required:
          - id
          type: object
        name:
          example: My Collection
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-name
        visibility:
          enum:
          - private
          - public
          example: public
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-visibility
      required:
      - collection_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - collection_id
    konfig-generated-schema-single-parameter-schema-delete--v2-catalog-collections-collection_id-items:
      properties:
        collection_id:
          type: string
        items:
          items:
            $ref: '#/components/schemas/RemoveCatalogCollectionItem'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - collection_id
      - items
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - collection_id
    konfig-generated-schema-single-parameter-schema-post--v2-catalog-collections-collection_id-items:
      properties:
        collection_id:
          type: string
        items:
          items:
            $ref: '#/components/schemas/CreateCatalogCollectionItem'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - collection_id
      - items
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - collection_id
    konfig-generated-schema-single-parameter-schema-get--v2-catalog-search:
      properties:
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-0-schema
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-1-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-2-schema
        query:
          type: string
        collection_id:
          example:
          - "123456"
          - "456789"
          - "13579"
          items:
            type: string
          maxItems: 50
          type: array
          x-konfig-original-example:
          - "123456"
          - "456789"
          - "13579"
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-4-schema
        asset_type:
          example:
          - image
          - editorial-image
          items:
            enum:
            - image
            - video
            - audio
            - elements
            - editorial-image
            - editorial-video
            type: string
          type: array
          x-konfig-original-example:
          - image
          - editorial-image
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-catalog-search-get-parameters-5-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sort
      - page
      - per_page
      - query
      - collection_id
      - asset_type
    konfig-generated-schema-single-parameter-schema-get--v2-contributors:
      properties:
        id:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id:
      properties:
        contributor_id:
          type: string
      required:
      - contributor_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contributor_id
    konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections:
      properties:
        contributor_id:
          type: string
        sort:
          enum:
          - newest
          - last_updated
          - item_count
          type: string
      required:
      - contributor_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contributor_id
      - sort
    konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections-id:
      properties:
        contributor_id:
          type: string
        id:
          type: string
      required:
      - contributor_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contributor_id
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-contributors-contributor_id-collections-id-items:
      properties:
        contributor_id:
          type: string
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-contributors-contributor_id-collections-id-items-get-parameters-3-schema
        sort:
          enum:
          - newest
          - oldest
          type: string
      required:
      - contributor_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contributor_id
      - id
      - page
      - per_page
      - sort
    konfig-generated-schema-single-parameter-schema-post--v2-cv-images:
      properties:
        base64_image:
          description: "A Base 64 encoded jpeg or png; images can be no larger than\
            \ 10mb and can be no larger than 10,000 pixels in width or height"
          example: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateRequest-properties-base64_image
      required:
      - base64_image
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-cv-keywords:
      properties:
        asset_id: {}
      required:
      - asset_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - asset_id
    konfig-generated-schema-single-parameter-schema-get--v2-cv-similar-images:
      properties:
        asset_id:
          type: string
        license:
          default:
          - commercial
          example:
          - commercial
          items:
            enum:
            - commercial
            - editorial
            type: string
          type: array
          x-konfig-original-example:
          - commercial
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-1-schema
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-2-schema
        language:
          $ref: '#/components/schemas/Language'
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-4-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-5-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-images-get-parameters-6-schema
      required:
      - asset_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - asset_id
      - license
      - safe
      - language
      - page
      - per_page
      - view
    konfig-generated-schema-single-parameter-schema-get--v2-cv-similar-videos:
      properties:
        asset_id:
          type: string
        license:
          default:
          - commercial
          example:
          - commercial
          items:
            enum:
            - commercial
            - editorial
            type: string
          type: array
          x-konfig-original-example:
          - commercial
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-1-schema
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-2-schema
        language:
          $ref: '#/components/schemas/Language'
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-4-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-5-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-cv-similar-videos-get-parameters-6-schema
      required:
      - asset_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - asset_id
      - license
      - safe
      - language
      - page
      - per_page
      - view
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-categories:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-categories:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-licenses:
      properties:
        image_id:
          type: string
        license:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-4-schema
        username:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-8-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-licenses-get-parameters-9-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - image_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-editorial-images-licenses:
      properties:
        country:
          $ref: '#/components/schemas/ISOCountryCode'
        editorial:
          description: Editorial content to license
          items:
            $ref: '#/components/schemas/LicenseEditorialContent'
          type: array
      required:
      - country
      - editorial
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds:
      properties:
        country:
          format: country-code-3
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-1-schema
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-livefeeds-get-parameters-2-schema
      required:
      - country
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - country
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds-id:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-livefeeds-id-items:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-search:
      properties:
        query:
          type: string
        sort:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-1-schema
        category:
          type: string
        country:
          format: country-code-3
          type: string
        supplier_code:
          items:
            type: string
          type: array
        date_start:
          format: date
          type: string
        date_end:
          format: date
          type: string
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-search-get-parameters-7-schema
        cursor:
          type: string
      required:
      - country
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - sort
      - category
      - country
      - supplier_code
      - date_start
      - date_end
      - per_page
      - cursor
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-updated:
      properties:
        type:
          enum:
          - edit
          - addition
          type: string
        date_updated_start:
          format: date-time
          type: string
        date_updated_end:
          format: date-time
          type: string
        date_taken_start:
          format: date
          type: string
        date_taken_end:
          format: date
          type: string
        cursor:
          type: string
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-6-schema
        supplier_code:
          items:
            maxLength: 5
            type: string
          type: array
        country:
          format: country-code-3
          type: string
        per_page:
          default: 500
          example: 500
          maximum: 500
          minimum: 100
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-images-updated-get-parameters-9-schema
      required:
      - country
      - date_updated_end
      - date_updated_start
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
      - date_updated_start
      - date_updated_end
      - date_taken_start
      - date_taken_end
      - cursor
      - sort
      - supplier_code
      - country
      - per_page
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-images-id:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
    konfig-generated-schema-single-parameter-schema-post--v2-editorial-licenses:
      properties:
        country:
          $ref: '#/components/schemas/ISOCountryCode'
        editorial:
          description: Editorial content to license
          items:
            $ref: '#/components/schemas/LicenseEditorialContent'
          type: array
      required:
      - country
      - editorial
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds:
      properties:
        country:
          format: country-code-3
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-1-schema
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-livefeeds-get-parameters-2-schema
      required:
      - country
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - country
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds-id:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-livefeeds-id-items:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-search:
      properties:
        query:
          type: string
        sort:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-search-get-parameters-1-schema
        category:
          type: string
        country:
          format: country-code-3
          type: string
        supplier_code:
          items:
            type: string
          type: array
        date_start:
          format: date
          type: string
        date_end:
          format: date
          type: string
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-search-get-parameters-7-schema
        cursor:
          type: string
      required:
      - country
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - sort
      - category
      - country
      - supplier_code
      - date_start
      - date_end
      - per_page
      - cursor
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-updated:
      properties:
        type:
          enum:
          - edit
          - addition
          type: string
        date_updated_start:
          format: date-time
          type: string
        date_updated_end:
          format: date-time
          type: string
        date_taken_start:
          format: date
          type: string
        date_taken_end:
          format: date
          type: string
        cursor:
          type: string
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-updated-get-parameters-6-schema
        supplier_code:
          items:
            maxLength: 5
            type: string
          type: array
        country:
          format: country-code-3
          type: string
        per_page:
          default: 500
          example: 500
          maximum: 500
          minimum: 100
          type: integer
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-updated-get-parameters-9-schema
      required:
      - country
      - date_updated_end
      - date_updated_start
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
      - date_updated_start
      - date_updated_end
      - date_taken_start
      - date_taken_end
      - cursor
      - sort
      - supplier_code
      - country
      - per_page
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-categories:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-licenses:
      properties:
        video_id:
          type: string
        license:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-4-schema
        username:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-8-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-licenses-get-parameters-9-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - video_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-editorial-videos-licenses:
      properties:
        country:
          $ref: '#/components/schemas/ISOCountryCode'
        editorial:
          description: Editorial content to license
          items:
            $ref: '#/components/schemas/LicenseEditorialVideoContent'
          type: array
      required:
      - country
      - editorial
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-search:
      properties:
        query:
          type: string
        sort:
          default: relevant
          enum:
          - relevant
          - newest
          - oldest
          example: relevant
          type: string
          x-konfig-original-example: relevant
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-1-schema
        category:
          type: string
        country:
          format: country-code-3
          type: string
        supplier_code:
          items:
            type: string
          type: array
        date_start:
          format: date
          type: string
        date_end:
          format: date
          type: string
        resolution:
          enum:
          - 4k
          - high_definition
          - standard_definition
          type: string
        fps:
          type: number
        per_page:
          default: 20
          example: 20
          maximum: 50
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-editorial-videos-search-get-parameters-9-schema
        cursor:
          type: string
      required:
      - country
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - sort
      - category
      - country
      - supplier_code
      - date_start
      - date_end
      - resolution
      - fps
      - per_page
      - cursor
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-videos-id:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
        search_id:
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-editorial-id:
      properties:
        id:
          type: string
        country:
          format: country-code-3
          type: string
        search_id:
          type: string
      required:
      - country
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - country
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-images:
      properties:
        id:
          items:
            format: asset-id
            type: string
          maxItems: 500
          type: array
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-get-parameters-1-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-post--v2-images:
      properties:
        base64_image:
          description: "A Base 64 encoded jpeg or png; images can be no larger than\
            \ 10mb and can be no larger than 10,000 pixels in width or height"
          example: R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImageCreateRequest-properties-base64_image
      required:
      - base64_image
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-images-categories:
      properties:
        language:
          $ref: '#/components/schemas/Language'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections:
      properties:
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-get-parameters-2-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - embed
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-post--v2-images-collections:
      properties:
        name:
          description: The name of the collection
          example: Test Collection 19cf
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateRequest-properties-name
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured:
      properties:
        embed:
          enum:
          - share_url
          type: string
        type:
          items:
            enum:
            - photo
            - editorial
            - vector
            type: string
          type: array
        asset_hint:
          default: 1x
          enum:
          - 1x
          - 2x
          example: 1x
          type: string
          x-konfig-original-example: 1x
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-get-parameters-2-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - embed
      - type
      - asset_hint
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured-id:
      properties:
        id:
          type: string
        embed:
          enum:
          - share_url
          type: string
        asset_hint:
          default: 1x
          enum:
          - 1x
          - 2x
          example: 1x
          type: string
          x-konfig-original-example: 1x
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-get-parameters-2-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - embed
      - asset_hint
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections-featured-id-items:
      properties:
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-featured-id-items-get-parameters-2-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-delete--v2-images-collections-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections-id:
      properties:
        id:
          type: string
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        share_code:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - embed
      - share_code
    konfig-generated-schema-single-parameter-schema-post--v2-images-collections-id:
      properties:
        id:
          type: string
        name:
          description: The new name of the collection
          example: My collection with a new name
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionUpdateRequest-properties-name
      required:
      - id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--v2-images-collections-id-items:
      properties:
        id:
          type: string
        item_id:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - item_id
    konfig-generated-schema-single-parameter-schema-get--v2-images-collections-id-items:
      properties:
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-2-schema
        share_code:
          type: string
        sort:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-collections-id-items-get-parameters-4-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - page
      - per_page
      - share_code
      - sort
    konfig-generated-schema-single-parameter-schema-post--v2-images-collections-id-items:
      properties:
        id:
          type: string
        items:
          description: List of items
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - id
      - items
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-images-licenses:
      properties:
        image_id:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        license:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-4-schema
        username:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-8-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-get-parameters-9-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - image_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-images-licenses:
      properties:
        subscription_id:
          type: string
        format:
          enum:
          - eps
          - jpg
          type: string
        size:
          default: huge
          enum:
          - small
          - medium
          - huge
          - vector
          - custom
          example: huge
          type: string
          x-konfig-original-example: huge
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-licenses-post-parameters-2-schema
        search_id:
          type: string
        images:
          description: Images to create licenses for
          items:
            $ref: '#/components/schemas/VLicenseImage'
          maxItems: 50
          type: array
      required:
      - images
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - subscription_id
      - format
      - size
      - search_id
    konfig-generated-schema-single-parameter-schema-post--v2-images-licenses-id-downloads:
      properties:
        id:
          type: string
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        show_modal:
          deprecated: true
          description: (Deprecated)
          type: boolean
        size:
          description: Size of the image
          enum:
          - small
          - medium
          - huge
          - supersize
          - vector
          example: small
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadImage-properties-size
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-images-recommendations:
      properties:
        id:
          items:
            type: string
          type: array
        max_items:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-recommendations-get-parameters-1-schema
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-recommendations-get-parameters-2-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - max_items
      - safe
    konfig-generated-schema-single-parameter-schema-get--v2-images-search:
      properties:
        added_date:
          format: date
          type: string
        added_date_start:
          format: date
          type: string
        aspect_ratio_min:
          exclusiveMinimum: true
          minimum: 0
          type: number
        aspect_ratio_max:
          exclusiveMinimum: true
          minimum: 0
          type: number
        aspect_ratio:
          exclusiveMinimum: true
          minimum: 0
          type: number
        ai_search:
          type: boolean
        ai_labels_limit:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-6-schema
        ai_industry:
          enum:
          - automotive
          - cpg
          - finance
          - healthcare
          - retail
          - technology
          type: string
        ai_objective:
          enum:
          - awareness
          - traffic
          - conversions
          type: string
        added_date_end:
          format: date
          type: string
        category:
          type: string
        color:
          type: string
        contributor:
          items:
            type: string
          type: array
        contributor_country: {}
        fields:
          type: string
          uniqueItems: true
        height:
          type: integer
        height_from:
          type: integer
        height_to:
          type: integer
        image_type:
          items:
            enum:
            - photo
            - illustration
            - vector
            type: string
          type: array
        keyword_safe_search:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-19-schema
        language:
          $ref: '#/components/schemas/Language'
        license:
          items:
            default: commercial
            enum:
            - commercial
            - editorial
            - enhanced
            example: commercial
            type: string
            x-konfig-original-example: commercial
            x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-21-schema-items
          type: array
        model:
          items:
            type: string
          type: array
        orientation:
          enum:
          - horizontal
          - vertical
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-24-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-25-schema
        people_model_released:
          type: boolean
        people_age:
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        people_ethnicity:
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            - NOT african
            - NOT african_american
            - NOT black
            - NOT brazilian
            - NOT chinese
            - NOT caucasian
            - NOT east_asian
            - NOT hispanic
            - NOT japanese
            - NOT middle_eastern
            - NOT native_american
            - NOT pacific_islander
            - NOT south_asian
            - NOT southeast_asian
            - NOT other
            type: string
          type: array
        people_gender:
          enum:
          - male
          - female
          - both
          type: string
        people_number:
          maximum: 4
          minimum: 0
          type: integer
        query:
          type: string
        region:
          format: country-code-2
          type: string
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-33-schema
        sort:
          default: popular
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-34-schema
        spellcheck_query:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-35-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-get-parameters-36-schema
        width:
          type: integer
        width_from:
          type: integer
        width_to:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - added_date
      - added_date_start
      - aspect_ratio_min
      - aspect_ratio_max
      - aspect_ratio
      - ai_search
      - ai_labels_limit
      - ai_industry
      - ai_objective
      - added_date_end
      - category
      - color
      - contributor
      - contributor_country
      - fields
      - height
      - height_from
      - height_to
      - image_type
      - keyword_safe_search
      - language
      - license
      - model
      - orientation
      - page
      - per_page
      - people_model_released
      - people_age
      - people_ethnicity
      - people_gender
      - people_number
      - query
      - region
      - safe
      - sort
      - spellcheck_query
      - view
      - width
      - width_from
      - width_to
    konfig-generated-schema-single-parameter-schema-get--v2-images-search-suggestions:
      properties:
        query:
          type: string
        limit:
          default: 10
          example: 10
          maximum: 25
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-search-suggestions-get-parameters-1-schema
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - limit
    konfig-generated-schema-single-parameter-schema-post--v2-images-search-suggestions:
      properties:
        text:
          description: Plain text to extract keywords from
          example: Planting flowers is a great way to make springtime more beautiful.
          maxLength: 100000
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SearchEntitiesRequest-properties-text
      required:
      - text
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-images-updated:
      properties:
        type:
          items:
            enum:
            - addition
            - deletion
            - edit
            type: string
          type: array
        start_date:
          format: date
          type: string
        end_date:
          format: date
          type: string
        interval:
          default: 1 HOUR
          example: 1 HOUR
          type: string
          x-konfig-original-example: 1 HOUR
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-3-schema
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-4-schema
        per_page:
          default: 100
          example: 100
          maximum: 2000
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-5-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-updated-get-parameters-6-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
      - start_date
      - end_date
      - interval
      - page
      - per_page
      - sort
    konfig-generated-schema-single-parameter-schema-get--v2-images-id:
      properties:
        id:
          format: asset-id
          type: string
        language:
          $ref: '#/components/schemas/Language'
        view:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-get-parameters-2-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - language
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-images-id-similar:
      properties:
        id:
          pattern: "^([1-9]\\d*)|(U[a-zA-Z0-9]+)$"
          type: string
        language:
          $ref: '#/components/schemas/Language'
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-3-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-images-id-similar-get-parameters-4-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - language
      - page
      - per_page
      - view
    konfig-generated-schema-single-parameter-schema-post--v2-oauth-access_token:
      properties:
        client_id:
          description: Client ID (Consumer Key) of your application
          type: string
        client_secret:
          description: Client Secret (Consumer Secret) of your application
          type: string
        code:
          description: Response code from the /oauth/authorize flow; required if grant_type=authorization_code
          type: string
        expires:
          default: false
          description: "Whether or not the token expires, expiring tokens come with\
            \ a refresh_token to renew the access_token"
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-expires
        grant_type:
          description: "Grant type: authorization_code generates user tokens, client_credentials\
            \ generates short-lived client grants"
          enum:
          - authorization_code
          - client_credentials
          - refresh_token
          type: string
        realm:
          default: customer
          description: User type to be authorized (usually 'customer')
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-original-example: customer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OauthGetUserAccessTokenRequest-properties-realm
        refresh_token:
          description: Pass this along with grant_type=refresh_token to get a fresh
            access token
          type: string
      required:
      - client_id
      - grant_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-oauth-authorize:
      properties:
        client_id:
          type: string
        realm:
          default: customer
          enum:
          - customer
          - contributor
          example: customer
          type: string
          x-konfig-original-example: customer
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-1-schema
        redirect_uri:
          type: string
        response_type:
          enum:
          - code
          type: string
        scope:
          default: user.view
          example: user.view
          type: string
          x-konfig-original-example: user.view
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-oauth-authorize-get-parameters-4-schema
        state:
          type: string
      required:
      - client_id
      - redirect_uri
      - response_type
      - state
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - client_id
      - realm
      - redirect_uri
      - response_type
      - scope
      - state
    konfig-generated-schema-single-parameter-schema-get--v2-sfx:
      properties:
        id:
          items:
            format: asset-id
            type: string
          maxItems: 500
          type: array
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-get-parameters-1-schema
        language:
          $ref: '#/components/schemas/Language'
        library:
          enum:
          - shutterstock
          - premier
          - premiumbeat
          type: string
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - view
      - language
      - library
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-sfx-licenses:
      properties:
        sfx_id:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        license:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-4-schema
        username:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        license_id:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-9-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-licenses-get-parameters-10-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sfx_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - license_id
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-sfx-licenses:
      properties:
        sound_effects:
          description: Sound effects to license for
          items:
            $ref: '#/components/schemas/LicenseSFX'
          type: array
      required:
      - sound_effects
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--v2-sfx-licenses-id-downloads:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-sfx-search:
      properties:
        added_date:
          format: date
          type: string
        added_date_start:
          format: date
          type: string
        added_date_end:
          format: date
          type: string
        duration:
          type: integer
          uniqueItems: true
        duration_from:
          type: integer
          uniqueItems: true
        duration_to:
          type: integer
          uniqueItems: true
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-6-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          uniqueItems: true
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-7-schema
        query:
          type: string
          uniqueItems: true
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-9-schema
        sort:
          default: popular
          enum:
          - popular
          - newest
          - relevance
          - random
          - oldest
          example: popular
          type: string
          uniqueItems: true
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-10-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          uniqueItems: true
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-search-get-parameters-11-schema
        language:
          $ref: '#/components/schemas/Language'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - added_date
      - added_date_start
      - added_date_end
      - duration
      - duration_from
      - duration_to
      - page
      - per_page
      - query
      - safe
      - sort
      - view
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-sfx-id:
      properties:
        id:
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-sfx-id-get-parameters-2-schema
        library:
          enum:
          - shutterstock
          - premier
          - premiumbeat
          type: string
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - language
      - view
      - library
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-test:
      properties:
        text:
          default: ok
          example: ok
          type: string
          x-konfig-original-example: ok
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-test-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - text
    konfig-generated-schema-single-parameter-schema-get--v2-test-validate:
      properties:
        id:
          type: integer
        tag:
          items:
            type: string
          type: array
        user-agent:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - tag
      - user-agent
    konfig-generated-schema-single-parameter-schema-get--v2-user:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-user-access_token:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-user-subscriptions:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-videos:
      properties:
        id:
          items:
            format: asset-id
            type: string
          maxItems: 500
          minItems: 1
          type: array
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-get-parameters-1-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-categories:
      properties:
        language:
          $ref: '#/components/schemas/Language'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections:
      properties:
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-get-parameters-0-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-get-parameters-1-schema
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - embed
    konfig-generated-schema-single-parameter-schema-post--v2-videos-collections:
      properties:
        name:
          description: The name of the collection
          example: Test Collection 19cf
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionCreateRequest-properties-name
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured:
      properties:
        embed:
          enum:
          - share_url
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - embed
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured-id:
      properties:
        id:
          type: string
        embed:
          enum:
          - share_url
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - embed
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-featured-id-items:
      properties:
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-featured-id-items-get-parameters-2-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-delete--v2-videos-collections-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-id:
      properties:
        id:
          type: string
        embed:
          items:
            enum:
            - share_code
            - share_url
            type: string
          type: array
        share_code:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - embed
      - share_code
    konfig-generated-schema-single-parameter-schema-post--v2-videos-collections-id:
      properties:
        id:
          type: string
        name:
          description: The new name of the collection
          example: My collection with a new name
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CollectionUpdateRequest-properties-name
      required:
      - id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--v2-videos-collections-id-items:
      properties:
        id:
          type: string
        item_id:
          items:
            type: string
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - item_id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-collections-id-items:
      properties:
        id:
          type: string
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-1-schema
        per_page:
          default: 100
          example: 100
          maximum: 150
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-2-schema
        share_code:
          type: string
        sort:
          default: oldest
          enum:
          - newest
          - oldest
          example: oldest
          type: string
          x-konfig-original-example: oldest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-collections-id-items-get-parameters-4-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - page
      - per_page
      - share_code
      - sort
    konfig-generated-schema-single-parameter-schema-post--v2-videos-collections-id-items:
      properties:
        id:
          type: string
        items:
          description: List of items
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - id
      - items
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-licenses:
      properties:
        video_id:
          pattern: "^[1-9]\\d*$"
          type: string
          x-pattern-description: A number that does not start with 0
        license:
          pattern: ^.+$
          type: string
          x-pattern-description: Minimum 1 character
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 200
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-3-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-4-schema
        username:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        download_availability:
          default: all
          enum:
          - all
          - downloadable
          - non_downloadable
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-8-schema
        team_history:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-get-parameters-9-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - video_id
      - license
      - page
      - per_page
      - sort
      - username
      - start_date
      - end_date
      - download_availability
      - team_history
    konfig-generated-schema-single-parameter-schema-post--v2-videos-licenses:
      properties:
        subscription_id:
          type: string
        size:
          default: web
          enum:
          - web
          - sd
          - hd
          - 4k
          example: web
          type: string
          x-konfig-original-example: web
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-licenses-post-parameters-1-schema
        search_id:
          type: string
        videos:
          description: Videos to license
          items:
            $ref: '#/components/schemas/LicenseVideo'
          maxItems: 50
          type: array
      required:
      - videos
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - subscription_id
      - size
      - search_id
    konfig-generated-schema-single-parameter-schema-post--v2-videos-licenses-id-downloads:
      properties:
        id:
          type: string
        auth_cookie:
          $ref: '#/components/schemas/Cookie'
        show_modal:
          deprecated: true
          description: (Deprecated)
          type: boolean
        size:
          description: Size of the video
          enum:
          - web
          - sd
          - hd
          - 4k
          example: web
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RedownloadVideo-properties-size
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-search:
      properties:
        added_date:
          format: date
          type: string
        added_date_start:
          format: date
          type: string
        added_date_end:
          format: date
          type: string
        aspect_ratio:
          enum:
          - "43"
          - "169"
          - nonstandard
          type: string
        category:
          type: string
        contributor:
          items:
            type: string
          type: array
        contributor_country:
          items:
            format: country-code-2
            type: string
          type: array
        duration:
          type: integer
        duration_from:
          type: integer
        duration_to:
          type: integer
        fps:
          type: number
        fps_from:
          type: number
        fps_to:
          type: number
        keyword_safe_search:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-13-schema
        language:
          $ref: '#/components/schemas/Language'
        license:
          items:
            default: commercial
            enum:
            - commercial
            - editorial
            example: commercial
            type: string
            x-konfig-original-example: commercial
            x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-15-schema-items
          type: array
        model:
          items:
            type: string
          type: array
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-17-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 0
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-18-schema
        people_age:
          enum:
          - infants
          - children
          - teenagers
          - 20s
          - 30s
          - 40s
          - 50s
          - 60s
          - older
          type: string
        people_ethnicity:
          items:
            enum:
            - african
            - african_american
            - black
            - brazilian
            - chinese
            - caucasian
            - east_asian
            - hispanic
            - japanese
            - middle_eastern
            - native_american
            - pacific_islander
            - south_asian
            - southeast_asian
            - other
            type: string
          type: array
        people_gender:
          enum:
          - male
          - female
          - both
          type: string
        people_number:
          maximum: 4
          minimum: 0
          type: integer
        people_model_released:
          type: boolean
        query:
          type: string
        resolution:
          enum:
          - 4k
          - standard_definition
          - high_definition
          type: string
        safe:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-26-schema
        sort:
          default: popular
          enum:
          - newest
          - popular
          - relevance
          - random
          example: popular
          type: string
          x-konfig-original-example: popular
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-27-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-get-parameters-28-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - added_date
      - added_date_start
      - added_date_end
      - aspect_ratio
      - category
      - contributor
      - contributor_country
      - duration
      - duration_from
      - duration_to
      - fps
      - fps_from
      - fps_to
      - keyword_safe_search
      - language
      - license
      - model
      - page
      - per_page
      - people_age
      - people_ethnicity
      - people_gender
      - people_number
      - people_model_released
      - query
      - resolution
      - safe
      - sort
      - view
    konfig-generated-schema-single-parameter-schema-get--v2-videos-search-suggestions:
      properties:
        query:
          type: string
        limit:
          default: 10
          example: 10
          maximum: 25
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-search-suggestions-get-parameters-1-schema
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - limit
    konfig-generated-schema-single-parameter-schema-get--v2-videos-updated:
      properties:
        start_date:
          format: date
          type: string
        end_date:
          format: date
          type: string
        interval:
          default: 1 HOUR
          example: 1 HOUR
          type: string
          x-konfig-original-example: 1 HOUR
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-2-schema
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-3-schema
        per_page:
          default: 100
          example: 100
          maximum: 2000
          minimum: 1
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-4-schema
        sort:
          default: newest
          enum:
          - newest
          - oldest
          example: newest
          type: string
          x-konfig-original-example: newest
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-updated-get-parameters-5-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - start_date
      - end_date
      - interval
      - page
      - per_page
      - sort
    konfig-generated-schema-single-parameter-schema-get--v2-videos-id:
      properties:
        id:
          format: asset-id
          type: string
        language:
          $ref: '#/components/schemas/Language'
        view:
          default: full
          enum:
          - minimal
          - full
          example: full
          type: string
          x-konfig-original-example: full
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-get-parameters-2-schema
        search_id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - language
      - view
      - search_id
    konfig-generated-schema-single-parameter-schema-get--v2-videos-id-similar:
      properties:
        id:
          format: asset-id
          type: string
        language:
          $ref: '#/components/schemas/Language'
        page:
          default: 1
          example: 1
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-2-schema
        per_page:
          default: 20
          example: 20
          maximum: 500
          minimum: 1
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-3-schema
        view:
          default: minimal
          enum:
          - minimal
          - full
          example: minimal
          type: string
          x-konfig-original-example: minimal
          x-konfig-generated-schema: konfig-generated-schema-paths--v2-videos-id-similar-get-parameters-4-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - language
      - page
      - per_page
      - view
    VLicenseImage:
      description: Data required to license an image
      example:
        editorial_acknowledgement: true
        format: jpg
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: small
        subscription_id: s12345678
      properties:
        auth_cookie:
          $ref: '#/components/schemas/LicenseImage_auth_cookie'
        custom_dimensions:
          $ref: '#/components/schemas/CustomSizeDimensions'
        editorial_acknowledgement:
          description: Set to true to acknowledge the editorial agreement
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-editorial_acknowledgement
        format:
          default: jpg
          description: (Deprecated) Image format to download
          enum:
          - jpg
          example: jpg
          type: string
          x-konfig-original-example: jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-format
        image_id:
          description: Image ID
          example: "123456789"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-image_id
        metadata:
          description: "Additional information for license requests for enterprise\
            \ accounts and API subscriptions, 4 fields maximum; which fields are required\
            \ is set by the account holder"
          example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          maxProperties: 4
          properties: {}
          type: object
          x-konfig-original-example:
            customer_id: "12345"
            geo_location: US
            number_viewed: "15"
            search_term: dog
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseRequestMetadata
        price:
          description: "For revenue-sharing transactions, the final cost to the end\
            \ customer as a floating-point number in the transaction currency, such\
            \ as 12.34"
          example: 12.34
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-price
        search_id:
          description: ID of the search that led to this licensing transaction
          type: string
        show_modal:
          deprecated: true
          description: (Deprecated)
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-show_modal
        size:
          description: Image size to download
          enum:
          - small
          - medium
          - huge
          - custom
          example: small
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-size
        subscription_id:
          description: ID of the subscription to use for the download.
          example: s12345678
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage-properties-subscription_id
        verification_code:
          deprecated: true
          description: (Deprecated)
          type: string
      required:
      - image_id
      type: object
      x-konfig-original-example:
        editorial_acknowledgement: true
        format: jpg
        image_id: "123456789"
        metadata:
          customer_id: "12345"
          geo_location: US
          number_viewed: "15"
          search_term: dog
        price: 12.34
        show_modal: true
        size: small
        subscription_id: s12345678
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LicenseImage
    AudioRenderTimelineSpanRegion_end_type:
      description: A high-level description of how a region ends
      properties:
        beat:
          description: "The beat, relative to the start of the active region, at which\
            \ the end_type begins; in other words, the ending starts on this beat\
            \ of the region"
          example: 24
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-beat
        event:
          description: The type of event
          enum:
          - ending
          - transition
          example: ending
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-event
        type:
          description: The specific action to perform; if the event type is "ending"
            then this must be "ringout" and if event type is "transition" this must
            be "cut"
          enum:
          - ringout
          - cut
          example: ringout
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-end_type-properties-type
      required:
      - beat
      - event
      - type
      type: object
    AudioRenderTimelineSpanRegion_key:
      description: The key signature active at the beginning of the region
      properties:
        tonic_accidental:
          description: "A text representation of the accidental; if this field is\
            \ specified, the tonic_note field should also be specified"
          enum:
          - double flat
          - flat
          - natural
          - sharp
          - double sharp
          type: string
        tonic_note:
          description: "A text representation of the musical note; if this field is\
            \ specified, the tonic_accidental field should also be specified"
          enum:
          - c
          - d
          - e
          - f
          - g
          - a
          - b
          example: c
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-key-properties-tonic_note
        tonic_quality:
          description: "The scale quality; if this field is not specified, the API\
            \ selects the quality automatically"
          enum:
          - major
          - natural_minor
          - harmonic_minor
          - melodic_minor
          - ionian
          - dorian
          - phrygian
          - lydian
          - mixolydian
          - aeolian
          - locrian
          example: major
          type: string
          x-konfig-original-example: major
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AudioRenderTimelineSpanRegion-properties-key-properties-tonic_quality
      type: object
    CatalogCollectionItem_asset:
      properties:
        id:
          example: "1690105108"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-id
        name:
          example: Young couple playing tennis at the court
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-name
        type:
          enum:
          - image
          - video
          - audio
          - editorial-image
          - editorial-video
          example: image
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CatalogCollectionItem-properties-asset-properties-type
      required:
      - type
      type: object
    CatalogCollectionRoleAssignments_roles:
      properties:
        editors:
          items:
            $ref: '#/components/schemas/CatalogCollectionRole'
          type: array
        owners:
          items:
            $ref: '#/components/schemas/CatalogCollectionRole'
          type: array
        viewers:
          items:
            $ref: '#/components/schemas/CatalogCollectionRole'
          type: array
      type: object
    CreateCatalogCollectionItem_asset:
      properties:
        id:
          example: 1690105108X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollectionItem-properties-asset-properties-id
        type:
          example: image
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCatalogCollectionItem-properties-asset-properties-type
      required:
      - type
      type: object
    EditorialUpdatedContent_commercial_status:
      properties:
        reason:
          type: string
        status:
          type: string
    EditorialUpdatedContent_rights:
      properties:
        countries:
          example: "CAN,+DEU,+GBR,+USA,-*"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EditorialUpdatedContent-properties-rights-properties-countries
      type: object
    Image_insights:
      description: AI-powered insights about how the asset will perform for the objective
        and audience
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    Insights_label_performance_inner:
      properties:
        name:
          type: string
        percentile_performance:
          type: number
      type: object
    LicenseImage_auth_cookie:
      description: Cookie object
      example:
        name: The name of the cookie
        value: The value of the cookie
      properties:
        name:
          description: The name of the cookie
          example: The name of the cookie
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie-properties-name
        value:
          description: The value of the cookie
          example: The value of the cookie
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie-properties-value
      required:
      - name
      - value
      type: object
      x-konfig-original-example:
        name: The name of the cookie
        value: The value of the cookie
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Cookie
    ShortsLoopsStems_loops_value:
      properties:
        url:
          type: string
      type: object
    UpdateCatalogCollection_cover_asset:
      properties:
        id:
          example: 123X
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UpdateCatalogCollection-properties-cover_asset-properties-id
      required:
      - id
      type: object
  securitySchemes:
    basic:
      scheme: basic
      type: http
      x-konfig-globally-required-security: false
    customer_accessCode:
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.shutterstock.com/oauth/authorize
          scopes:
            collections.edit: "Grant the ability to create new collections, edit a\
              \ collection, and modify the contents of a collection"
            collections.view: Grant read-only access to a collection and its contents.
            licenses.create: Grant the ability to download and license media on behalf
              of the user.
            licenses.view: Grant read-only access to a user's licenses.
            purchases.view: Grant read-only access to a user's purchase history.
            user.view: '*Originally missing*'
          tokenUrl: https://api.shutterstock.com/v2/oauth/access_token
      type: oauth2
      x-shutterstock-realm: customer
      x-konfig-globally-required-security: false
  x-string-formats:
    asset-id:
      example: "18765466"
      format: A Shutterstock asset ID that starts with a nonzero digit and has any
        number of other digits
      pattern: "^[1-9]\\d*$"
      x-konfig-original-example: "18765466"
    asset-upload-id:
      example: U6ba16262e3bc2db470b8e3cfa8aaab25
      format: A Shutterstock upload ID consisting of the letter U followed by one
        or more other characters
      pattern: ^U\w+$
      x-konfig-original-example: U6ba16262e3bc2db470b8e3cfa8aaab25
    country-code-2:
      example: US
      format: A two-character (ISO 3166 Alpha-2) country code
      pattern: "^(?:[A-Z]{2}|[a-z]{2})$"
      x-konfig-original-example: US
    country-code-3:
      example: USA
      format: A three-character (ISO 3166 Alpha-3) country code
      pattern: "^(?:[A-Z]{3}|[a-z]{3})$"
      x-konfig-original-example: USA
    date:
      example: 2020-05-29T00:00:00.000Z
      format: YYYY-MM-DD
      x-konfig-original-example: 2020-05-29T00:00:00.000Z
    date-time:
      example: 2021-03-29T13:25:13.521Z
      format: YYYY-MM-DDTHH:mm:ssZ
      x-konfig-original-example: 2021-03-29T13:25:13.521Z
    ipv4:
      example: 1.1.1.1
      format: A valid IPv4 address
      x-konfig-original-example: 1.1.1.1
    negated-country-code-2:
      example: NOT US
      format: A NOT followed by a two-character (ISO 3166 Alpha-2) country code
      pattern: "^(NOT\\s)(?:[A-Z]{2}|[a-z]{2})$"
      x-konfig-original-example: NOT US
    uri:
      example: https://wwww.shutterstock.com
      format: A valid URI
      x-konfig-original-example: https://wwww.shutterstock.com

