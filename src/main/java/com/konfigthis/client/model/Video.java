/*
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Category;
import com.konfigthis.client.model.Contributor;
import com.konfigthis.client.model.Model;
import com.konfigthis.client.model.VideoAssets;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Information about a video
 */
@ApiModel(description = "Information about a video")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Video {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ADDED_DATE = "added_date";
  @SerializedName(SERIALIZED_NAME_ADDED_DATE)
  private LocalDate addedDate;

  public static final String SERIALIZED_NAME_AFFILIATE_URL = "affiliate_url";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_URL)
  private URI affiliateUrl;

  public static final String SERIALIZED_NAME_ASPECT = "aspect";
  @SerializedName(SERIALIZED_NAME_ASPECT)
  private Double aspect;

  public static final String SERIALIZED_NAME_ASPECT_RATIO = "aspect_ratio";
  @SerializedName(SERIALIZED_NAME_ASPECT_RATIO)
  private String aspectRatio;

  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private VideoAssets assets;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories = null;

  public static final String SERIALIZED_NAME_CONTRIBUTOR = "contributor";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR)
  private Contributor contributor;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration;

  public static final String SERIALIZED_NAME_HAS_MODEL_RELEASE = "has_model_release";
  @SerializedName(SERIALIZED_NAME_HAS_MODEL_RELEASE)
  private Boolean hasModelRelease;

  public static final String SERIALIZED_NAME_HAS_PROPERTY_RELEASE = "has_property_release";
  @SerializedName(SERIALIZED_NAME_HAS_PROPERTY_RELEASE)
  private Boolean hasPropertyRelease;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ADULT = "is_adult";
  @SerializedName(SERIALIZED_NAME_IS_ADULT)
  private Boolean isAdult;

  public static final String SERIALIZED_NAME_IS_EDITORIAL = "is_editorial";
  @SerializedName(SERIALIZED_NAME_IS_EDITORIAL)
  private Boolean isEditorial;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<String> keywords = null;

  public static final String SERIALIZED_NAME_MEDIA_TYPE = "media_type";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  private String mediaType;

  public static final String SERIALIZED_NAME_MODELS = "models";
  @SerializedName(SERIALIZED_NAME_MODELS)
  private List<Model> models = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public Video() {
  }

  public Video description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Description of this video
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Camera follows hipster millennial young woman in orange jacket running up on top of mountain summit at sunset, jumps on top of rocks, raises arms into air, happy and drunk on life, youth and happiness", value = "Description of this video")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public Video addedDate(LocalDate addedDate) {
    
    
    
    
    this.addedDate = addedDate;
    return this;
  }

   /**
   * Date this video was added to the Shutterstock library
   * @return addedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date this video was added to the Shutterstock library")

  public LocalDate getAddedDate() {
    return addedDate;
  }


  public void setAddedDate(LocalDate addedDate) {
    
    
    
    this.addedDate = addedDate;
  }


  public Video affiliateUrl(URI affiliateUrl) {
    
    
    
    
    this.affiliateUrl = affiliateUrl;
    return this;
  }

   /**
   * Affiliate referral link; appears only for registered affiliate partners
   * @return affiliateUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate referral link; appears only for registered affiliate partners")

  public URI getAffiliateUrl() {
    return affiliateUrl;
  }


  public void setAffiliateUrl(URI affiliateUrl) {
    
    
    
    this.affiliateUrl = affiliateUrl;
  }


  public Video aspect(Double aspect) {
    
    
    
    
    this.aspect = aspect;
    return this;
  }

  public Video aspect(Integer aspect) {
    
    
    
    
    this.aspect = aspect.doubleValue();
    return this;
  }

   /**
   * Aspect ratio of this video in decimal format, such as 0.6667
   * @return aspect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.778", value = "Aspect ratio of this video in decimal format, such as 0.6667")

  public Double getAspect() {
    return aspect;
  }


  public void setAspect(Double aspect) {
    
    
    
    this.aspect = aspect;
  }


  public Video aspectRatio(String aspectRatio) {
    
    
    
    
    this.aspectRatio = aspectRatio;
    return this;
  }

   /**
   * Aspect ratio of the video as a ratio, such as 16:9
   * @return aspectRatio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "969", value = "Aspect ratio of the video as a ratio, such as 16:9")

  public String getAspectRatio() {
    return aspectRatio;
  }


  public void setAspectRatio(String aspectRatio) {
    
    
    
    this.aspectRatio = aspectRatio;
  }


  public Video assets(VideoAssets assets) {
    
    
    
    
    this.assets = assets;
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VideoAssets getAssets() {
    return assets;
  }


  public void setAssets(VideoAssets assets) {
    
    
    
    this.assets = assets;
  }


  public Video categories(List<Category> categories) {
    
    
    
    
    this.categories = categories;
    return this;
  }

  public Video addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * List of categories
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of categories")

  public List<Category> getCategories() {
    return categories;
  }


  public void setCategories(List<Category> categories) {
    
    
    
    this.categories = categories;
  }


  public Video contributor(Contributor contributor) {
    
    
    
    
    this.contributor = contributor;
    return this;
  }

   /**
   * Get contributor
   * @return contributor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Contributor getContributor() {
    return contributor;
  }


  public void setContributor(Contributor contributor) {
    
    
    
    this.contributor = contributor;
  }


  public Video duration(Double duration) {
    
    
    
    
    this.duration = duration;
    return this;
  }

  public Video duration(Integer duration) {
    
    
    
    
    this.duration = duration.doubleValue();
    return this;
  }

   /**
   * Duration of this video, in seconds
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14.081", value = "Duration of this video, in seconds")

  public Double getDuration() {
    return duration;
  }


  public void setDuration(Double duration) {
    
    
    
    this.duration = duration;
  }


  public Video hasModelRelease(Boolean hasModelRelease) {
    
    
    
    
    this.hasModelRelease = hasModelRelease;
    return this;
  }

   /**
   * Whether or not this video has been released for use by the model appearing in it
   * @return hasModelRelease
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether or not this video has been released for use by the model appearing in it")

  public Boolean getHasModelRelease() {
    return hasModelRelease;
  }


  public void setHasModelRelease(Boolean hasModelRelease) {
    
    
    
    this.hasModelRelease = hasModelRelease;
  }


  public Video hasPropertyRelease(Boolean hasPropertyRelease) {
    
    
    
    
    this.hasPropertyRelease = hasPropertyRelease;
    return this;
  }

   /**
   * Whether or not this video has received a release to show the landmark or property appearing in it
   * @return hasPropertyRelease
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether or not this video has received a release to show the landmark or property appearing in it")

  public Boolean getHasPropertyRelease() {
    return hasPropertyRelease;
  }


  public void setHasPropertyRelease(Boolean hasPropertyRelease) {
    
    
    
    this.hasPropertyRelease = hasPropertyRelease;
  }


  public Video id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * ID of the video
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1033184651", required = true, value = "ID of the video")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public Video isAdult(Boolean isAdult) {
    
    
    
    
    this.isAdult = isAdult;
    return this;
  }

   /**
   * Whether or not this video contains adult content
   * @return isAdult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether or not this video contains adult content")

  public Boolean getIsAdult() {
    return isAdult;
  }


  public void setIsAdult(Boolean isAdult) {
    
    
    
    this.isAdult = isAdult;
  }


  public Video isEditorial(Boolean isEditorial) {
    
    
    
    
    this.isEditorial = isEditorial;
    return this;
  }

   /**
   * Whether or not this video is editorial content
   * @return isEditorial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether or not this video is editorial content")

  public Boolean getIsEditorial() {
    return isEditorial;
  }


  public void setIsEditorial(Boolean isEditorial) {
    
    
    
    this.isEditorial = isEditorial;
  }


  public Video keywords(List<String> keywords) {
    
    
    
    
    this.keywords = keywords;
    return this;
  }

  public Video addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Keywords associated with the content of this video
   * @return keywords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Keywords associated with the content of this video")

  public List<String> getKeywords() {
    return keywords;
  }


  public void setKeywords(List<String> keywords) {
    
    
    
    this.keywords = keywords;
  }


  public Video mediaType(String mediaType) {
    
    
    
    
    this.mediaType = mediaType;
    return this;
  }

   /**
   * Media type of this video, should always be \&quot;video\&quot;
   * @return mediaType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "video", required = true, value = "Media type of this video, should always be \"video\"")

  public String getMediaType() {
    return mediaType;
  }


  public void setMediaType(String mediaType) {
    
    
    
    this.mediaType = mediaType;
  }


  public Video models(List<Model> models) {
    
    
    
    
    this.models = models;
    return this;
  }

  public Video addModelsItem(Model modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<>();
    }
    this.models.add(modelsItem);
    return this;
  }

   /**
   * List of models in this video
   * @return models
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of models in this video")

  public List<Model> getModels() {
    return models;
  }


  public void setModels(List<Model> models) {
    
    
    
    this.models = models;
  }


  public Video url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * Link to video information page; included only for certain accounts
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to video information page; included only for certain accounts")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Video instance itself
   */
  public Video putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Video video = (Video) o;
    return Objects.equals(this.description, video.description) &&
        Objects.equals(this.addedDate, video.addedDate) &&
        Objects.equals(this.affiliateUrl, video.affiliateUrl) &&
        Objects.equals(this.aspect, video.aspect) &&
        Objects.equals(this.aspectRatio, video.aspectRatio) &&
        Objects.equals(this.assets, video.assets) &&
        Objects.equals(this.categories, video.categories) &&
        Objects.equals(this.contributor, video.contributor) &&
        Objects.equals(this.duration, video.duration) &&
        Objects.equals(this.hasModelRelease, video.hasModelRelease) &&
        Objects.equals(this.hasPropertyRelease, video.hasPropertyRelease) &&
        Objects.equals(this.id, video.id) &&
        Objects.equals(this.isAdult, video.isAdult) &&
        Objects.equals(this.isEditorial, video.isEditorial) &&
        Objects.equals(this.keywords, video.keywords) &&
        Objects.equals(this.mediaType, video.mediaType) &&
        Objects.equals(this.models, video.models) &&
        Objects.equals(this.url, video.url)&&
        Objects.equals(this.additionalProperties, video.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, addedDate, affiliateUrl, aspect, aspectRatio, assets, categories, contributor, duration, hasModelRelease, hasPropertyRelease, id, isAdult, isEditorial, keywords, mediaType, models, url, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Video {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    addedDate: ").append(toIndentedString(addedDate)).append("\n");
    sb.append("    affiliateUrl: ").append(toIndentedString(affiliateUrl)).append("\n");
    sb.append("    aspect: ").append(toIndentedString(aspect)).append("\n");
    sb.append("    aspectRatio: ").append(toIndentedString(aspectRatio)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    hasModelRelease: ").append(toIndentedString(hasModelRelease)).append("\n");
    sb.append("    hasPropertyRelease: ").append(toIndentedString(hasPropertyRelease)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isAdult: ").append(toIndentedString(isAdult)).append("\n");
    sb.append("    isEditorial: ").append(toIndentedString(isEditorial)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("added_date");
    openapiFields.add("affiliate_url");
    openapiFields.add("aspect");
    openapiFields.add("aspect_ratio");
    openapiFields.add("assets");
    openapiFields.add("categories");
    openapiFields.add("contributor");
    openapiFields.add("duration");
    openapiFields.add("has_model_release");
    openapiFields.add("has_property_release");
    openapiFields.add("id");
    openapiFields.add("is_adult");
    openapiFields.add("is_editorial");
    openapiFields.add("keywords");
    openapiFields.add("media_type");
    openapiFields.add("models");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("contributor");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("media_type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Video
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Video.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Video is not found in the empty JSON string", Video.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Video.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("affiliate_url") != null && !jsonObj.get("affiliate_url").isJsonNull()) && !jsonObj.get("affiliate_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliate_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliate_url").toString()));
      }
      if ((jsonObj.get("aspect_ratio") != null && !jsonObj.get("aspect_ratio").isJsonNull()) && !jsonObj.get("aspect_ratio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aspect_ratio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aspect_ratio").toString()));
      }
      // validate the optional field `assets`
      if (jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) {
        VideoAssets.validateJsonObject(jsonObj.getAsJsonObject("assets"));
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            Category.validateJsonObject(jsonArraycategories.get(i).getAsJsonObject());
          };
        }
      }
      // validate the required field `contributor`
      Contributor.validateJsonObject(jsonObj.getAsJsonObject("contributor"));
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
      }
      if (!jsonObj.get("media_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `media_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("media_type").toString()));
      }
      if (jsonObj.get("models") != null && !jsonObj.get("models").isJsonNull()) {
        JsonArray jsonArraymodels = jsonObj.getAsJsonArray("models");
        if (jsonArraymodels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("models").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `models` to be an array in the JSON string but got `%s`", jsonObj.get("models").toString()));
          }

          // validate the optional field `models` (array)
          for (int i = 0; i < jsonArraymodels.size(); i++) {
            Model.validateJsonObject(jsonArraymodels.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Video.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Video' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Video> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Video.class));

       return (TypeAdapter<T>) new TypeAdapter<Video>() {
           @Override
           public void write(JsonWriter out, Video value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Video read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Video instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Video given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Video
  * @throws IOException if the JSON string is invalid with respect to Video
  */
  public static Video fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Video.class);
  }

 /**
  * Convert an instance of Video to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

